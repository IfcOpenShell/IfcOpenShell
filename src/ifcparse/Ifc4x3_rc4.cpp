/********************************************************************************
 *                                                                              *
 * This file is part of IfcOpenShell.                                           *
 *                                                                              *
 * IfcOpenShell is free software: you can redistribute it and/or modify         *
 * it under the terms of the Lesser GNU General Public License as published by  *
 * the Free Software Foundation, either version 3.0 of the License, or          *
 * (at your option) any later version.                                          *
 *                                                                              *
 * IfcOpenShell is distributed in the hope that it will be useful,              *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of               *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                 *
 * Lesser GNU General Public License for more details.                          *
 *                                                                              *
 * You should have received a copy of the Lesser GNU General Public License     *
 * along with this program. If not, see <http://www.gnu.org/licenses/>.         *
 *                                                                              *
 ********************************************************************************/

/********************************************************************************
 *                                                                              *
 * This file has been generated from IFC4x3_RC2.exp. Do not make modifications  *
 * but instead modify the python script that has been used to generate this.    *
 *                                                                              *
 ********************************************************************************/

#include "../ifcparse/Ifc4x3_rc4.h"
#include "../ifcparse/IfcSchema.h"
#include "../ifcparse/IfcException.h"
#include "../ifcparse/IfcFile.h"

#include <map>

const char* const Ifc4x3_rc4::Identifier = "IFC4X3_RC4";

using namespace IfcParse;

// External definitions
extern declaration* IFC4X3_RC4_types[1316];


const IfcParse::enumeration_type& Ifc4x3_rc4::IfcActionRequestTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[3]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcActionRequestTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[3]); }

Ifc4x3_rc4::IfcActionRequestTypeEnum::IfcActionRequestTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcActionRequestTypeEnum::IfcActionRequestTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcActionRequestTypeEnum::IfcActionRequestTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcActionRequestTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcActionRequestTypeEnum::IfcActionRequestTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcActionRequestTypeEnum::Value Ifc4x3_rc4::IfcActionRequestTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcActionRequestTypeEnum::Value) Ifc4x3_rc4::IfcActionRequestTypeEnum::IfcActionRequestTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcActionRequestTypeEnum::operator Ifc4x3_rc4::IfcActionRequestTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcActionRequestTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcActionSourceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[4]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcActionSourceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[4]); }

Ifc4x3_rc4::IfcActionSourceTypeEnum::IfcActionSourceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcActionSourceTypeEnum::IfcActionSourceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcActionSourceTypeEnum::IfcActionSourceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcActionSourceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcActionSourceTypeEnum::IfcActionSourceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcActionSourceTypeEnum::Value Ifc4x3_rc4::IfcActionSourceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcActionSourceTypeEnum::Value) Ifc4x3_rc4::IfcActionSourceTypeEnum::IfcActionSourceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcActionSourceTypeEnum::operator Ifc4x3_rc4::IfcActionSourceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcActionSourceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcActionTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[5]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcActionTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[5]); }

Ifc4x3_rc4::IfcActionTypeEnum::IfcActionTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcActionTypeEnum::IfcActionTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcActionTypeEnum::IfcActionTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcActionTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcActionTypeEnum::IfcActionTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcActionTypeEnum::Value Ifc4x3_rc4::IfcActionTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcActionTypeEnum::Value) Ifc4x3_rc4::IfcActionTypeEnum::IfcActionTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcActionTypeEnum::operator Ifc4x3_rc4::IfcActionTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcActionTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcActuatorTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[11]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcActuatorTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[11]); }

Ifc4x3_rc4::IfcActuatorTypeEnum::IfcActuatorTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcActuatorTypeEnum::IfcActuatorTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcActuatorTypeEnum::IfcActuatorTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcActuatorTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcActuatorTypeEnum::IfcActuatorTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcActuatorTypeEnum::Value Ifc4x3_rc4::IfcActuatorTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcActuatorTypeEnum::Value) Ifc4x3_rc4::IfcActuatorTypeEnum::IfcActuatorTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcActuatorTypeEnum::operator Ifc4x3_rc4::IfcActuatorTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcActuatorTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAddressTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[13]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAddressTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[13]); }

Ifc4x3_rc4::IfcAddressTypeEnum::IfcAddressTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAddressTypeEnum::IfcAddressTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAddressTypeEnum::IfcAddressTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAddressTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAddressTypeEnum::IfcAddressTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAddressTypeEnum::Value Ifc4x3_rc4::IfcAddressTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAddressTypeEnum::Value) Ifc4x3_rc4::IfcAddressTypeEnum::IfcAddressTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAddressTypeEnum::operator Ifc4x3_rc4::IfcAddressTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAddressTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[20]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[20]); }

Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::IfcAirTerminalBoxTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::IfcAirTerminalBoxTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::IfcAirTerminalBoxTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::IfcAirTerminalBoxTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Value Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Value) Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::IfcAirTerminalBoxTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::operator Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAirTerminalTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[22]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAirTerminalTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[22]); }

Ifc4x3_rc4::IfcAirTerminalTypeEnum::IfcAirTerminalTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAirTerminalTypeEnum::IfcAirTerminalTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAirTerminalTypeEnum::IfcAirTerminalTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAirTerminalTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAirTerminalTypeEnum::IfcAirTerminalTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAirTerminalTypeEnum::Value Ifc4x3_rc4::IfcAirTerminalTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAirTerminalTypeEnum::Value) Ifc4x3_rc4::IfcAirTerminalTypeEnum::IfcAirTerminalTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAirTerminalTypeEnum::operator Ifc4x3_rc4::IfcAirTerminalTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAirTerminalTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[25]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[25]); }

Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::IfcAirToAirHeatRecoveryTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::IfcAirToAirHeatRecoveryTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::IfcAirToAirHeatRecoveryTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::IfcAirToAirHeatRecoveryTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Value Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Value) Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::IfcAirToAirHeatRecoveryTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::operator Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAlarmTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[28]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAlarmTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[28]); }

Ifc4x3_rc4::IfcAlarmTypeEnum::IfcAlarmTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAlarmTypeEnum::IfcAlarmTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAlarmTypeEnum::IfcAlarmTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAlarmTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAlarmTypeEnum::IfcAlarmTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAlarmTypeEnum::Value Ifc4x3_rc4::IfcAlarmTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAlarmTypeEnum::Value) Ifc4x3_rc4::IfcAlarmTypeEnum::IfcAlarmTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAlarmTypeEnum::operator Ifc4x3_rc4::IfcAlarmTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAlarmTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[32]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[32]); }

Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::IfcAlignmentCantSegmentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::IfcAlignmentCantSegmentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::IfcAlignmentCantSegmentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::IfcAlignmentCantSegmentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::Value Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::Value) Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::IfcAlignmentCantSegmentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::operator Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[35]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[35]); }

Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::IfcAlignmentHorizontalSegmentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::IfcAlignmentHorizontalSegmentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::IfcAlignmentHorizontalSegmentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::IfcAlignmentHorizontalSegmentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::Value Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::Value) Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::IfcAlignmentHorizontalSegmentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::operator Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAlignmentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[38]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAlignmentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[38]); }

Ifc4x3_rc4::IfcAlignmentTypeEnum::IfcAlignmentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAlignmentTypeEnum::IfcAlignmentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAlignmentTypeEnum::IfcAlignmentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAlignmentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAlignmentTypeEnum::IfcAlignmentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAlignmentTypeEnum::Value Ifc4x3_rc4::IfcAlignmentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAlignmentTypeEnum::Value) Ifc4x3_rc4::IfcAlignmentTypeEnum::IfcAlignmentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAlignmentTypeEnum::operator Ifc4x3_rc4::IfcAlignmentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAlignmentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[41]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[41]); }

Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::IfcAlignmentVerticalSegmentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::IfcAlignmentVerticalSegmentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::IfcAlignmentVerticalSegmentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::IfcAlignmentVerticalSegmentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::Value Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::Value) Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::IfcAlignmentVerticalSegmentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::operator Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAnalysisModelTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[43]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAnalysisModelTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[43]); }

Ifc4x3_rc4::IfcAnalysisModelTypeEnum::IfcAnalysisModelTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAnalysisModelTypeEnum::IfcAnalysisModelTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAnalysisModelTypeEnum::IfcAnalysisModelTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAnalysisModelTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAnalysisModelTypeEnum::IfcAnalysisModelTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAnalysisModelTypeEnum::Value Ifc4x3_rc4::IfcAnalysisModelTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAnalysisModelTypeEnum::Value) Ifc4x3_rc4::IfcAnalysisModelTypeEnum::IfcAnalysisModelTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAnalysisModelTypeEnum::operator Ifc4x3_rc4::IfcAnalysisModelTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAnalysisModelTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[44]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[44]); }

Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::IfcAnalysisTheoryTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::IfcAnalysisTheoryTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::IfcAnalysisTheoryTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::IfcAnalysisTheoryTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::Value Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::Value) Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::IfcAnalysisTheoryTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::operator Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAnnotationTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[48]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAnnotationTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[48]); }

Ifc4x3_rc4::IfcAnnotationTypeEnum::IfcAnnotationTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAnnotationTypeEnum::IfcAnnotationTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAnnotationTypeEnum::IfcAnnotationTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAnnotationTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAnnotationTypeEnum::IfcAnnotationTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAnnotationTypeEnum::Value Ifc4x3_rc4::IfcAnnotationTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAnnotationTypeEnum::Value) Ifc4x3_rc4::IfcAnnotationTypeEnum::IfcAnnotationTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAnnotationTypeEnum::operator Ifc4x3_rc4::IfcAnnotationTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAnnotationTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcArithmeticOperatorEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[60]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcArithmeticOperatorEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[60]); }

Ifc4x3_rc4::IfcArithmeticOperatorEnum::IfcArithmeticOperatorEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcArithmeticOperatorEnum::IfcArithmeticOperatorEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcArithmeticOperatorEnum::IfcArithmeticOperatorEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcArithmeticOperatorEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcArithmeticOperatorEnum::IfcArithmeticOperatorEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcArithmeticOperatorEnum::Value Ifc4x3_rc4::IfcArithmeticOperatorEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcArithmeticOperatorEnum::Value) Ifc4x3_rc4::IfcArithmeticOperatorEnum::IfcArithmeticOperatorEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcArithmeticOperatorEnum::operator Ifc4x3_rc4::IfcArithmeticOperatorEnum::Value() const {
    return (Ifc4x3_rc4::IfcArithmeticOperatorEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAssemblyPlaceEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[61]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAssemblyPlaceEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[61]); }

Ifc4x3_rc4::IfcAssemblyPlaceEnum::IfcAssemblyPlaceEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAssemblyPlaceEnum::IfcAssemblyPlaceEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAssemblyPlaceEnum::IfcAssemblyPlaceEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAssemblyPlaceEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAssemblyPlaceEnum::IfcAssemblyPlaceEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAssemblyPlaceEnum::Value Ifc4x3_rc4::IfcAssemblyPlaceEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAssemblyPlaceEnum::Value) Ifc4x3_rc4::IfcAssemblyPlaceEnum::IfcAssemblyPlaceEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAssemblyPlaceEnum::operator Ifc4x3_rc4::IfcAssemblyPlaceEnum::Value() const {
    return (Ifc4x3_rc4::IfcAssemblyPlaceEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[66]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[66]); }

Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::IfcAudioVisualApplianceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::IfcAudioVisualApplianceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::IfcAudioVisualApplianceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::IfcAudioVisualApplianceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Value Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Value) Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::IfcAudioVisualApplianceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::operator Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBSplineCurveForm::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[109]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBSplineCurveForm::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[109]); }

Ifc4x3_rc4::IfcBSplineCurveForm::IfcBSplineCurveForm(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBSplineCurveForm::IfcBSplineCurveForm(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBSplineCurveForm::IfcBSplineCurveForm(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBSplineCurveForm::ToString(Value v) {
    return Ifc4x3_rc4::IfcBSplineCurveForm::IfcBSplineCurveForm::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBSplineCurveForm::Value Ifc4x3_rc4::IfcBSplineCurveForm::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBSplineCurveForm::Value) Ifc4x3_rc4::IfcBSplineCurveForm::IfcBSplineCurveForm::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBSplineCurveForm::operator Ifc4x3_rc4::IfcBSplineCurveForm::Value() const {
    return (Ifc4x3_rc4::IfcBSplineCurveForm::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBSplineSurfaceForm::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[112]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBSplineSurfaceForm::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[112]); }

Ifc4x3_rc4::IfcBSplineSurfaceForm::IfcBSplineSurfaceForm(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBSplineSurfaceForm::IfcBSplineSurfaceForm(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBSplineSurfaceForm::IfcBSplineSurfaceForm(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBSplineSurfaceForm::ToString(Value v) {
    return Ifc4x3_rc4::IfcBSplineSurfaceForm::IfcBSplineSurfaceForm::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBSplineSurfaceForm::Value Ifc4x3_rc4::IfcBSplineSurfaceForm::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBSplineSurfaceForm::Value) Ifc4x3_rc4::IfcBSplineSurfaceForm::IfcBSplineSurfaceForm::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBSplineSurfaceForm::operator Ifc4x3_rc4::IfcBSplineSurfaceForm::Value() const {
    return (Ifc4x3_rc4::IfcBSplineSurfaceForm::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBeamTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[75]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBeamTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[75]); }

Ifc4x3_rc4::IfcBeamTypeEnum::IfcBeamTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBeamTypeEnum::IfcBeamTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBeamTypeEnum::IfcBeamTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBeamTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBeamTypeEnum::IfcBeamTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBeamTypeEnum::Value Ifc4x3_rc4::IfcBeamTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBeamTypeEnum::Value) Ifc4x3_rc4::IfcBeamTypeEnum::IfcBeamTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBeamTypeEnum::operator Ifc4x3_rc4::IfcBeamTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcBeamTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[78]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[78]); }

Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::IfcBearingTypeDisplacementEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::IfcBearingTypeDisplacementEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::IfcBearingTypeDisplacementEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::IfcBearingTypeDisplacementEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::Value Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::Value) Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::IfcBearingTypeDisplacementEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::operator Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::Value() const {
    return (Ifc4x3_rc4::IfcBearingTypeDisplacementEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBearingTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[79]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBearingTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[79]); }

Ifc4x3_rc4::IfcBearingTypeEnum::IfcBearingTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBearingTypeEnum::IfcBearingTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBearingTypeEnum::IfcBearingTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBearingTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBearingTypeEnum::IfcBearingTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBearingTypeEnum::Value Ifc4x3_rc4::IfcBearingTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBearingTypeEnum::Value) Ifc4x3_rc4::IfcBearingTypeEnum::IfcBearingTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBearingTypeEnum::operator Ifc4x3_rc4::IfcBearingTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcBearingTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBenchmarkEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[80]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBenchmarkEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[80]); }

Ifc4x3_rc4::IfcBenchmarkEnum::IfcBenchmarkEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBenchmarkEnum::IfcBenchmarkEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBenchmarkEnum::IfcBenchmarkEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBenchmarkEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBenchmarkEnum::IfcBenchmarkEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBenchmarkEnum::Value Ifc4x3_rc4::IfcBenchmarkEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBenchmarkEnum::Value) Ifc4x3_rc4::IfcBenchmarkEnum::IfcBenchmarkEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBenchmarkEnum::operator Ifc4x3_rc4::IfcBenchmarkEnum::Value() const {
    return (Ifc4x3_rc4::IfcBenchmarkEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBoilerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[87]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBoilerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[87]); }

Ifc4x3_rc4::IfcBoilerTypeEnum::IfcBoilerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBoilerTypeEnum::IfcBoilerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBoilerTypeEnum::IfcBoilerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBoilerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBoilerTypeEnum::IfcBoilerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBoilerTypeEnum::Value Ifc4x3_rc4::IfcBoilerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBoilerTypeEnum::Value) Ifc4x3_rc4::IfcBoilerTypeEnum::IfcBoilerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBoilerTypeEnum::operator Ifc4x3_rc4::IfcBoilerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcBoilerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBooleanOperator::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[91]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBooleanOperator::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[91]); }

Ifc4x3_rc4::IfcBooleanOperator::IfcBooleanOperator(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBooleanOperator::IfcBooleanOperator(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBooleanOperator::IfcBooleanOperator(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBooleanOperator::ToString(Value v) {
    return Ifc4x3_rc4::IfcBooleanOperator::IfcBooleanOperator::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBooleanOperator::Value Ifc4x3_rc4::IfcBooleanOperator::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBooleanOperator::Value) Ifc4x3_rc4::IfcBooleanOperator::IfcBooleanOperator::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBooleanOperator::operator Ifc4x3_rc4::IfcBooleanOperator::Value() const {
    return (Ifc4x3_rc4::IfcBooleanOperator::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBridgePartTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[106]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBridgePartTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[106]); }

Ifc4x3_rc4::IfcBridgePartTypeEnum::IfcBridgePartTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBridgePartTypeEnum::IfcBridgePartTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBridgePartTypeEnum::IfcBridgePartTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBridgePartTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBridgePartTypeEnum::IfcBridgePartTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBridgePartTypeEnum::Value Ifc4x3_rc4::IfcBridgePartTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBridgePartTypeEnum::Value) Ifc4x3_rc4::IfcBridgePartTypeEnum::IfcBridgePartTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBridgePartTypeEnum::operator Ifc4x3_rc4::IfcBridgePartTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcBridgePartTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBridgeTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[107]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBridgeTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[107]); }

Ifc4x3_rc4::IfcBridgeTypeEnum::IfcBridgeTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBridgeTypeEnum::IfcBridgeTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBridgeTypeEnum::IfcBridgeTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBridgeTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBridgeTypeEnum::IfcBridgeTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBridgeTypeEnum::Value Ifc4x3_rc4::IfcBridgeTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBridgeTypeEnum::Value) Ifc4x3_rc4::IfcBridgeTypeEnum::IfcBridgeTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBridgeTypeEnum::operator Ifc4x3_rc4::IfcBridgeTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcBridgeTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[117]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[117]); }

Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::IfcBuildingElementPartTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::IfcBuildingElementPartTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::IfcBuildingElementPartTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::IfcBuildingElementPartTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Value Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Value) Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::IfcBuildingElementPartTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::operator Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[120]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[120]); }

Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::IfcBuildingElementProxyTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::IfcBuildingElementProxyTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::IfcBuildingElementProxyTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::IfcBuildingElementProxyTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Value Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Value) Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::IfcBuildingElementProxyTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::operator Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBuildingSystemTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[123]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBuildingSystemTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[123]); }

Ifc4x3_rc4::IfcBuildingSystemTypeEnum::IfcBuildingSystemTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBuildingSystemTypeEnum::IfcBuildingSystemTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBuildingSystemTypeEnum::IfcBuildingSystemTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBuildingSystemTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBuildingSystemTypeEnum::IfcBuildingSystemTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBuildingSystemTypeEnum::Value Ifc4x3_rc4::IfcBuildingSystemTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBuildingSystemTypeEnum::Value) Ifc4x3_rc4::IfcBuildingSystemTypeEnum::IfcBuildingSystemTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBuildingSystemTypeEnum::operator Ifc4x3_rc4::IfcBuildingSystemTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcBuildingSystemTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBuiltSystemTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[127]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBuiltSystemTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[127]); }

Ifc4x3_rc4::IfcBuiltSystemTypeEnum::IfcBuiltSystemTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBuiltSystemTypeEnum::IfcBuiltSystemTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBuiltSystemTypeEnum::IfcBuiltSystemTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBuiltSystemTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBuiltSystemTypeEnum::IfcBuiltSystemTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBuiltSystemTypeEnum::Value Ifc4x3_rc4::IfcBuiltSystemTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBuiltSystemTypeEnum::Value) Ifc4x3_rc4::IfcBuiltSystemTypeEnum::IfcBuiltSystemTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBuiltSystemTypeEnum::operator Ifc4x3_rc4::IfcBuiltSystemTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcBuiltSystemTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBurnerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[130]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcBurnerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[130]); }

Ifc4x3_rc4::IfcBurnerTypeEnum::IfcBurnerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcBurnerTypeEnum::IfcBurnerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcBurnerTypeEnum::IfcBurnerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcBurnerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcBurnerTypeEnum::IfcBurnerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcBurnerTypeEnum::Value Ifc4x3_rc4::IfcBurnerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcBurnerTypeEnum::Value) Ifc4x3_rc4::IfcBurnerTypeEnum::IfcBurnerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcBurnerTypeEnum::operator Ifc4x3_rc4::IfcBurnerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcBurnerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[133]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[133]); }

Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::IfcCableCarrierFittingTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::IfcCableCarrierFittingTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::IfcCableCarrierFittingTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::IfcCableCarrierFittingTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Value Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Value) Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::IfcCableCarrierFittingTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::operator Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[136]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[136]); }

Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::IfcCableCarrierSegmentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::IfcCableCarrierSegmentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::IfcCableCarrierSegmentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::IfcCableCarrierSegmentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Value Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Value) Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::IfcCableCarrierSegmentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::operator Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCableFittingTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[139]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCableFittingTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[139]); }

Ifc4x3_rc4::IfcCableFittingTypeEnum::IfcCableFittingTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCableFittingTypeEnum::IfcCableFittingTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCableFittingTypeEnum::IfcCableFittingTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCableFittingTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCableFittingTypeEnum::IfcCableFittingTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCableFittingTypeEnum::Value Ifc4x3_rc4::IfcCableFittingTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCableFittingTypeEnum::Value) Ifc4x3_rc4::IfcCableFittingTypeEnum::IfcCableFittingTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCableFittingTypeEnum::operator Ifc4x3_rc4::IfcCableFittingTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCableFittingTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCableSegmentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[142]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCableSegmentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[142]); }

Ifc4x3_rc4::IfcCableSegmentTypeEnum::IfcCableSegmentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCableSegmentTypeEnum::IfcCableSegmentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCableSegmentTypeEnum::IfcCableSegmentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCableSegmentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCableSegmentTypeEnum::IfcCableSegmentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCableSegmentTypeEnum::Value Ifc4x3_rc4::IfcCableSegmentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCableSegmentTypeEnum::Value) Ifc4x3_rc4::IfcCableSegmentTypeEnum::IfcCableSegmentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCableSegmentTypeEnum::operator Ifc4x3_rc4::IfcCableSegmentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCableSegmentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[145]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[145]); }

Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::IfcCaissonFoundationTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::IfcCaissonFoundationTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::IfcCaissonFoundationTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::IfcCaissonFoundationTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Value Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Value) Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::IfcCaissonFoundationTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::operator Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcChangeActionEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[157]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcChangeActionEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[157]); }

Ifc4x3_rc4::IfcChangeActionEnum::IfcChangeActionEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcChangeActionEnum::IfcChangeActionEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcChangeActionEnum::IfcChangeActionEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcChangeActionEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcChangeActionEnum::IfcChangeActionEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcChangeActionEnum::Value Ifc4x3_rc4::IfcChangeActionEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcChangeActionEnum::Value) Ifc4x3_rc4::IfcChangeActionEnum::IfcChangeActionEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcChangeActionEnum::operator Ifc4x3_rc4::IfcChangeActionEnum::Value() const {
    return (Ifc4x3_rc4::IfcChangeActionEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcChillerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[160]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcChillerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[160]); }

Ifc4x3_rc4::IfcChillerTypeEnum::IfcChillerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcChillerTypeEnum::IfcChillerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcChillerTypeEnum::IfcChillerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcChillerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcChillerTypeEnum::IfcChillerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcChillerTypeEnum::Value Ifc4x3_rc4::IfcChillerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcChillerTypeEnum::Value) Ifc4x3_rc4::IfcChillerTypeEnum::IfcChillerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcChillerTypeEnum::operator Ifc4x3_rc4::IfcChillerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcChillerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcChimneyTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[163]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcChimneyTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[163]); }

Ifc4x3_rc4::IfcChimneyTypeEnum::IfcChimneyTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcChimneyTypeEnum::IfcChimneyTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcChimneyTypeEnum::IfcChimneyTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcChimneyTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcChimneyTypeEnum::IfcChimneyTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcChimneyTypeEnum::Value Ifc4x3_rc4::IfcChimneyTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcChimneyTypeEnum::Value) Ifc4x3_rc4::IfcChimneyTypeEnum::IfcChimneyTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcChimneyTypeEnum::operator Ifc4x3_rc4::IfcChimneyTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcChimneyTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCoilTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[177]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCoilTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[177]); }

Ifc4x3_rc4::IfcCoilTypeEnum::IfcCoilTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCoilTypeEnum::IfcCoilTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCoilTypeEnum::IfcCoilTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCoilTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCoilTypeEnum::IfcCoilTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCoilTypeEnum::Value Ifc4x3_rc4::IfcCoilTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCoilTypeEnum::Value) Ifc4x3_rc4::IfcCoilTypeEnum::IfcCoilTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCoilTypeEnum::operator Ifc4x3_rc4::IfcCoilTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCoilTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcColumnTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[186]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcColumnTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[186]); }

Ifc4x3_rc4::IfcColumnTypeEnum::IfcColumnTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcColumnTypeEnum::IfcColumnTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcColumnTypeEnum::IfcColumnTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcColumnTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcColumnTypeEnum::IfcColumnTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcColumnTypeEnum::Value Ifc4x3_rc4::IfcColumnTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcColumnTypeEnum::Value) Ifc4x3_rc4::IfcColumnTypeEnum::IfcColumnTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcColumnTypeEnum::operator Ifc4x3_rc4::IfcColumnTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcColumnTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[189]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[189]); }

Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::IfcCommunicationsApplianceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::IfcCommunicationsApplianceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::IfcCommunicationsApplianceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::IfcCommunicationsApplianceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Value Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Value) Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::IfcCommunicationsApplianceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::operator Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[193]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[193]); }

Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::IfcComplexPropertyTemplateTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::IfcComplexPropertyTemplateTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::IfcComplexPropertyTemplateTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::IfcComplexPropertyTemplateTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::Value Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::Value) Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::IfcComplexPropertyTemplateTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::operator Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCompressorTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[201]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCompressorTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[201]); }

Ifc4x3_rc4::IfcCompressorTypeEnum::IfcCompressorTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCompressorTypeEnum::IfcCompressorTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCompressorTypeEnum::IfcCompressorTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCompressorTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCompressorTypeEnum::IfcCompressorTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCompressorTypeEnum::Value Ifc4x3_rc4::IfcCompressorTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCompressorTypeEnum::Value) Ifc4x3_rc4::IfcCompressorTypeEnum::IfcCompressorTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCompressorTypeEnum::operator Ifc4x3_rc4::IfcCompressorTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCompressorTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCondenserTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[204]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCondenserTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[204]); }

Ifc4x3_rc4::IfcCondenserTypeEnum::IfcCondenserTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCondenserTypeEnum::IfcCondenserTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCondenserTypeEnum::IfcCondenserTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCondenserTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCondenserTypeEnum::IfcCondenserTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCondenserTypeEnum::Value Ifc4x3_rc4::IfcCondenserTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCondenserTypeEnum::Value) Ifc4x3_rc4::IfcCondenserTypeEnum::IfcCondenserTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCondenserTypeEnum::operator Ifc4x3_rc4::IfcCondenserTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCondenserTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConnectionTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[212]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConnectionTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[212]); }

Ifc4x3_rc4::IfcConnectionTypeEnum::IfcConnectionTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcConnectionTypeEnum::IfcConnectionTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcConnectionTypeEnum::IfcConnectionTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcConnectionTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcConnectionTypeEnum::IfcConnectionTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcConnectionTypeEnum::Value Ifc4x3_rc4::IfcConnectionTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcConnectionTypeEnum::Value) Ifc4x3_rc4::IfcConnectionTypeEnum::IfcConnectionTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcConnectionTypeEnum::operator Ifc4x3_rc4::IfcConnectionTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcConnectionTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConstraintEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[215]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConstraintEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[215]); }

Ifc4x3_rc4::IfcConstraintEnum::IfcConstraintEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcConstraintEnum::IfcConstraintEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcConstraintEnum::IfcConstraintEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcConstraintEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcConstraintEnum::IfcConstraintEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcConstraintEnum::Value Ifc4x3_rc4::IfcConstraintEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcConstraintEnum::Value) Ifc4x3_rc4::IfcConstraintEnum::IfcConstraintEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcConstraintEnum::operator Ifc4x3_rc4::IfcConstraintEnum::Value() const {
    return (Ifc4x3_rc4::IfcConstraintEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[218]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[218]); }

Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::IfcConstructionEquipmentResourceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::IfcConstructionEquipmentResourceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::IfcConstructionEquipmentResourceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::IfcConstructionEquipmentResourceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Value Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Value) Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::IfcConstructionEquipmentResourceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::operator Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[221]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[221]); }

Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::IfcConstructionMaterialResourceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::IfcConstructionMaterialResourceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::IfcConstructionMaterialResourceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::IfcConstructionMaterialResourceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Value Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Value) Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::IfcConstructionMaterialResourceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::operator Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[224]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[224]); }

Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::IfcConstructionProductResourceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::IfcConstructionProductResourceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::IfcConstructionProductResourceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::IfcConstructionProductResourceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Value Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Value) Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::IfcConstructionProductResourceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::operator Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcControllerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[233]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcControllerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[233]); }

Ifc4x3_rc4::IfcControllerTypeEnum::IfcControllerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcControllerTypeEnum::IfcControllerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcControllerTypeEnum::IfcControllerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcControllerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcControllerTypeEnum::IfcControllerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcControllerTypeEnum::Value Ifc4x3_rc4::IfcControllerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcControllerTypeEnum::Value) Ifc4x3_rc4::IfcControllerTypeEnum::IfcControllerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcControllerTypeEnum::operator Ifc4x3_rc4::IfcControllerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcControllerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[238]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[238]); }

Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::IfcConveyorSegmentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::IfcConveyorSegmentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::IfcConveyorSegmentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::IfcConveyorSegmentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Value Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Value) Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::IfcConveyorSegmentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::operator Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCooledBeamTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[241]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCooledBeamTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[241]); }

Ifc4x3_rc4::IfcCooledBeamTypeEnum::IfcCooledBeamTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCooledBeamTypeEnum::IfcCooledBeamTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCooledBeamTypeEnum::IfcCooledBeamTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCooledBeamTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCooledBeamTypeEnum::IfcCooledBeamTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCooledBeamTypeEnum::Value Ifc4x3_rc4::IfcCooledBeamTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCooledBeamTypeEnum::Value) Ifc4x3_rc4::IfcCooledBeamTypeEnum::IfcCooledBeamTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCooledBeamTypeEnum::operator Ifc4x3_rc4::IfcCooledBeamTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCooledBeamTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCoolingTowerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[244]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[244]); }

Ifc4x3_rc4::IfcCoolingTowerTypeEnum::IfcCoolingTowerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCoolingTowerTypeEnum::IfcCoolingTowerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCoolingTowerTypeEnum::IfcCoolingTowerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCoolingTowerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCoolingTowerTypeEnum::IfcCoolingTowerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Value Ifc4x3_rc4::IfcCoolingTowerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Value) Ifc4x3_rc4::IfcCoolingTowerTypeEnum::IfcCoolingTowerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCoolingTowerTypeEnum::operator Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCostItemTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[250]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCostItemTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[250]); }

Ifc4x3_rc4::IfcCostItemTypeEnum::IfcCostItemTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCostItemTypeEnum::IfcCostItemTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCostItemTypeEnum::IfcCostItemTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCostItemTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCostItemTypeEnum::IfcCostItemTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCostItemTypeEnum::Value Ifc4x3_rc4::IfcCostItemTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCostItemTypeEnum::Value) Ifc4x3_rc4::IfcCostItemTypeEnum::IfcCostItemTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCostItemTypeEnum::operator Ifc4x3_rc4::IfcCostItemTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCostItemTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCostScheduleTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[252]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCostScheduleTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[252]); }

Ifc4x3_rc4::IfcCostScheduleTypeEnum::IfcCostScheduleTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCostScheduleTypeEnum::IfcCostScheduleTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCostScheduleTypeEnum::IfcCostScheduleTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCostScheduleTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCostScheduleTypeEnum::IfcCostScheduleTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCostScheduleTypeEnum::Value Ifc4x3_rc4::IfcCostScheduleTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCostScheduleTypeEnum::Value) Ifc4x3_rc4::IfcCostScheduleTypeEnum::IfcCostScheduleTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCostScheduleTypeEnum::operator Ifc4x3_rc4::IfcCostScheduleTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCostScheduleTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCourseTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[257]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCourseTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[257]); }

Ifc4x3_rc4::IfcCourseTypeEnum::IfcCourseTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCourseTypeEnum::IfcCourseTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCourseTypeEnum::IfcCourseTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCourseTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCourseTypeEnum::IfcCourseTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCourseTypeEnum::Value Ifc4x3_rc4::IfcCourseTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCourseTypeEnum::Value) Ifc4x3_rc4::IfcCourseTypeEnum::IfcCourseTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCourseTypeEnum::operator Ifc4x3_rc4::IfcCourseTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCourseTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCoveringTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[260]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCoveringTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[260]); }

Ifc4x3_rc4::IfcCoveringTypeEnum::IfcCoveringTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCoveringTypeEnum::IfcCoveringTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCoveringTypeEnum::IfcCoveringTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCoveringTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCoveringTypeEnum::IfcCoveringTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCoveringTypeEnum::Value Ifc4x3_rc4::IfcCoveringTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCoveringTypeEnum::Value) Ifc4x3_rc4::IfcCoveringTypeEnum::IfcCoveringTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCoveringTypeEnum::operator Ifc4x3_rc4::IfcCoveringTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCoveringTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCrewResourceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[263]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCrewResourceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[263]); }

Ifc4x3_rc4::IfcCrewResourceTypeEnum::IfcCrewResourceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCrewResourceTypeEnum::IfcCrewResourceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCrewResourceTypeEnum::IfcCrewResourceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCrewResourceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCrewResourceTypeEnum::IfcCrewResourceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCrewResourceTypeEnum::Value Ifc4x3_rc4::IfcCrewResourceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCrewResourceTypeEnum::Value) Ifc4x3_rc4::IfcCrewResourceTypeEnum::IfcCrewResourceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCrewResourceTypeEnum::operator Ifc4x3_rc4::IfcCrewResourceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCrewResourceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCurtainWallTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[271]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCurtainWallTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[271]); }

Ifc4x3_rc4::IfcCurtainWallTypeEnum::IfcCurtainWallTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCurtainWallTypeEnum::IfcCurtainWallTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCurtainWallTypeEnum::IfcCurtainWallTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCurtainWallTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCurtainWallTypeEnum::IfcCurtainWallTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCurtainWallTypeEnum::Value Ifc4x3_rc4::IfcCurtainWallTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCurtainWallTypeEnum::Value) Ifc4x3_rc4::IfcCurtainWallTypeEnum::IfcCurtainWallTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCurtainWallTypeEnum::operator Ifc4x3_rc4::IfcCurtainWallTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcCurtainWallTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCurveInterpolationEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[277]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcCurveInterpolationEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[277]); }

Ifc4x3_rc4::IfcCurveInterpolationEnum::IfcCurveInterpolationEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcCurveInterpolationEnum::IfcCurveInterpolationEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcCurveInterpolationEnum::IfcCurveInterpolationEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcCurveInterpolationEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcCurveInterpolationEnum::IfcCurveInterpolationEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcCurveInterpolationEnum::Value Ifc4x3_rc4::IfcCurveInterpolationEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcCurveInterpolationEnum::Value) Ifc4x3_rc4::IfcCurveInterpolationEnum::IfcCurveInterpolationEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcCurveInterpolationEnum::operator Ifc4x3_rc4::IfcCurveInterpolationEnum::Value() const {
    return (Ifc4x3_rc4::IfcCurveInterpolationEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDamperTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[290]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDamperTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[290]); }

Ifc4x3_rc4::IfcDamperTypeEnum::IfcDamperTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDamperTypeEnum::IfcDamperTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDamperTypeEnum::IfcDamperTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDamperTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDamperTypeEnum::IfcDamperTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDamperTypeEnum::Value Ifc4x3_rc4::IfcDamperTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDamperTypeEnum::Value) Ifc4x3_rc4::IfcDamperTypeEnum::IfcDamperTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDamperTypeEnum::operator Ifc4x3_rc4::IfcDamperTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcDamperTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDataOriginEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[291]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDataOriginEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[291]); }

Ifc4x3_rc4::IfcDataOriginEnum::IfcDataOriginEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDataOriginEnum::IfcDataOriginEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDataOriginEnum::IfcDataOriginEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDataOriginEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDataOriginEnum::IfcDataOriginEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDataOriginEnum::Value Ifc4x3_rc4::IfcDataOriginEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDataOriginEnum::Value) Ifc4x3_rc4::IfcDataOriginEnum::IfcDataOriginEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDataOriginEnum::operator Ifc4x3_rc4::IfcDataOriginEnum::Value() const {
    return (Ifc4x3_rc4::IfcDataOriginEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDerivedUnitEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[303]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDerivedUnitEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[303]); }

Ifc4x3_rc4::IfcDerivedUnitEnum::IfcDerivedUnitEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDerivedUnitEnum::IfcDerivedUnitEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDerivedUnitEnum::IfcDerivedUnitEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDerivedUnitEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDerivedUnitEnum::IfcDerivedUnitEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDerivedUnitEnum::Value Ifc4x3_rc4::IfcDerivedUnitEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDerivedUnitEnum::Value) Ifc4x3_rc4::IfcDerivedUnitEnum::IfcDerivedUnitEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDerivedUnitEnum::operator Ifc4x3_rc4::IfcDerivedUnitEnum::Value() const {
    return (Ifc4x3_rc4::IfcDerivedUnitEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDirectionSenseEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[308]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDirectionSenseEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[308]); }

Ifc4x3_rc4::IfcDirectionSenseEnum::IfcDirectionSenseEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDirectionSenseEnum::IfcDirectionSenseEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDirectionSenseEnum::IfcDirectionSenseEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDirectionSenseEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDirectionSenseEnum::IfcDirectionSenseEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDirectionSenseEnum::Value Ifc4x3_rc4::IfcDirectionSenseEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDirectionSenseEnum::Value) Ifc4x3_rc4::IfcDirectionSenseEnum::IfcDirectionSenseEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDirectionSenseEnum::operator Ifc4x3_rc4::IfcDirectionSenseEnum::Value() const {
    return (Ifc4x3_rc4::IfcDirectionSenseEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[313]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[313]); }

Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::IfcDiscreteAccessoryTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::IfcDiscreteAccessoryTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::IfcDiscreteAccessoryTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::IfcDiscreteAccessoryTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Value Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Value) Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::IfcDiscreteAccessoryTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::operator Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDistributionBoardTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[316]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[316]); }

Ifc4x3_rc4::IfcDistributionBoardTypeEnum::IfcDistributionBoardTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDistributionBoardTypeEnum::IfcDistributionBoardTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDistributionBoardTypeEnum::IfcDistributionBoardTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDistributionBoardTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDistributionBoardTypeEnum::IfcDistributionBoardTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Value Ifc4x3_rc4::IfcDistributionBoardTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Value) Ifc4x3_rc4::IfcDistributionBoardTypeEnum::IfcDistributionBoardTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDistributionBoardTypeEnum::operator Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[319]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[319]); }

Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::IfcDistributionChamberElementTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::IfcDistributionChamberElementTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::IfcDistributionChamberElementTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::IfcDistributionChamberElementTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Value Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Value) Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::IfcDistributionChamberElementTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::operator Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDistributionPortTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[328]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDistributionPortTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[328]); }

Ifc4x3_rc4::IfcDistributionPortTypeEnum::IfcDistributionPortTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDistributionPortTypeEnum::IfcDistributionPortTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDistributionPortTypeEnum::IfcDistributionPortTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDistributionPortTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDistributionPortTypeEnum::IfcDistributionPortTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDistributionPortTypeEnum::Value Ifc4x3_rc4::IfcDistributionPortTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDistributionPortTypeEnum::Value) Ifc4x3_rc4::IfcDistributionPortTypeEnum::IfcDistributionPortTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDistributionPortTypeEnum::operator Ifc4x3_rc4::IfcDistributionPortTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcDistributionPortTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDistributionSystemEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[330]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDistributionSystemEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[330]); }

Ifc4x3_rc4::IfcDistributionSystemEnum::IfcDistributionSystemEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDistributionSystemEnum::IfcDistributionSystemEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDistributionSystemEnum::IfcDistributionSystemEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDistributionSystemEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDistributionSystemEnum::IfcDistributionSystemEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDistributionSystemEnum::Value Ifc4x3_rc4::IfcDistributionSystemEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDistributionSystemEnum::Value) Ifc4x3_rc4::IfcDistributionSystemEnum::IfcDistributionSystemEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDistributionSystemEnum::operator Ifc4x3_rc4::IfcDistributionSystemEnum::Value() const {
    return (Ifc4x3_rc4::IfcDistributionSystemEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDocumentConfidentialityEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[331]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDocumentConfidentialityEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[331]); }

Ifc4x3_rc4::IfcDocumentConfidentialityEnum::IfcDocumentConfidentialityEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDocumentConfidentialityEnum::IfcDocumentConfidentialityEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDocumentConfidentialityEnum::IfcDocumentConfidentialityEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDocumentConfidentialityEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDocumentConfidentialityEnum::IfcDocumentConfidentialityEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDocumentConfidentialityEnum::Value Ifc4x3_rc4::IfcDocumentConfidentialityEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDocumentConfidentialityEnum::Value) Ifc4x3_rc4::IfcDocumentConfidentialityEnum::IfcDocumentConfidentialityEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDocumentConfidentialityEnum::operator Ifc4x3_rc4::IfcDocumentConfidentialityEnum::Value() const {
    return (Ifc4x3_rc4::IfcDocumentConfidentialityEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDocumentStatusEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[336]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDocumentStatusEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[336]); }

Ifc4x3_rc4::IfcDocumentStatusEnum::IfcDocumentStatusEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDocumentStatusEnum::IfcDocumentStatusEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDocumentStatusEnum::IfcDocumentStatusEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDocumentStatusEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDocumentStatusEnum::IfcDocumentStatusEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDocumentStatusEnum::Value Ifc4x3_rc4::IfcDocumentStatusEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDocumentStatusEnum::Value) Ifc4x3_rc4::IfcDocumentStatusEnum::IfcDocumentStatusEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDocumentStatusEnum::operator Ifc4x3_rc4::IfcDocumentStatusEnum::Value() const {
    return (Ifc4x3_rc4::IfcDocumentStatusEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorPanelOperationEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[339]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorPanelOperationEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[339]); }

Ifc4x3_rc4::IfcDoorPanelOperationEnum::IfcDoorPanelOperationEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDoorPanelOperationEnum::IfcDoorPanelOperationEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDoorPanelOperationEnum::IfcDoorPanelOperationEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDoorPanelOperationEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDoorPanelOperationEnum::IfcDoorPanelOperationEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDoorPanelOperationEnum::Value Ifc4x3_rc4::IfcDoorPanelOperationEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDoorPanelOperationEnum::Value) Ifc4x3_rc4::IfcDoorPanelOperationEnum::IfcDoorPanelOperationEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDoorPanelOperationEnum::operator Ifc4x3_rc4::IfcDoorPanelOperationEnum::Value() const {
    return (Ifc4x3_rc4::IfcDoorPanelOperationEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorPanelPositionEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[340]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorPanelPositionEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[340]); }

Ifc4x3_rc4::IfcDoorPanelPositionEnum::IfcDoorPanelPositionEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDoorPanelPositionEnum::IfcDoorPanelPositionEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDoorPanelPositionEnum::IfcDoorPanelPositionEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDoorPanelPositionEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDoorPanelPositionEnum::IfcDoorPanelPositionEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDoorPanelPositionEnum::Value Ifc4x3_rc4::IfcDoorPanelPositionEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDoorPanelPositionEnum::Value) Ifc4x3_rc4::IfcDoorPanelPositionEnum::IfcDoorPanelPositionEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDoorPanelPositionEnum::operator Ifc4x3_rc4::IfcDoorPanelPositionEnum::Value() const {
    return (Ifc4x3_rc4::IfcDoorPanelPositionEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorStyleConstructionEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[344]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorStyleConstructionEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[344]); }

Ifc4x3_rc4::IfcDoorStyleConstructionEnum::IfcDoorStyleConstructionEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDoorStyleConstructionEnum::IfcDoorStyleConstructionEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDoorStyleConstructionEnum::IfcDoorStyleConstructionEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDoorStyleConstructionEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDoorStyleConstructionEnum::IfcDoorStyleConstructionEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDoorStyleConstructionEnum::Value Ifc4x3_rc4::IfcDoorStyleConstructionEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDoorStyleConstructionEnum::Value) Ifc4x3_rc4::IfcDoorStyleConstructionEnum::IfcDoorStyleConstructionEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDoorStyleConstructionEnum::operator Ifc4x3_rc4::IfcDoorStyleConstructionEnum::Value() const {
    return (Ifc4x3_rc4::IfcDoorStyleConstructionEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorStyleOperationEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[345]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorStyleOperationEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[345]); }

Ifc4x3_rc4::IfcDoorStyleOperationEnum::IfcDoorStyleOperationEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDoorStyleOperationEnum::IfcDoorStyleOperationEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDoorStyleOperationEnum::IfcDoorStyleOperationEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDoorStyleOperationEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDoorStyleOperationEnum::IfcDoorStyleOperationEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDoorStyleOperationEnum::Value Ifc4x3_rc4::IfcDoorStyleOperationEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDoorStyleOperationEnum::Value) Ifc4x3_rc4::IfcDoorStyleOperationEnum::IfcDoorStyleOperationEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDoorStyleOperationEnum::operator Ifc4x3_rc4::IfcDoorStyleOperationEnum::Value() const {
    return (Ifc4x3_rc4::IfcDoorStyleOperationEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[347]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[347]); }

Ifc4x3_rc4::IfcDoorTypeEnum::IfcDoorTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDoorTypeEnum::IfcDoorTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDoorTypeEnum::IfcDoorTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDoorTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDoorTypeEnum::IfcDoorTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDoorTypeEnum::Value Ifc4x3_rc4::IfcDoorTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDoorTypeEnum::Value) Ifc4x3_rc4::IfcDoorTypeEnum::IfcDoorTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDoorTypeEnum::operator Ifc4x3_rc4::IfcDoorTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcDoorTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorTypeOperationEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[348]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDoorTypeOperationEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[348]); }

Ifc4x3_rc4::IfcDoorTypeOperationEnum::IfcDoorTypeOperationEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDoorTypeOperationEnum::IfcDoorTypeOperationEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDoorTypeOperationEnum::IfcDoorTypeOperationEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDoorTypeOperationEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDoorTypeOperationEnum::IfcDoorTypeOperationEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value Ifc4x3_rc4::IfcDoorTypeOperationEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value) Ifc4x3_rc4::IfcDoorTypeOperationEnum::IfcDoorTypeOperationEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDoorTypeOperationEnum::operator Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value() const {
    return (Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDuctFittingTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[354]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDuctFittingTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[354]); }

Ifc4x3_rc4::IfcDuctFittingTypeEnum::IfcDuctFittingTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDuctFittingTypeEnum::IfcDuctFittingTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDuctFittingTypeEnum::IfcDuctFittingTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDuctFittingTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDuctFittingTypeEnum::IfcDuctFittingTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDuctFittingTypeEnum::Value Ifc4x3_rc4::IfcDuctFittingTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDuctFittingTypeEnum::Value) Ifc4x3_rc4::IfcDuctFittingTypeEnum::IfcDuctFittingTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDuctFittingTypeEnum::operator Ifc4x3_rc4::IfcDuctFittingTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcDuctFittingTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDuctSegmentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[357]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[357]); }

Ifc4x3_rc4::IfcDuctSegmentTypeEnum::IfcDuctSegmentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDuctSegmentTypeEnum::IfcDuctSegmentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDuctSegmentTypeEnum::IfcDuctSegmentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDuctSegmentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDuctSegmentTypeEnum::IfcDuctSegmentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Value Ifc4x3_rc4::IfcDuctSegmentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Value) Ifc4x3_rc4::IfcDuctSegmentTypeEnum::IfcDuctSegmentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDuctSegmentTypeEnum::operator Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDuctSilencerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[360]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[360]); }

Ifc4x3_rc4::IfcDuctSilencerTypeEnum::IfcDuctSilencerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcDuctSilencerTypeEnum::IfcDuctSilencerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcDuctSilencerTypeEnum::IfcDuctSilencerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcDuctSilencerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcDuctSilencerTypeEnum::IfcDuctSilencerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Value Ifc4x3_rc4::IfcDuctSilencerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Value) Ifc4x3_rc4::IfcDuctSilencerTypeEnum::IfcDuctSilencerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcDuctSilencerTypeEnum::operator Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEarthworksCutTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[364]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEarthworksCutTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[364]); }

Ifc4x3_rc4::IfcEarthworksCutTypeEnum::IfcEarthworksCutTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcEarthworksCutTypeEnum::IfcEarthworksCutTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcEarthworksCutTypeEnum::IfcEarthworksCutTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcEarthworksCutTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcEarthworksCutTypeEnum::IfcEarthworksCutTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcEarthworksCutTypeEnum::Value Ifc4x3_rc4::IfcEarthworksCutTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcEarthworksCutTypeEnum::Value) Ifc4x3_rc4::IfcEarthworksCutTypeEnum::IfcEarthworksCutTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcEarthworksCutTypeEnum::operator Ifc4x3_rc4::IfcEarthworksCutTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcEarthworksCutTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEarthworksFillTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[367]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEarthworksFillTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[367]); }

Ifc4x3_rc4::IfcEarthworksFillTypeEnum::IfcEarthworksFillTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcEarthworksFillTypeEnum::IfcEarthworksFillTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcEarthworksFillTypeEnum::IfcEarthworksFillTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcEarthworksFillTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcEarthworksFillTypeEnum::IfcEarthworksFillTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcEarthworksFillTypeEnum::Value Ifc4x3_rc4::IfcEarthworksFillTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcEarthworksFillTypeEnum::Value) Ifc4x3_rc4::IfcEarthworksFillTypeEnum::IfcEarthworksFillTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcEarthworksFillTypeEnum::operator Ifc4x3_rc4::IfcEarthworksFillTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcEarthworksFillTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricApplianceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[373]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[373]); }

Ifc4x3_rc4::IfcElectricApplianceTypeEnum::IfcElectricApplianceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcElectricApplianceTypeEnum::IfcElectricApplianceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcElectricApplianceTypeEnum::IfcElectricApplianceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcElectricApplianceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcElectricApplianceTypeEnum::IfcElectricApplianceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Value Ifc4x3_rc4::IfcElectricApplianceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Value) Ifc4x3_rc4::IfcElectricApplianceTypeEnum::IfcElectricApplianceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcElectricApplianceTypeEnum::operator Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[380]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[380]); }

Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::IfcElectricDistributionBoardTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::IfcElectricDistributionBoardTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::IfcElectricDistributionBoardTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::IfcElectricDistributionBoardTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Value Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Value) Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::IfcElectricDistributionBoardTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::operator Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[383]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[383]); }

Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::IfcElectricFlowStorageDeviceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::IfcElectricFlowStorageDeviceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::IfcElectricFlowStorageDeviceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::IfcElectricFlowStorageDeviceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Value Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Value) Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::IfcElectricFlowStorageDeviceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::operator Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[386]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[386]); }

Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::IfcElectricFlowTreatmentDeviceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::IfcElectricFlowTreatmentDeviceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::IfcElectricFlowTreatmentDeviceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::IfcElectricFlowTreatmentDeviceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Value Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Value) Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::IfcElectricFlowTreatmentDeviceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::operator Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[389]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[389]); }

Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::IfcElectricGeneratorTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::IfcElectricGeneratorTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::IfcElectricGeneratorTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::IfcElectricGeneratorTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Value Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Value) Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::IfcElectricGeneratorTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::operator Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricMotorTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[392]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricMotorTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[392]); }

Ifc4x3_rc4::IfcElectricMotorTypeEnum::IfcElectricMotorTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcElectricMotorTypeEnum::IfcElectricMotorTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcElectricMotorTypeEnum::IfcElectricMotorTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcElectricMotorTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcElectricMotorTypeEnum::IfcElectricMotorTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcElectricMotorTypeEnum::Value Ifc4x3_rc4::IfcElectricMotorTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcElectricMotorTypeEnum::Value) Ifc4x3_rc4::IfcElectricMotorTypeEnum::IfcElectricMotorTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcElectricMotorTypeEnum::operator Ifc4x3_rc4::IfcElectricMotorTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcElectricMotorTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[396]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[396]); }

Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::IfcElectricTimeControlTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::IfcElectricTimeControlTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::IfcElectricTimeControlTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::IfcElectricTimeControlTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Value Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Value) Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::IfcElectricTimeControlTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::operator Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElementAssemblyTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[402]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[402]); }

Ifc4x3_rc4::IfcElementAssemblyTypeEnum::IfcElementAssemblyTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcElementAssemblyTypeEnum::IfcElementAssemblyTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcElementAssemblyTypeEnum::IfcElementAssemblyTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcElementAssemblyTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcElementAssemblyTypeEnum::IfcElementAssemblyTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Value Ifc4x3_rc4::IfcElementAssemblyTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Value) Ifc4x3_rc4::IfcElementAssemblyTypeEnum::IfcElementAssemblyTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcElementAssemblyTypeEnum::operator Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElementCompositionEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[405]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcElementCompositionEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[405]); }

Ifc4x3_rc4::IfcElementCompositionEnum::IfcElementCompositionEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcElementCompositionEnum::IfcElementCompositionEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcElementCompositionEnum::IfcElementCompositionEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcElementCompositionEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcElementCompositionEnum::IfcElementCompositionEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcElementCompositionEnum::Value Ifc4x3_rc4::IfcElementCompositionEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcElementCompositionEnum::Value) Ifc4x3_rc4::IfcElementCompositionEnum::IfcElementCompositionEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcElementCompositionEnum::operator Ifc4x3_rc4::IfcElementCompositionEnum::Value() const {
    return (Ifc4x3_rc4::IfcElementCompositionEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEngineTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[415]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEngineTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[415]); }

Ifc4x3_rc4::IfcEngineTypeEnum::IfcEngineTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcEngineTypeEnum::IfcEngineTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcEngineTypeEnum::IfcEngineTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcEngineTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcEngineTypeEnum::IfcEngineTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcEngineTypeEnum::Value Ifc4x3_rc4::IfcEngineTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcEngineTypeEnum::Value) Ifc4x3_rc4::IfcEngineTypeEnum::IfcEngineTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcEngineTypeEnum::operator Ifc4x3_rc4::IfcEngineTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcEngineTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[418]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[418]); }

Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::IfcEvaporativeCoolerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::IfcEvaporativeCoolerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::IfcEvaporativeCoolerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::IfcEvaporativeCoolerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Value Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Value) Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::IfcEvaporativeCoolerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::operator Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEvaporatorTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[421]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEvaporatorTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[421]); }

Ifc4x3_rc4::IfcEvaporatorTypeEnum::IfcEvaporatorTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcEvaporatorTypeEnum::IfcEvaporatorTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcEvaporatorTypeEnum::IfcEvaporatorTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcEvaporatorTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcEvaporatorTypeEnum::IfcEvaporatorTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcEvaporatorTypeEnum::Value Ifc4x3_rc4::IfcEvaporatorTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcEvaporatorTypeEnum::Value) Ifc4x3_rc4::IfcEvaporatorTypeEnum::IfcEvaporatorTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcEvaporatorTypeEnum::operator Ifc4x3_rc4::IfcEvaporatorTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcEvaporatorTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEventTriggerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[424]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEventTriggerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[424]); }

Ifc4x3_rc4::IfcEventTriggerTypeEnum::IfcEventTriggerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcEventTriggerTypeEnum::IfcEventTriggerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcEventTriggerTypeEnum::IfcEventTriggerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcEventTriggerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcEventTriggerTypeEnum::IfcEventTriggerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcEventTriggerTypeEnum::Value Ifc4x3_rc4::IfcEventTriggerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcEventTriggerTypeEnum::Value) Ifc4x3_rc4::IfcEventTriggerTypeEnum::IfcEventTriggerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcEventTriggerTypeEnum::operator Ifc4x3_rc4::IfcEventTriggerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcEventTriggerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEventTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[426]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcEventTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[426]); }

Ifc4x3_rc4::IfcEventTypeEnum::IfcEventTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcEventTypeEnum::IfcEventTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcEventTypeEnum::IfcEventTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcEventTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcEventTypeEnum::IfcEventTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcEventTypeEnum::Value Ifc4x3_rc4::IfcEventTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcEventTypeEnum::Value) Ifc4x3_rc4::IfcEventTypeEnum::IfcEventTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcEventTypeEnum::operator Ifc4x3_rc4::IfcEventTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcEventTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[435]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[435]); }

Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::IfcExternalSpatialElementTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::IfcExternalSpatialElementTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::IfcExternalSpatialElementTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::IfcExternalSpatialElementTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::Value Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::Value) Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::IfcExternalSpatialElementTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::operator Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[448]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[448]); }

Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::IfcFacilityPartCommonTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::IfcFacilityPartCommonTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::IfcFacilityPartCommonTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::IfcFacilityPartCommonTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::Value Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::Value) Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::IfcFacilityPartCommonTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::operator Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcFacilityPartCommonTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFacilityUsageEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[450]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFacilityUsageEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[450]); }

Ifc4x3_rc4::IfcFacilityUsageEnum::IfcFacilityUsageEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFacilityUsageEnum::IfcFacilityUsageEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFacilityUsageEnum::IfcFacilityUsageEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFacilityUsageEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFacilityUsageEnum::IfcFacilityUsageEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFacilityUsageEnum::Value Ifc4x3_rc4::IfcFacilityUsageEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFacilityUsageEnum::Value) Ifc4x3_rc4::IfcFacilityUsageEnum::IfcFacilityUsageEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFacilityUsageEnum::operator Ifc4x3_rc4::IfcFacilityUsageEnum::Value() const {
    return (Ifc4x3_rc4::IfcFacilityUsageEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFanTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[454]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFanTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[454]); }

Ifc4x3_rc4::IfcFanTypeEnum::IfcFanTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFanTypeEnum::IfcFanTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFanTypeEnum::IfcFanTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFanTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFanTypeEnum::IfcFanTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFanTypeEnum::Value Ifc4x3_rc4::IfcFanTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFanTypeEnum::Value) Ifc4x3_rc4::IfcFanTypeEnum::IfcFanTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFanTypeEnum::operator Ifc4x3_rc4::IfcFanTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcFanTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFastenerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[457]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFastenerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[457]); }

Ifc4x3_rc4::IfcFastenerTypeEnum::IfcFastenerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFastenerTypeEnum::IfcFastenerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFastenerTypeEnum::IfcFastenerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFastenerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFastenerTypeEnum::IfcFastenerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFastenerTypeEnum::Value Ifc4x3_rc4::IfcFastenerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFastenerTypeEnum::Value) Ifc4x3_rc4::IfcFastenerTypeEnum::IfcFastenerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFastenerTypeEnum::operator Ifc4x3_rc4::IfcFastenerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcFastenerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFilterTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[467]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFilterTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[467]); }

Ifc4x3_rc4::IfcFilterTypeEnum::IfcFilterTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFilterTypeEnum::IfcFilterTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFilterTypeEnum::IfcFilterTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFilterTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFilterTypeEnum::IfcFilterTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFilterTypeEnum::Value Ifc4x3_rc4::IfcFilterTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFilterTypeEnum::Value) Ifc4x3_rc4::IfcFilterTypeEnum::IfcFilterTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFilterTypeEnum::operator Ifc4x3_rc4::IfcFilterTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcFilterTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[470]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[470]); }

Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::IfcFireSuppressionTerminalTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::IfcFireSuppressionTerminalTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::IfcFireSuppressionTerminalTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::IfcFireSuppressionTerminalTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Value Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Value) Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::IfcFireSuppressionTerminalTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::operator Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFlowDirectionEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[474]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFlowDirectionEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[474]); }

Ifc4x3_rc4::IfcFlowDirectionEnum::IfcFlowDirectionEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFlowDirectionEnum::IfcFlowDirectionEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFlowDirectionEnum::IfcFlowDirectionEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFlowDirectionEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFlowDirectionEnum::IfcFlowDirectionEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFlowDirectionEnum::Value Ifc4x3_rc4::IfcFlowDirectionEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFlowDirectionEnum::Value) Ifc4x3_rc4::IfcFlowDirectionEnum::IfcFlowDirectionEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFlowDirectionEnum::operator Ifc4x3_rc4::IfcFlowDirectionEnum::Value() const {
    return (Ifc4x3_rc4::IfcFlowDirectionEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[479]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[479]); }

Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::IfcFlowInstrumentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::IfcFlowInstrumentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::IfcFlowInstrumentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::IfcFlowInstrumentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Value Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Value) Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::IfcFlowInstrumentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::operator Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFlowMeterTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[482]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFlowMeterTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[482]); }

Ifc4x3_rc4::IfcFlowMeterTypeEnum::IfcFlowMeterTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFlowMeterTypeEnum::IfcFlowMeterTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFlowMeterTypeEnum::IfcFlowMeterTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFlowMeterTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFlowMeterTypeEnum::IfcFlowMeterTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFlowMeterTypeEnum::Value Ifc4x3_rc4::IfcFlowMeterTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFlowMeterTypeEnum::Value) Ifc4x3_rc4::IfcFlowMeterTypeEnum::IfcFlowMeterTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFlowMeterTypeEnum::operator Ifc4x3_rc4::IfcFlowMeterTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcFlowMeterTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFootingTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[498]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFootingTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[498]); }

Ifc4x3_rc4::IfcFootingTypeEnum::IfcFootingTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFootingTypeEnum::IfcFootingTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFootingTypeEnum::IfcFootingTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFootingTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFootingTypeEnum::IfcFootingTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFootingTypeEnum::Value Ifc4x3_rc4::IfcFootingTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFootingTypeEnum::Value) Ifc4x3_rc4::IfcFootingTypeEnum::IfcFootingTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFootingTypeEnum::operator Ifc4x3_rc4::IfcFootingTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcFootingTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFurnitureTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[505]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcFurnitureTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[505]); }

Ifc4x3_rc4::IfcFurnitureTypeEnum::IfcFurnitureTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcFurnitureTypeEnum::IfcFurnitureTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcFurnitureTypeEnum::IfcFurnitureTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcFurnitureTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcFurnitureTypeEnum::IfcFurnitureTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcFurnitureTypeEnum::Value Ifc4x3_rc4::IfcFurnitureTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcFurnitureTypeEnum::Value) Ifc4x3_rc4::IfcFurnitureTypeEnum::IfcFurnitureTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcFurnitureTypeEnum::operator Ifc4x3_rc4::IfcFurnitureTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcFurnitureTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcGeographicElementTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[508]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcGeographicElementTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[508]); }

Ifc4x3_rc4::IfcGeographicElementTypeEnum::IfcGeographicElementTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcGeographicElementTypeEnum::IfcGeographicElementTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcGeographicElementTypeEnum::IfcGeographicElementTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcGeographicElementTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcGeographicElementTypeEnum::IfcGeographicElementTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value Ifc4x3_rc4::IfcGeographicElementTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value) Ifc4x3_rc4::IfcGeographicElementTypeEnum::IfcGeographicElementTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcGeographicElementTypeEnum::operator Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcGeometricProjectionEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[510]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcGeometricProjectionEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[510]); }

Ifc4x3_rc4::IfcGeometricProjectionEnum::IfcGeometricProjectionEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcGeometricProjectionEnum::IfcGeometricProjectionEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcGeometricProjectionEnum::IfcGeometricProjectionEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcGeometricProjectionEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcGeometricProjectionEnum::IfcGeometricProjectionEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcGeometricProjectionEnum::Value Ifc4x3_rc4::IfcGeometricProjectionEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcGeometricProjectionEnum::Value) Ifc4x3_rc4::IfcGeometricProjectionEnum::IfcGeometricProjectionEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcGeometricProjectionEnum::operator Ifc4x3_rc4::IfcGeometricProjectionEnum::Value() const {
    return (Ifc4x3_rc4::IfcGeometricProjectionEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcGlobalOrLocalEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[522]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[522]); }

Ifc4x3_rc4::IfcGlobalOrLocalEnum::IfcGlobalOrLocalEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcGlobalOrLocalEnum::IfcGlobalOrLocalEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcGlobalOrLocalEnum::IfcGlobalOrLocalEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcGlobalOrLocalEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcGlobalOrLocalEnum::IfcGlobalOrLocalEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value Ifc4x3_rc4::IfcGlobalOrLocalEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value) Ifc4x3_rc4::IfcGlobalOrLocalEnum::IfcGlobalOrLocalEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcGlobalOrLocalEnum::operator Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value() const {
    return (Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcGridTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[528]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcGridTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[528]); }

Ifc4x3_rc4::IfcGridTypeEnum::IfcGridTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcGridTypeEnum::IfcGridTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcGridTypeEnum::IfcGridTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcGridTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcGridTypeEnum::IfcGridTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcGridTypeEnum::Value Ifc4x3_rc4::IfcGridTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcGridTypeEnum::Value) Ifc4x3_rc4::IfcGridTypeEnum::IfcGridTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcGridTypeEnum::operator Ifc4x3_rc4::IfcGridTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcGridTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcHeatExchangerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[534]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[534]); }

Ifc4x3_rc4::IfcHeatExchangerTypeEnum::IfcHeatExchangerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcHeatExchangerTypeEnum::IfcHeatExchangerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcHeatExchangerTypeEnum::IfcHeatExchangerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcHeatExchangerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcHeatExchangerTypeEnum::IfcHeatExchangerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Value Ifc4x3_rc4::IfcHeatExchangerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Value) Ifc4x3_rc4::IfcHeatExchangerTypeEnum::IfcHeatExchangerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcHeatExchangerTypeEnum::operator Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcHumidifierTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[539]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcHumidifierTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[539]); }

Ifc4x3_rc4::IfcHumidifierTypeEnum::IfcHumidifierTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcHumidifierTypeEnum::IfcHumidifierTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcHumidifierTypeEnum::IfcHumidifierTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcHumidifierTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcHumidifierTypeEnum::IfcHumidifierTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcHumidifierTypeEnum::Value Ifc4x3_rc4::IfcHumidifierTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcHumidifierTypeEnum::Value) Ifc4x3_rc4::IfcHumidifierTypeEnum::IfcHumidifierTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcHumidifierTypeEnum::operator Ifc4x3_rc4::IfcHumidifierTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcHumidifierTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[545]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[545]); }

Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::IfcImpactProtectionDeviceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::IfcImpactProtectionDeviceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::IfcImpactProtectionDeviceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::IfcImpactProtectionDeviceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::Value Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::Value) Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::IfcImpactProtectionDeviceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::operator Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcImpactProtectionDeviceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcInterceptorTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[558]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcInterceptorTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[558]); }

Ifc4x3_rc4::IfcInterceptorTypeEnum::IfcInterceptorTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcInterceptorTypeEnum::IfcInterceptorTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcInterceptorTypeEnum::IfcInterceptorTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcInterceptorTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcInterceptorTypeEnum::IfcInterceptorTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcInterceptorTypeEnum::Value Ifc4x3_rc4::IfcInterceptorTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcInterceptorTypeEnum::Value) Ifc4x3_rc4::IfcInterceptorTypeEnum::IfcInterceptorTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcInterceptorTypeEnum::operator Ifc4x3_rc4::IfcInterceptorTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcInterceptorTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcInternalOrExternalEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[560]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcInternalOrExternalEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[560]); }

Ifc4x3_rc4::IfcInternalOrExternalEnum::IfcInternalOrExternalEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcInternalOrExternalEnum::IfcInternalOrExternalEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcInternalOrExternalEnum::IfcInternalOrExternalEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcInternalOrExternalEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcInternalOrExternalEnum::IfcInternalOrExternalEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcInternalOrExternalEnum::Value Ifc4x3_rc4::IfcInternalOrExternalEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcInternalOrExternalEnum::Value) Ifc4x3_rc4::IfcInternalOrExternalEnum::IfcInternalOrExternalEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcInternalOrExternalEnum::operator Ifc4x3_rc4::IfcInternalOrExternalEnum::Value() const {
    return (Ifc4x3_rc4::IfcInternalOrExternalEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcInventoryTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[563]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcInventoryTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[563]); }

Ifc4x3_rc4::IfcInventoryTypeEnum::IfcInventoryTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcInventoryTypeEnum::IfcInventoryTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcInventoryTypeEnum::IfcInventoryTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcInventoryTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcInventoryTypeEnum::IfcInventoryTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcInventoryTypeEnum::Value Ifc4x3_rc4::IfcInventoryTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcInventoryTypeEnum::Value) Ifc4x3_rc4::IfcInventoryTypeEnum::IfcInventoryTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcInventoryTypeEnum::operator Ifc4x3_rc4::IfcInventoryTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcInventoryTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcJunctionBoxTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[571]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[571]); }

Ifc4x3_rc4::IfcJunctionBoxTypeEnum::IfcJunctionBoxTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcJunctionBoxTypeEnum::IfcJunctionBoxTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcJunctionBoxTypeEnum::IfcJunctionBoxTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcJunctionBoxTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcJunctionBoxTypeEnum::IfcJunctionBoxTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Value Ifc4x3_rc4::IfcJunctionBoxTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Value) Ifc4x3_rc4::IfcJunctionBoxTypeEnum::IfcJunctionBoxTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcJunctionBoxTypeEnum::operator Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcKnotType::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[575]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcKnotType::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[575]); }

Ifc4x3_rc4::IfcKnotType::IfcKnotType(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcKnotType::IfcKnotType(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcKnotType::IfcKnotType(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcKnotType::ToString(Value v) {
    return Ifc4x3_rc4::IfcKnotType::IfcKnotType::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcKnotType::Value Ifc4x3_rc4::IfcKnotType::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcKnotType::Value) Ifc4x3_rc4::IfcKnotType::IfcKnotType::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcKnotType::operator Ifc4x3_rc4::IfcKnotType::Value() const {
    return (Ifc4x3_rc4::IfcKnotType::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLaborResourceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[579]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLaborResourceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[579]); }

Ifc4x3_rc4::IfcLaborResourceTypeEnum::IfcLaborResourceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcLaborResourceTypeEnum::IfcLaborResourceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcLaborResourceTypeEnum::IfcLaborResourceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcLaborResourceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcLaborResourceTypeEnum::IfcLaborResourceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcLaborResourceTypeEnum::Value Ifc4x3_rc4::IfcLaborResourceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcLaborResourceTypeEnum::Value) Ifc4x3_rc4::IfcLaborResourceTypeEnum::IfcLaborResourceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcLaborResourceTypeEnum::operator Ifc4x3_rc4::IfcLaborResourceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcLaborResourceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLampTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[583]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLampTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[583]); }

Ifc4x3_rc4::IfcLampTypeEnum::IfcLampTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcLampTypeEnum::IfcLampTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcLampTypeEnum::IfcLampTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcLampTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcLampTypeEnum::IfcLampTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcLampTypeEnum::Value Ifc4x3_rc4::IfcLampTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcLampTypeEnum::Value) Ifc4x3_rc4::IfcLampTypeEnum::IfcLampTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcLampTypeEnum::operator Ifc4x3_rc4::IfcLampTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcLampTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLayerSetDirectionEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[586]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLayerSetDirectionEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[586]); }

Ifc4x3_rc4::IfcLayerSetDirectionEnum::IfcLayerSetDirectionEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcLayerSetDirectionEnum::IfcLayerSetDirectionEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcLayerSetDirectionEnum::IfcLayerSetDirectionEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcLayerSetDirectionEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcLayerSetDirectionEnum::IfcLayerSetDirectionEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcLayerSetDirectionEnum::Value Ifc4x3_rc4::IfcLayerSetDirectionEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcLayerSetDirectionEnum::Value) Ifc4x3_rc4::IfcLayerSetDirectionEnum::IfcLayerSetDirectionEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcLayerSetDirectionEnum::operator Ifc4x3_rc4::IfcLayerSetDirectionEnum::Value() const {
    return (Ifc4x3_rc4::IfcLayerSetDirectionEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLightDistributionCurveEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[591]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLightDistributionCurveEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[591]); }

Ifc4x3_rc4::IfcLightDistributionCurveEnum::IfcLightDistributionCurveEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcLightDistributionCurveEnum::IfcLightDistributionCurveEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcLightDistributionCurveEnum::IfcLightDistributionCurveEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcLightDistributionCurveEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcLightDistributionCurveEnum::IfcLightDistributionCurveEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcLightDistributionCurveEnum::Value Ifc4x3_rc4::IfcLightDistributionCurveEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcLightDistributionCurveEnum::Value) Ifc4x3_rc4::IfcLightDistributionCurveEnum::IfcLightDistributionCurveEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcLightDistributionCurveEnum::operator Ifc4x3_rc4::IfcLightDistributionCurveEnum::Value() const {
    return (Ifc4x3_rc4::IfcLightDistributionCurveEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLightEmissionSourceEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[594]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLightEmissionSourceEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[594]); }

Ifc4x3_rc4::IfcLightEmissionSourceEnum::IfcLightEmissionSourceEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcLightEmissionSourceEnum::IfcLightEmissionSourceEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcLightEmissionSourceEnum::IfcLightEmissionSourceEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcLightEmissionSourceEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcLightEmissionSourceEnum::IfcLightEmissionSourceEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcLightEmissionSourceEnum::Value Ifc4x3_rc4::IfcLightEmissionSourceEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcLightEmissionSourceEnum::Value) Ifc4x3_rc4::IfcLightEmissionSourceEnum::IfcLightEmissionSourceEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcLightEmissionSourceEnum::operator Ifc4x3_rc4::IfcLightEmissionSourceEnum::Value() const {
    return (Ifc4x3_rc4::IfcLightEmissionSourceEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLightFixtureTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[597]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLightFixtureTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[597]); }

Ifc4x3_rc4::IfcLightFixtureTypeEnum::IfcLightFixtureTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcLightFixtureTypeEnum::IfcLightFixtureTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcLightFixtureTypeEnum::IfcLightFixtureTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcLightFixtureTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcLightFixtureTypeEnum::IfcLightFixtureTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcLightFixtureTypeEnum::Value Ifc4x3_rc4::IfcLightFixtureTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcLightFixtureTypeEnum::Value) Ifc4x3_rc4::IfcLightFixtureTypeEnum::IfcLightFixtureTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcLightFixtureTypeEnum::operator Ifc4x3_rc4::IfcLightFixtureTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcLightFixtureTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[616]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[616]); }

Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::IfcLiquidTerminalTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::IfcLiquidTerminalTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::IfcLiquidTerminalTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::IfcLiquidTerminalTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Value Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Value) Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::IfcLiquidTerminalTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::operator Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLoadGroupTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[617]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLoadGroupTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[617]); }

Ifc4x3_rc4::IfcLoadGroupTypeEnum::IfcLoadGroupTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcLoadGroupTypeEnum::IfcLoadGroupTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcLoadGroupTypeEnum::IfcLoadGroupTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcLoadGroupTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcLoadGroupTypeEnum::IfcLoadGroupTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcLoadGroupTypeEnum::Value Ifc4x3_rc4::IfcLoadGroupTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcLoadGroupTypeEnum::Value) Ifc4x3_rc4::IfcLoadGroupTypeEnum::IfcLoadGroupTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcLoadGroupTypeEnum::operator Ifc4x3_rc4::IfcLoadGroupTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcLoadGroupTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLogicalOperatorEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[620]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcLogicalOperatorEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[620]); }

Ifc4x3_rc4::IfcLogicalOperatorEnum::IfcLogicalOperatorEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcLogicalOperatorEnum::IfcLogicalOperatorEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcLogicalOperatorEnum::IfcLogicalOperatorEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcLogicalOperatorEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcLogicalOperatorEnum::IfcLogicalOperatorEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcLogicalOperatorEnum::Value Ifc4x3_rc4::IfcLogicalOperatorEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcLogicalOperatorEnum::Value) Ifc4x3_rc4::IfcLogicalOperatorEnum::IfcLogicalOperatorEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcLogicalOperatorEnum::operator Ifc4x3_rc4::IfcLogicalOperatorEnum::Value() const {
    return (Ifc4x3_rc4::IfcLogicalOperatorEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMarineFacilityTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[632]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMarineFacilityTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[632]); }

Ifc4x3_rc4::IfcMarineFacilityTypeEnum::IfcMarineFacilityTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcMarineFacilityTypeEnum::IfcMarineFacilityTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcMarineFacilityTypeEnum::IfcMarineFacilityTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcMarineFacilityTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcMarineFacilityTypeEnum::IfcMarineFacilityTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcMarineFacilityTypeEnum::Value Ifc4x3_rc4::IfcMarineFacilityTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcMarineFacilityTypeEnum::Value) Ifc4x3_rc4::IfcMarineFacilityTypeEnum::IfcMarineFacilityTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcMarineFacilityTypeEnum::operator Ifc4x3_rc4::IfcMarineFacilityTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcMarineFacilityTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMarinePartTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[633]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMarinePartTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[633]); }

Ifc4x3_rc4::IfcMarinePartTypeEnum::IfcMarinePartTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcMarinePartTypeEnum::IfcMarinePartTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcMarinePartTypeEnum::IfcMarinePartTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcMarinePartTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcMarinePartTypeEnum::IfcMarinePartTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcMarinePartTypeEnum::Value Ifc4x3_rc4::IfcMarinePartTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcMarinePartTypeEnum::Value) Ifc4x3_rc4::IfcMarinePartTypeEnum::IfcMarinePartTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcMarinePartTypeEnum::operator Ifc4x3_rc4::IfcMarinePartTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcMarinePartTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[662]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[662]); }

Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::IfcMechanicalFastenerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::IfcMechanicalFastenerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::IfcMechanicalFastenerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::IfcMechanicalFastenerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Value Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Value) Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::IfcMechanicalFastenerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::operator Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[665]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[665]); }

Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::IfcMedicalDeviceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::IfcMedicalDeviceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::IfcMedicalDeviceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::IfcMedicalDeviceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Value Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Value) Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::IfcMedicalDeviceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::operator Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMemberTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[669]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMemberTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[669]); }

Ifc4x3_rc4::IfcMemberTypeEnum::IfcMemberTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcMemberTypeEnum::IfcMemberTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcMemberTypeEnum::IfcMemberTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcMemberTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcMemberTypeEnum::IfcMemberTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcMemberTypeEnum::Value Ifc4x3_rc4::IfcMemberTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcMemberTypeEnum::Value) Ifc4x3_rc4::IfcMemberTypeEnum::IfcMemberTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcMemberTypeEnum::operator Ifc4x3_rc4::IfcMemberTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcMemberTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[675]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[675]); }

Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::IfcMobileTelecommunicationsApplianceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::IfcMobileTelecommunicationsApplianceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::IfcMobileTelecommunicationsApplianceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::IfcMobileTelecommunicationsApplianceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Value Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Value) Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::IfcMobileTelecommunicationsApplianceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::operator Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMooringDeviceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[691]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[691]); }

Ifc4x3_rc4::IfcMooringDeviceTypeEnum::IfcMooringDeviceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcMooringDeviceTypeEnum::IfcMooringDeviceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcMooringDeviceTypeEnum::IfcMooringDeviceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcMooringDeviceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcMooringDeviceTypeEnum::IfcMooringDeviceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Value Ifc4x3_rc4::IfcMooringDeviceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Value) Ifc4x3_rc4::IfcMooringDeviceTypeEnum::IfcMooringDeviceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcMooringDeviceTypeEnum::operator Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMotorConnectionTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[694]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[694]); }

Ifc4x3_rc4::IfcMotorConnectionTypeEnum::IfcMotorConnectionTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcMotorConnectionTypeEnum::IfcMotorConnectionTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcMotorConnectionTypeEnum::IfcMotorConnectionTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcMotorConnectionTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcMotorConnectionTypeEnum::IfcMotorConnectionTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Value Ifc4x3_rc4::IfcMotorConnectionTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Value) Ifc4x3_rc4::IfcMotorConnectionTypeEnum::IfcMotorConnectionTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcMotorConnectionTypeEnum::operator Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcNavigationElementTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[698]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcNavigationElementTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[698]); }

Ifc4x3_rc4::IfcNavigationElementTypeEnum::IfcNavigationElementTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcNavigationElementTypeEnum::IfcNavigationElementTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcNavigationElementTypeEnum::IfcNavigationElementTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcNavigationElementTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcNavigationElementTypeEnum::IfcNavigationElementTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcNavigationElementTypeEnum::Value Ifc4x3_rc4::IfcNavigationElementTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcNavigationElementTypeEnum::Value) Ifc4x3_rc4::IfcNavigationElementTypeEnum::IfcNavigationElementTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcNavigationElementTypeEnum::operator Ifc4x3_rc4::IfcNavigationElementTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcNavigationElementTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcObjectTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[708]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcObjectTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[708]); }

Ifc4x3_rc4::IfcObjectTypeEnum::IfcObjectTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcObjectTypeEnum::IfcObjectTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcObjectTypeEnum::IfcObjectTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcObjectTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcObjectTypeEnum::IfcObjectTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcObjectTypeEnum::Value Ifc4x3_rc4::IfcObjectTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcObjectTypeEnum::Value) Ifc4x3_rc4::IfcObjectTypeEnum::IfcObjectTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcObjectTypeEnum::operator Ifc4x3_rc4::IfcObjectTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcObjectTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcObjectiveEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[705]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcObjectiveEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[705]); }

Ifc4x3_rc4::IfcObjectiveEnum::IfcObjectiveEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcObjectiveEnum::IfcObjectiveEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcObjectiveEnum::IfcObjectiveEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcObjectiveEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcObjectiveEnum::IfcObjectiveEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcObjectiveEnum::Value Ifc4x3_rc4::IfcObjectiveEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcObjectiveEnum::Value) Ifc4x3_rc4::IfcObjectiveEnum::IfcObjectiveEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcObjectiveEnum::operator Ifc4x3_rc4::IfcObjectiveEnum::Value() const {
    return (Ifc4x3_rc4::IfcObjectiveEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcOccupantTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[710]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcOccupantTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[710]); }

Ifc4x3_rc4::IfcOccupantTypeEnum::IfcOccupantTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcOccupantTypeEnum::IfcOccupantTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcOccupantTypeEnum::IfcOccupantTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcOccupantTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcOccupantTypeEnum::IfcOccupantTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcOccupantTypeEnum::Value Ifc4x3_rc4::IfcOccupantTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcOccupantTypeEnum::Value) Ifc4x3_rc4::IfcOccupantTypeEnum::IfcOccupantTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcOccupantTypeEnum::operator Ifc4x3_rc4::IfcOccupantTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcOccupantTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcOpeningElementTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[717]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcOpeningElementTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[717]); }

Ifc4x3_rc4::IfcOpeningElementTypeEnum::IfcOpeningElementTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcOpeningElementTypeEnum::IfcOpeningElementTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcOpeningElementTypeEnum::IfcOpeningElementTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcOpeningElementTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcOpeningElementTypeEnum::IfcOpeningElementTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcOpeningElementTypeEnum::Value Ifc4x3_rc4::IfcOpeningElementTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcOpeningElementTypeEnum::Value) Ifc4x3_rc4::IfcOpeningElementTypeEnum::IfcOpeningElementTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcOpeningElementTypeEnum::operator Ifc4x3_rc4::IfcOpeningElementTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcOpeningElementTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcOutletTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[726]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcOutletTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[726]); }

Ifc4x3_rc4::IfcOutletTypeEnum::IfcOutletTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcOutletTypeEnum::IfcOutletTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcOutletTypeEnum::IfcOutletTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcOutletTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcOutletTypeEnum::IfcOutletTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcOutletTypeEnum::Value Ifc4x3_rc4::IfcOutletTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcOutletTypeEnum::Value) Ifc4x3_rc4::IfcOutletTypeEnum::IfcOutletTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcOutletTypeEnum::operator Ifc4x3_rc4::IfcOutletTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcOutletTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPavementTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[733]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPavementTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[733]); }

Ifc4x3_rc4::IfcPavementTypeEnum::IfcPavementTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPavementTypeEnum::IfcPavementTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPavementTypeEnum::IfcPavementTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPavementTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPavementTypeEnum::IfcPavementTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPavementTypeEnum::Value Ifc4x3_rc4::IfcPavementTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPavementTypeEnum::Value) Ifc4x3_rc4::IfcPavementTypeEnum::IfcPavementTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPavementTypeEnum::operator Ifc4x3_rc4::IfcPavementTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcPavementTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[736]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[736]); }

Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::IfcPerformanceHistoryTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::IfcPerformanceHistoryTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::IfcPerformanceHistoryTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::IfcPerformanceHistoryTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::Value Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::Value) Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::IfcPerformanceHistoryTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::operator Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[737]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[737]); }

Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::IfcPermeableCoveringOperationEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::IfcPermeableCoveringOperationEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::IfcPermeableCoveringOperationEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::IfcPermeableCoveringOperationEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::Value Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::Value) Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::IfcPermeableCoveringOperationEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::operator Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::Value() const {
    return (Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPermitTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[740]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPermitTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[740]); }

Ifc4x3_rc4::IfcPermitTypeEnum::IfcPermitTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPermitTypeEnum::IfcPermitTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPermitTypeEnum::IfcPermitTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPermitTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPermitTypeEnum::IfcPermitTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPermitTypeEnum::Value Ifc4x3_rc4::IfcPermitTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPermitTypeEnum::Value) Ifc4x3_rc4::IfcPermitTypeEnum::IfcPermitTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPermitTypeEnum::operator Ifc4x3_rc4::IfcPermitTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcPermitTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[745]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[745]); }

Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::IfcPhysicalOrVirtualEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::IfcPhysicalOrVirtualEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::IfcPhysicalOrVirtualEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::IfcPhysicalOrVirtualEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Value Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Value) Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::IfcPhysicalOrVirtualEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::operator Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Value() const {
    return (Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPileConstructionEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[749]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPileConstructionEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[749]); }

Ifc4x3_rc4::IfcPileConstructionEnum::IfcPileConstructionEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPileConstructionEnum::IfcPileConstructionEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPileConstructionEnum::IfcPileConstructionEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPileConstructionEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPileConstructionEnum::IfcPileConstructionEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPileConstructionEnum::Value Ifc4x3_rc4::IfcPileConstructionEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPileConstructionEnum::Value) Ifc4x3_rc4::IfcPileConstructionEnum::IfcPileConstructionEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPileConstructionEnum::operator Ifc4x3_rc4::IfcPileConstructionEnum::Value() const {
    return (Ifc4x3_rc4::IfcPileConstructionEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPileTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[751]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPileTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[751]); }

Ifc4x3_rc4::IfcPileTypeEnum::IfcPileTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPileTypeEnum::IfcPileTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPileTypeEnum::IfcPileTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPileTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPileTypeEnum::IfcPileTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPileTypeEnum::Value Ifc4x3_rc4::IfcPileTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPileTypeEnum::Value) Ifc4x3_rc4::IfcPileTypeEnum::IfcPileTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPileTypeEnum::operator Ifc4x3_rc4::IfcPileTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcPileTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPipeFittingTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[754]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPipeFittingTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[754]); }

Ifc4x3_rc4::IfcPipeFittingTypeEnum::IfcPipeFittingTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPipeFittingTypeEnum::IfcPipeFittingTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPipeFittingTypeEnum::IfcPipeFittingTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPipeFittingTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPipeFittingTypeEnum::IfcPipeFittingTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPipeFittingTypeEnum::Value Ifc4x3_rc4::IfcPipeFittingTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPipeFittingTypeEnum::Value) Ifc4x3_rc4::IfcPipeFittingTypeEnum::IfcPipeFittingTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPipeFittingTypeEnum::operator Ifc4x3_rc4::IfcPipeFittingTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcPipeFittingTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPipeSegmentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[757]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[757]); }

Ifc4x3_rc4::IfcPipeSegmentTypeEnum::IfcPipeSegmentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPipeSegmentTypeEnum::IfcPipeSegmentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPipeSegmentTypeEnum::IfcPipeSegmentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPipeSegmentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPipeSegmentTypeEnum::IfcPipeSegmentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Value Ifc4x3_rc4::IfcPipeSegmentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Value) Ifc4x3_rc4::IfcPipeSegmentTypeEnum::IfcPipeSegmentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPipeSegmentTypeEnum::operator Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPlateTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[769]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPlateTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[769]); }

Ifc4x3_rc4::IfcPlateTypeEnum::IfcPlateTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPlateTypeEnum::IfcPlateTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPlateTypeEnum::IfcPlateTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPlateTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPlateTypeEnum::IfcPlateTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPlateTypeEnum::Value Ifc4x3_rc4::IfcPlateTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPlateTypeEnum::Value) Ifc4x3_rc4::IfcPlateTypeEnum::IfcPlateTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPlateTypeEnum::operator Ifc4x3_rc4::IfcPlateTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcPlateTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[794]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[794]); }

Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::IfcPreferredSurfaceCurveRepresentation(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::IfcPreferredSurfaceCurveRepresentation(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::IfcPreferredSurfaceCurveRepresentation(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::ToString(Value v) {
    return Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::IfcPreferredSurfaceCurveRepresentation::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Value Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Value) Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::IfcPreferredSurfaceCurveRepresentation::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::operator Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Value() const {
    return (Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProcedureTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[803]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProcedureTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[803]); }

Ifc4x3_rc4::IfcProcedureTypeEnum::IfcProcedureTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcProcedureTypeEnum::IfcProcedureTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcProcedureTypeEnum::IfcProcedureTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcProcedureTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcProcedureTypeEnum::IfcProcedureTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcProcedureTypeEnum::Value Ifc4x3_rc4::IfcProcedureTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcProcedureTypeEnum::Value) Ifc4x3_rc4::IfcProcedureTypeEnum::IfcProcedureTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcProcedureTypeEnum::operator Ifc4x3_rc4::IfcProcedureTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcProcedureTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProfileTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[813]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProfileTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[813]); }

Ifc4x3_rc4::IfcProfileTypeEnum::IfcProfileTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcProfileTypeEnum::IfcProfileTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcProfileTypeEnum::IfcProfileTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcProfileTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcProfileTypeEnum::IfcProfileTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcProfileTypeEnum::Value Ifc4x3_rc4::IfcProfileTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcProfileTypeEnum::Value) Ifc4x3_rc4::IfcProfileTypeEnum::IfcProfileTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcProfileTypeEnum::operator Ifc4x3_rc4::IfcProfileTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcProfileTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProjectOrderTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[821]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProjectOrderTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[821]); }

Ifc4x3_rc4::IfcProjectOrderTypeEnum::IfcProjectOrderTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcProjectOrderTypeEnum::IfcProjectOrderTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcProjectOrderTypeEnum::IfcProjectOrderTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcProjectOrderTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcProjectOrderTypeEnum::IfcProjectOrderTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcProjectOrderTypeEnum::Value Ifc4x3_rc4::IfcProjectOrderTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcProjectOrderTypeEnum::Value) Ifc4x3_rc4::IfcProjectOrderTypeEnum::IfcProjectOrderTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcProjectOrderTypeEnum::operator Ifc4x3_rc4::IfcProjectOrderTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcProjectOrderTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[816]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[816]); }

Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::IfcProjectedOrTrueLengthEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::IfcProjectedOrTrueLengthEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::IfcProjectedOrTrueLengthEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::IfcProjectedOrTrueLengthEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value) Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::IfcProjectedOrTrueLengthEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::operator Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value() const {
    return (Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProjectionElementTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[818]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProjectionElementTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[818]); }

Ifc4x3_rc4::IfcProjectionElementTypeEnum::IfcProjectionElementTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcProjectionElementTypeEnum::IfcProjectionElementTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcProjectionElementTypeEnum::IfcProjectionElementTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcProjectionElementTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcProjectionElementTypeEnum::IfcProjectionElementTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcProjectionElementTypeEnum::Value Ifc4x3_rc4::IfcProjectionElementTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcProjectionElementTypeEnum::Value) Ifc4x3_rc4::IfcProjectionElementTypeEnum::IfcProjectionElementTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcProjectionElementTypeEnum::operator Ifc4x3_rc4::IfcProjectionElementTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcProjectionElementTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[836]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[836]); }

Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::IfcPropertySetTemplateTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::IfcPropertySetTemplateTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::IfcPropertySetTemplateTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::IfcPropertySetTemplateTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::Value Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::Value) Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::IfcPropertySetTemplateTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::operator Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[844]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[844]); }

Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::IfcProtectiveDeviceTrippingUnitTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::IfcProtectiveDeviceTrippingUnitTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::IfcProtectiveDeviceTrippingUnitTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::IfcProtectiveDeviceTrippingUnitTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Value Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Value) Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::IfcProtectiveDeviceTrippingUnitTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::operator Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[846]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[846]); }

Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::IfcProtectiveDeviceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::IfcProtectiveDeviceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::IfcProtectiveDeviceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::IfcProtectiveDeviceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Value Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Value) Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::IfcProtectiveDeviceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::operator Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPumpTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[850]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcPumpTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[850]); }

Ifc4x3_rc4::IfcPumpTypeEnum::IfcPumpTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcPumpTypeEnum::IfcPumpTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcPumpTypeEnum::IfcPumpTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcPumpTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcPumpTypeEnum::IfcPumpTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcPumpTypeEnum::Value Ifc4x3_rc4::IfcPumpTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcPumpTypeEnum::Value) Ifc4x3_rc4::IfcPumpTypeEnum::IfcPumpTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcPumpTypeEnum::operator Ifc4x3_rc4::IfcPumpTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcPumpTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRailTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[864]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRailTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[864]); }

Ifc4x3_rc4::IfcRailTypeEnum::IfcRailTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRailTypeEnum::IfcRailTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRailTypeEnum::IfcRailTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRailTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRailTypeEnum::IfcRailTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRailTypeEnum::Value Ifc4x3_rc4::IfcRailTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRailTypeEnum::Value) Ifc4x3_rc4::IfcRailTypeEnum::IfcRailTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRailTypeEnum::operator Ifc4x3_rc4::IfcRailTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcRailTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRailingTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[862]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRailingTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[862]); }

Ifc4x3_rc4::IfcRailingTypeEnum::IfcRailingTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRailingTypeEnum::IfcRailingTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRailingTypeEnum::IfcRailingTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRailingTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRailingTypeEnum::IfcRailingTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRailingTypeEnum::Value Ifc4x3_rc4::IfcRailingTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRailingTypeEnum::Value) Ifc4x3_rc4::IfcRailingTypeEnum::IfcRailingTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRailingTypeEnum::operator Ifc4x3_rc4::IfcRailingTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcRailingTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRailwayPartTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[866]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRailwayPartTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[866]); }

Ifc4x3_rc4::IfcRailwayPartTypeEnum::IfcRailwayPartTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRailwayPartTypeEnum::IfcRailwayPartTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRailwayPartTypeEnum::IfcRailwayPartTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRailwayPartTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRailwayPartTypeEnum::IfcRailwayPartTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRailwayPartTypeEnum::Value Ifc4x3_rc4::IfcRailwayPartTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRailwayPartTypeEnum::Value) Ifc4x3_rc4::IfcRailwayPartTypeEnum::IfcRailwayPartTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRailwayPartTypeEnum::operator Ifc4x3_rc4::IfcRailwayPartTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcRailwayPartTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRailwayTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[867]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRailwayTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[867]); }

Ifc4x3_rc4::IfcRailwayTypeEnum::IfcRailwayTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRailwayTypeEnum::IfcRailwayTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRailwayTypeEnum::IfcRailwayTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRailwayTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRailwayTypeEnum::IfcRailwayTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRailwayTypeEnum::Value Ifc4x3_rc4::IfcRailwayTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRailwayTypeEnum::Value) Ifc4x3_rc4::IfcRailwayTypeEnum::IfcRailwayTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRailwayTypeEnum::operator Ifc4x3_rc4::IfcRailwayTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcRailwayTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRampFlightTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[871]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRampFlightTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[871]); }

Ifc4x3_rc4::IfcRampFlightTypeEnum::IfcRampFlightTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRampFlightTypeEnum::IfcRampFlightTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRampFlightTypeEnum::IfcRampFlightTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRampFlightTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRampFlightTypeEnum::IfcRampFlightTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRampFlightTypeEnum::Value Ifc4x3_rc4::IfcRampFlightTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRampFlightTypeEnum::Value) Ifc4x3_rc4::IfcRampFlightTypeEnum::IfcRampFlightTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRampFlightTypeEnum::operator Ifc4x3_rc4::IfcRampFlightTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcRampFlightTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRampTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[873]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRampTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[873]); }

Ifc4x3_rc4::IfcRampTypeEnum::IfcRampTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRampTypeEnum::IfcRampTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRampTypeEnum::IfcRampTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRampTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRampTypeEnum::IfcRampTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRampTypeEnum::Value Ifc4x3_rc4::IfcRampTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRampTypeEnum::Value) Ifc4x3_rc4::IfcRampTypeEnum::IfcRampTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRampTypeEnum::operator Ifc4x3_rc4::IfcRampTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcRampTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRecurrenceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[883]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRecurrenceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[883]); }

Ifc4x3_rc4::IfcRecurrenceTypeEnum::IfcRecurrenceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRecurrenceTypeEnum::IfcRecurrenceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRecurrenceTypeEnum::IfcRecurrenceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRecurrenceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRecurrenceTypeEnum::IfcRecurrenceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRecurrenceTypeEnum::Value Ifc4x3_rc4::IfcRecurrenceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRecurrenceTypeEnum::Value) Ifc4x3_rc4::IfcRecurrenceTypeEnum::IfcRecurrenceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRecurrenceTypeEnum::operator Ifc4x3_rc4::IfcRecurrenceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcRecurrenceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReferentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[886]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReferentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[886]); }

Ifc4x3_rc4::IfcReferentTypeEnum::IfcReferentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcReferentTypeEnum::IfcReferentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcReferentTypeEnum::IfcReferentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcReferentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcReferentTypeEnum::IfcReferentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcReferentTypeEnum::Value Ifc4x3_rc4::IfcReferentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcReferentTypeEnum::Value) Ifc4x3_rc4::IfcReferentTypeEnum::IfcReferentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcReferentTypeEnum::operator Ifc4x3_rc4::IfcReferentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcReferentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReflectanceMethodEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[887]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReflectanceMethodEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[887]); }

Ifc4x3_rc4::IfcReflectanceMethodEnum::IfcReflectanceMethodEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcReflectanceMethodEnum::IfcReflectanceMethodEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcReflectanceMethodEnum::IfcReflectanceMethodEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcReflectanceMethodEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcReflectanceMethodEnum::IfcReflectanceMethodEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcReflectanceMethodEnum::Value Ifc4x3_rc4::IfcReflectanceMethodEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcReflectanceMethodEnum::Value) Ifc4x3_rc4::IfcReflectanceMethodEnum::IfcReflectanceMethodEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcReflectanceMethodEnum::operator Ifc4x3_rc4::IfcReflectanceMethodEnum::Value() const {
    return (Ifc4x3_rc4::IfcReflectanceMethodEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[890]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[890]); }

Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::IfcReinforcedSoilTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::IfcReinforcedSoilTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::IfcReinforcedSoilTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::IfcReinforcedSoilTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::Value Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::Value) Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::IfcReinforcedSoilTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::operator Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReinforcingBarRoleEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[894]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReinforcingBarRoleEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[894]); }

Ifc4x3_rc4::IfcReinforcingBarRoleEnum::IfcReinforcingBarRoleEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcReinforcingBarRoleEnum::IfcReinforcingBarRoleEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcReinforcingBarRoleEnum::IfcReinforcingBarRoleEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcReinforcingBarRoleEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcReinforcingBarRoleEnum::IfcReinforcingBarRoleEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcReinforcingBarRoleEnum::Value Ifc4x3_rc4::IfcReinforcingBarRoleEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcReinforcingBarRoleEnum::Value) Ifc4x3_rc4::IfcReinforcingBarRoleEnum::IfcReinforcingBarRoleEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcReinforcingBarRoleEnum::operator Ifc4x3_rc4::IfcReinforcingBarRoleEnum::Value() const {
    return (Ifc4x3_rc4::IfcReinforcingBarRoleEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[895]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[895]); }

Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::IfcReinforcingBarSurfaceEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::IfcReinforcingBarSurfaceEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::IfcReinforcingBarSurfaceEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::IfcReinforcingBarSurfaceEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value) Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::IfcReinforcingBarSurfaceEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::operator Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value() const {
    return (Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReinforcingBarTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[897]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[897]); }

Ifc4x3_rc4::IfcReinforcingBarTypeEnum::IfcReinforcingBarTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcReinforcingBarTypeEnum::IfcReinforcingBarTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcReinforcingBarTypeEnum::IfcReinforcingBarTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcReinforcingBarTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcReinforcingBarTypeEnum::IfcReinforcingBarTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Value Ifc4x3_rc4::IfcReinforcingBarTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Value) Ifc4x3_rc4::IfcReinforcingBarTypeEnum::IfcReinforcingBarTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcReinforcingBarTypeEnum::operator Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[902]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[902]); }

Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::IfcReinforcingMeshTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::IfcReinforcingMeshTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::IfcReinforcingMeshTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::IfcReinforcingMeshTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Value Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Value) Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::IfcReinforcingMeshTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::operator Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRoadPartTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[971]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRoadPartTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[971]); }

Ifc4x3_rc4::IfcRoadPartTypeEnum::IfcRoadPartTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRoadPartTypeEnum::IfcRoadPartTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRoadPartTypeEnum::IfcRoadPartTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRoadPartTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRoadPartTypeEnum::IfcRoadPartTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRoadPartTypeEnum::Value Ifc4x3_rc4::IfcRoadPartTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRoadPartTypeEnum::Value) Ifc4x3_rc4::IfcRoadPartTypeEnum::IfcRoadPartTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRoadPartTypeEnum::operator Ifc4x3_rc4::IfcRoadPartTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcRoadPartTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRoadTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[972]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRoadTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[972]); }

Ifc4x3_rc4::IfcRoadTypeEnum::IfcRoadTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRoadTypeEnum::IfcRoadTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRoadTypeEnum::IfcRoadTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRoadTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRoadTypeEnum::IfcRoadTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRoadTypeEnum::Value Ifc4x3_rc4::IfcRoadTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRoadTypeEnum::Value) Ifc4x3_rc4::IfcRoadTypeEnum::IfcRoadTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRoadTypeEnum::operator Ifc4x3_rc4::IfcRoadTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcRoadTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRoleEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[973]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRoleEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[973]); }

Ifc4x3_rc4::IfcRoleEnum::IfcRoleEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRoleEnum::IfcRoleEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRoleEnum::IfcRoleEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRoleEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRoleEnum::IfcRoleEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRoleEnum::Value Ifc4x3_rc4::IfcRoleEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRoleEnum::Value) Ifc4x3_rc4::IfcRoleEnum::IfcRoleEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRoleEnum::operator Ifc4x3_rc4::IfcRoleEnum::Value() const {
    return (Ifc4x3_rc4::IfcRoleEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRoofTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[976]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcRoofTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[976]); }

Ifc4x3_rc4::IfcRoofTypeEnum::IfcRoofTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcRoofTypeEnum::IfcRoofTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcRoofTypeEnum::IfcRoofTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcRoofTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcRoofTypeEnum::IfcRoofTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcRoofTypeEnum::Value Ifc4x3_rc4::IfcRoofTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcRoofTypeEnum::Value) Ifc4x3_rc4::IfcRoofTypeEnum::IfcRoofTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcRoofTypeEnum::operator Ifc4x3_rc4::IfcRoofTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcRoofTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSIPrefix::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1026]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSIPrefix::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1026]); }

Ifc4x3_rc4::IfcSIPrefix::IfcSIPrefix(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSIPrefix::IfcSIPrefix(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSIPrefix::IfcSIPrefix(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSIPrefix::ToString(Value v) {
    return Ifc4x3_rc4::IfcSIPrefix::IfcSIPrefix::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSIPrefix::Value Ifc4x3_rc4::IfcSIPrefix::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSIPrefix::Value) Ifc4x3_rc4::IfcSIPrefix::IfcSIPrefix::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSIPrefix::operator Ifc4x3_rc4::IfcSIPrefix::Value() const {
    return (Ifc4x3_rc4::IfcSIPrefix::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSIUnitName::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1029]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSIUnitName::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1029]); }

Ifc4x3_rc4::IfcSIUnitName::IfcSIUnitName(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSIUnitName::IfcSIUnitName(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSIUnitName::IfcSIUnitName(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSIUnitName::ToString(Value v) {
    return Ifc4x3_rc4::IfcSIUnitName::IfcSIUnitName::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSIUnitName::Value Ifc4x3_rc4::IfcSIUnitName::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSIUnitName::Value) Ifc4x3_rc4::IfcSIUnitName::IfcSIUnitName::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSIUnitName::operator Ifc4x3_rc4::IfcSIUnitName::Value() const {
    return (Ifc4x3_rc4::IfcSIUnitName::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[985]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[985]); }

Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::IfcSanitaryTerminalTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::IfcSanitaryTerminalTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::IfcSanitaryTerminalTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::IfcSanitaryTerminalTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Value Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Value) Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::IfcSanitaryTerminalTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::operator Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSectionTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[997]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSectionTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[997]); }

Ifc4x3_rc4::IfcSectionTypeEnum::IfcSectionTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSectionTypeEnum::IfcSectionTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSectionTypeEnum::IfcSectionTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSectionTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSectionTypeEnum::IfcSectionTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSectionTypeEnum::Value Ifc4x3_rc4::IfcSectionTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSectionTypeEnum::Value) Ifc4x3_rc4::IfcSectionTypeEnum::IfcSectionTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSectionTypeEnum::operator Ifc4x3_rc4::IfcSectionTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSectionTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSensorTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1003]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSensorTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1003]); }

Ifc4x3_rc4::IfcSensorTypeEnum::IfcSensorTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSensorTypeEnum::IfcSensorTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSensorTypeEnum::IfcSensorTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSensorTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSensorTypeEnum::IfcSensorTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSensorTypeEnum::Value Ifc4x3_rc4::IfcSensorTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSensorTypeEnum::Value) Ifc4x3_rc4::IfcSensorTypeEnum::IfcSensorTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSensorTypeEnum::operator Ifc4x3_rc4::IfcSensorTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSensorTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSequenceEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1004]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSequenceEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1004]); }

Ifc4x3_rc4::IfcSequenceEnum::IfcSequenceEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSequenceEnum::IfcSequenceEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSequenceEnum::IfcSequenceEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSequenceEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSequenceEnum::IfcSequenceEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSequenceEnum::Value Ifc4x3_rc4::IfcSequenceEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSequenceEnum::Value) Ifc4x3_rc4::IfcSequenceEnum::IfcSequenceEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSequenceEnum::operator Ifc4x3_rc4::IfcSequenceEnum::Value() const {
    return (Ifc4x3_rc4::IfcSequenceEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcShadingDeviceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1008]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1008]); }

Ifc4x3_rc4::IfcShadingDeviceTypeEnum::IfcShadingDeviceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcShadingDeviceTypeEnum::IfcShadingDeviceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcShadingDeviceTypeEnum::IfcShadingDeviceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcShadingDeviceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcShadingDeviceTypeEnum::IfcShadingDeviceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Value Ifc4x3_rc4::IfcShadingDeviceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Value) Ifc4x3_rc4::IfcShadingDeviceTypeEnum::IfcShadingDeviceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcShadingDeviceTypeEnum::operator Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSignTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1020]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSignTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1020]); }

Ifc4x3_rc4::IfcSignTypeEnum::IfcSignTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSignTypeEnum::IfcSignTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSignTypeEnum::IfcSignTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSignTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSignTypeEnum::IfcSignTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSignTypeEnum::Value Ifc4x3_rc4::IfcSignTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSignTypeEnum::Value) Ifc4x3_rc4::IfcSignTypeEnum::IfcSignTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSignTypeEnum::operator Ifc4x3_rc4::IfcSignTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSignTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSignalTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1018]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSignalTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1018]); }

Ifc4x3_rc4::IfcSignalTypeEnum::IfcSignalTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSignalTypeEnum::IfcSignalTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSignalTypeEnum::IfcSignalTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSignalTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSignalTypeEnum::IfcSignalTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSignalTypeEnum::Value Ifc4x3_rc4::IfcSignalTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSignalTypeEnum::Value) Ifc4x3_rc4::IfcSignalTypeEnum::IfcSignalTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSignalTypeEnum::operator Ifc4x3_rc4::IfcSignalTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSignalTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1023]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1023]); }

Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::IfcSimplePropertyTemplateTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::IfcSimplePropertyTemplateTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::IfcSimplePropertyTemplateTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::IfcSimplePropertyTemplateTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::Value Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::Value) Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::IfcSimplePropertyTemplateTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::operator Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSlabTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1035]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSlabTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1035]); }

Ifc4x3_rc4::IfcSlabTypeEnum::IfcSlabTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSlabTypeEnum::IfcSlabTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSlabTypeEnum::IfcSlabTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSlabTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSlabTypeEnum::IfcSlabTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSlabTypeEnum::Value Ifc4x3_rc4::IfcSlabTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSlabTypeEnum::Value) Ifc4x3_rc4::IfcSlabTypeEnum::IfcSlabTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSlabTypeEnum::operator Ifc4x3_rc4::IfcSlabTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSlabTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSolarDeviceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1039]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1039]); }

Ifc4x3_rc4::IfcSolarDeviceTypeEnum::IfcSolarDeviceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSolarDeviceTypeEnum::IfcSolarDeviceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSolarDeviceTypeEnum::IfcSolarDeviceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSolarDeviceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSolarDeviceTypeEnum::IfcSolarDeviceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Value Ifc4x3_rc4::IfcSolarDeviceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Value) Ifc4x3_rc4::IfcSolarDeviceTypeEnum::IfcSolarDeviceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSolarDeviceTypeEnum::operator Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1052]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1052]); }

Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::IfcSpaceHeaterTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::IfcSpaceHeaterTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::IfcSpaceHeaterTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::IfcSpaceHeaterTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Value Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Value) Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::IfcSpaceHeaterTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::operator Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSpaceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1054]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSpaceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1054]); }

Ifc4x3_rc4::IfcSpaceTypeEnum::IfcSpaceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSpaceTypeEnum::IfcSpaceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSpaceTypeEnum::IfcSpaceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSpaceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSpaceTypeEnum::IfcSpaceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSpaceTypeEnum::Value Ifc4x3_rc4::IfcSpaceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSpaceTypeEnum::Value) Ifc4x3_rc4::IfcSpaceTypeEnum::IfcSpaceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSpaceTypeEnum::operator Ifc4x3_rc4::IfcSpaceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSpaceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSpatialZoneTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1062]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1062]); }

Ifc4x3_rc4::IfcSpatialZoneTypeEnum::IfcSpatialZoneTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSpatialZoneTypeEnum::IfcSpatialZoneTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSpatialZoneTypeEnum::IfcSpatialZoneTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSpatialZoneTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSpatialZoneTypeEnum::IfcSpatialZoneTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Value Ifc4x3_rc4::IfcSpatialZoneTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Value) Ifc4x3_rc4::IfcSpatialZoneTypeEnum::IfcSpatialZoneTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSpatialZoneTypeEnum::operator Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStackTerminalTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1072]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStackTerminalTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1072]); }

Ifc4x3_rc4::IfcStackTerminalTypeEnum::IfcStackTerminalTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcStackTerminalTypeEnum::IfcStackTerminalTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcStackTerminalTypeEnum::IfcStackTerminalTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcStackTerminalTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcStackTerminalTypeEnum::IfcStackTerminalTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcStackTerminalTypeEnum::Value Ifc4x3_rc4::IfcStackTerminalTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcStackTerminalTypeEnum::Value) Ifc4x3_rc4::IfcStackTerminalTypeEnum::IfcStackTerminalTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcStackTerminalTypeEnum::operator Ifc4x3_rc4::IfcStackTerminalTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcStackTerminalTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStairFlightTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1076]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStairFlightTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1076]); }

Ifc4x3_rc4::IfcStairFlightTypeEnum::IfcStairFlightTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcStairFlightTypeEnum::IfcStairFlightTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcStairFlightTypeEnum::IfcStairFlightTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcStairFlightTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcStairFlightTypeEnum::IfcStairFlightTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcStairFlightTypeEnum::Value Ifc4x3_rc4::IfcStairFlightTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcStairFlightTypeEnum::Value) Ifc4x3_rc4::IfcStairFlightTypeEnum::IfcStairFlightTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcStairFlightTypeEnum::operator Ifc4x3_rc4::IfcStairFlightTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcStairFlightTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStairTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1078]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStairTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1078]); }

Ifc4x3_rc4::IfcStairTypeEnum::IfcStairTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcStairTypeEnum::IfcStairTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcStairTypeEnum::IfcStairTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcStairTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcStairTypeEnum::IfcStairTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcStairTypeEnum::Value Ifc4x3_rc4::IfcStairTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcStairTypeEnum::Value) Ifc4x3_rc4::IfcStairTypeEnum::IfcStairTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcStairTypeEnum::operator Ifc4x3_rc4::IfcStairTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcStairTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStateEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1079]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStateEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1079]); }

Ifc4x3_rc4::IfcStateEnum::IfcStateEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcStateEnum::IfcStateEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcStateEnum::IfcStateEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcStateEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcStateEnum::IfcStateEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcStateEnum::Value Ifc4x3_rc4::IfcStateEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcStateEnum::Value) Ifc4x3_rc4::IfcStateEnum::IfcStateEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcStateEnum::operator Ifc4x3_rc4::IfcStateEnum::Value() const {
    return (Ifc4x3_rc4::IfcStateEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1087]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1087]); }

Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::IfcStructuralCurveActivityTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::IfcStructuralCurveActivityTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::IfcStructuralCurveActivityTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::IfcStructuralCurveActivityTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value) Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::IfcStructuralCurveActivityTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::operator Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1090]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1090]); }

Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::IfcStructuralCurveMemberTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::IfcStructuralCurveMemberTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::IfcStructuralCurveMemberTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::IfcStructuralCurveMemberTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Value Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Value) Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::IfcStructuralCurveMemberTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::operator Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1116]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1116]); }

Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::IfcStructuralSurfaceActivityTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::IfcStructuralSurfaceActivityTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::IfcStructuralSurfaceActivityTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::IfcStructuralSurfaceActivityTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value) Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::IfcStructuralSurfaceActivityTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::operator Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1119]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1119]); }

Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::IfcStructuralSurfaceMemberTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::IfcStructuralSurfaceMemberTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::IfcStructuralSurfaceMemberTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::IfcStructuralSurfaceMemberTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Value Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Value) Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::IfcStructuralSurfaceMemberTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::operator Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSubContractResourceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1127]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1127]); }

Ifc4x3_rc4::IfcSubContractResourceTypeEnum::IfcSubContractResourceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSubContractResourceTypeEnum::IfcSubContractResourceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSubContractResourceTypeEnum::IfcSubContractResourceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSubContractResourceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSubContractResourceTypeEnum::IfcSubContractResourceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Value Ifc4x3_rc4::IfcSubContractResourceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Value) Ifc4x3_rc4::IfcSubContractResourceTypeEnum::IfcSubContractResourceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSubContractResourceTypeEnum::operator Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1133]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1133]); }

Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::IfcSurfaceFeatureTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::IfcSurfaceFeatureTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::IfcSurfaceFeatureTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::IfcSurfaceFeatureTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::Value Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::Value) Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::IfcSurfaceFeatureTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::operator Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSurfaceSide::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1138]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSurfaceSide::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1138]); }

Ifc4x3_rc4::IfcSurfaceSide::IfcSurfaceSide(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSurfaceSide::IfcSurfaceSide(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSurfaceSide::IfcSurfaceSide(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSurfaceSide::ToString(Value v) {
    return Ifc4x3_rc4::IfcSurfaceSide::IfcSurfaceSide::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSurfaceSide::Value Ifc4x3_rc4::IfcSurfaceSide::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSurfaceSide::Value) Ifc4x3_rc4::IfcSurfaceSide::IfcSurfaceSide::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSurfaceSide::operator Ifc4x3_rc4::IfcSurfaceSide::Value() const {
    return (Ifc4x3_rc4::IfcSurfaceSide::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1153]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1153]); }

Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::IfcSwitchingDeviceTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::IfcSwitchingDeviceTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::IfcSwitchingDeviceTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::IfcSwitchingDeviceTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Value Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Value) Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::IfcSwitchingDeviceTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::operator Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1157]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1157]); }

Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::IfcSystemFurnitureElementTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::IfcSystemFurnitureElementTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::IfcSystemFurnitureElementTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::IfcSystemFurnitureElementTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Value Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Value) Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::IfcSystemFurnitureElementTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::operator Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTankTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1163]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTankTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1163]); }

Ifc4x3_rc4::IfcTankTypeEnum::IfcTankTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTankTypeEnum::IfcTankTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTankTypeEnum::IfcTankTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTankTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTankTypeEnum::IfcTankTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTankTypeEnum::Value Ifc4x3_rc4::IfcTankTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTankTypeEnum::Value) Ifc4x3_rc4::IfcTankTypeEnum::IfcTankTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTankTypeEnum::operator Ifc4x3_rc4::IfcTankTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTankTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTaskDurationEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1165]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTaskDurationEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1165]); }

Ifc4x3_rc4::IfcTaskDurationEnum::IfcTaskDurationEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTaskDurationEnum::IfcTaskDurationEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTaskDurationEnum::IfcTaskDurationEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTaskDurationEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTaskDurationEnum::IfcTaskDurationEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTaskDurationEnum::Value Ifc4x3_rc4::IfcTaskDurationEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTaskDurationEnum::Value) Ifc4x3_rc4::IfcTaskDurationEnum::IfcTaskDurationEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTaskDurationEnum::operator Ifc4x3_rc4::IfcTaskDurationEnum::Value() const {
    return (Ifc4x3_rc4::IfcTaskDurationEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTaskTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1169]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTaskTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1169]); }

Ifc4x3_rc4::IfcTaskTypeEnum::IfcTaskTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTaskTypeEnum::IfcTaskTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTaskTypeEnum::IfcTaskTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTaskTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTaskTypeEnum::IfcTaskTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTaskTypeEnum::Value Ifc4x3_rc4::IfcTaskTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTaskTypeEnum::Value) Ifc4x3_rc4::IfcTaskTypeEnum::IfcTaskTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTaskTypeEnum::operator Ifc4x3_rc4::IfcTaskTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTaskTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTendonAnchorTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1176]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1176]); }

Ifc4x3_rc4::IfcTendonAnchorTypeEnum::IfcTendonAnchorTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTendonAnchorTypeEnum::IfcTendonAnchorTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTendonAnchorTypeEnum::IfcTendonAnchorTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTendonAnchorTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTendonAnchorTypeEnum::IfcTendonAnchorTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Value Ifc4x3_rc4::IfcTendonAnchorTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Value) Ifc4x3_rc4::IfcTendonAnchorTypeEnum::IfcTendonAnchorTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTendonAnchorTypeEnum::operator Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTendonConduitTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1179]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTendonConduitTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1179]); }

Ifc4x3_rc4::IfcTendonConduitTypeEnum::IfcTendonConduitTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTendonConduitTypeEnum::IfcTendonConduitTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTendonConduitTypeEnum::IfcTendonConduitTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTendonConduitTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTendonConduitTypeEnum::IfcTendonConduitTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTendonConduitTypeEnum::Value Ifc4x3_rc4::IfcTendonConduitTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTendonConduitTypeEnum::Value) Ifc4x3_rc4::IfcTendonConduitTypeEnum::IfcTendonConduitTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTendonConduitTypeEnum::operator Ifc4x3_rc4::IfcTendonConduitTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTendonConduitTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTendonTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1181]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTendonTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1181]); }

Ifc4x3_rc4::IfcTendonTypeEnum::IfcTendonTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTendonTypeEnum::IfcTendonTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTendonTypeEnum::IfcTendonTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTendonTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTendonTypeEnum::IfcTendonTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTendonTypeEnum::Value Ifc4x3_rc4::IfcTendonTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTendonTypeEnum::Value) Ifc4x3_rc4::IfcTendonTypeEnum::IfcTendonTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTendonTypeEnum::operator Ifc4x3_rc4::IfcTendonTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTendonTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTextPath::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1191]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTextPath::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1191]); }

Ifc4x3_rc4::IfcTextPath::IfcTextPath(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTextPath::IfcTextPath(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTextPath::IfcTextPath(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTextPath::ToString(Value v) {
    return Ifc4x3_rc4::IfcTextPath::IfcTextPath::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTextPath::Value Ifc4x3_rc4::IfcTextPath::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTextPath::Value) Ifc4x3_rc4::IfcTextPath::IfcTextPath::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTextPath::operator Ifc4x3_rc4::IfcTextPath::Value() const {
    return (Ifc4x3_rc4::IfcTextPath::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1214]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1214]); }

Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::IfcTimeSeriesDataTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::IfcTimeSeriesDataTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::IfcTimeSeriesDataTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::IfcTimeSeriesDataTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Value Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Value) Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::IfcTimeSeriesDataTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::operator Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTrackElementTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1223]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTrackElementTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1223]); }

Ifc4x3_rc4::IfcTrackElementTypeEnum::IfcTrackElementTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTrackElementTypeEnum::IfcTrackElementTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTrackElementTypeEnum::IfcTrackElementTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTrackElementTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTrackElementTypeEnum::IfcTrackElementTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTrackElementTypeEnum::Value Ifc4x3_rc4::IfcTrackElementTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTrackElementTypeEnum::Value) Ifc4x3_rc4::IfcTrackElementTypeEnum::IfcTrackElementTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTrackElementTypeEnum::operator Ifc4x3_rc4::IfcTrackElementTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTrackElementTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTransformerTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1226]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTransformerTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1226]); }

Ifc4x3_rc4::IfcTransformerTypeEnum::IfcTransformerTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTransformerTypeEnum::IfcTransformerTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTransformerTypeEnum::IfcTransformerTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTransformerTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTransformerTypeEnum::IfcTransformerTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTransformerTypeEnum::Value Ifc4x3_rc4::IfcTransformerTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTransformerTypeEnum::Value) Ifc4x3_rc4::IfcTransformerTypeEnum::IfcTransformerTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTransformerTypeEnum::operator Ifc4x3_rc4::IfcTransformerTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTransformerTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTransitionCode::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1227]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTransitionCode::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1227]); }

Ifc4x3_rc4::IfcTransitionCode::IfcTransitionCode(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTransitionCode::IfcTransitionCode(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTransitionCode::IfcTransitionCode(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTransitionCode::ToString(Value v) {
    return Ifc4x3_rc4::IfcTransitionCode::IfcTransitionCode::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTransitionCode::Value Ifc4x3_rc4::IfcTransitionCode::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTransitionCode::Value) Ifc4x3_rc4::IfcTransitionCode::IfcTransitionCode::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTransitionCode::operator Ifc4x3_rc4::IfcTransitionCode::Value() const {
    return (Ifc4x3_rc4::IfcTransitionCode::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1230]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1230]); }

Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::IfcTransportElementFixedTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::IfcTransportElementFixedTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::IfcTransportElementFixedTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::IfcTransportElementFixedTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::Value Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::Value) Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::IfcTransportElementFixedTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::operator Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTransportElementFixedTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1231]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1231]); }

Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::IfcTransportElementNonFixedTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::IfcTransportElementNonFixedTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::IfcTransportElementNonFixedTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::IfcTransportElementNonFixedTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::Value Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::Value) Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::IfcTransportElementNonFixedTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::operator Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTransportElementNonFixedTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTrimmingPreference::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1238]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTrimmingPreference::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1238]); }

Ifc4x3_rc4::IfcTrimmingPreference::IfcTrimmingPreference(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTrimmingPreference::IfcTrimmingPreference(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTrimmingPreference::IfcTrimmingPreference(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTrimmingPreference::ToString(Value v) {
    return Ifc4x3_rc4::IfcTrimmingPreference::IfcTrimmingPreference::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTrimmingPreference::Value Ifc4x3_rc4::IfcTrimmingPreference::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTrimmingPreference::Value) Ifc4x3_rc4::IfcTrimmingPreference::IfcTrimmingPreference::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTrimmingPreference::operator Ifc4x3_rc4::IfcTrimmingPreference::Value() const {
    return (Ifc4x3_rc4::IfcTrimmingPreference::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTubeBundleTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1243]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcTubeBundleTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1243]); }

Ifc4x3_rc4::IfcTubeBundleTypeEnum::IfcTubeBundleTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcTubeBundleTypeEnum::IfcTubeBundleTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcTubeBundleTypeEnum::IfcTubeBundleTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcTubeBundleTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcTubeBundleTypeEnum::IfcTubeBundleTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcTubeBundleTypeEnum::Value Ifc4x3_rc4::IfcTubeBundleTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcTubeBundleTypeEnum::Value) Ifc4x3_rc4::IfcTubeBundleTypeEnum::IfcTubeBundleTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcTubeBundleTypeEnum::operator Ifc4x3_rc4::IfcTubeBundleTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcTubeBundleTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcUnitEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1256]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcUnitEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1256]); }

Ifc4x3_rc4::IfcUnitEnum::IfcUnitEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcUnitEnum::IfcUnitEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcUnitEnum::IfcUnitEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcUnitEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcUnitEnum::IfcUnitEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcUnitEnum::Value Ifc4x3_rc4::IfcUnitEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcUnitEnum::Value) Ifc4x3_rc4::IfcUnitEnum::IfcUnitEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcUnitEnum::operator Ifc4x3_rc4::IfcUnitEnum::Value() const {
    return (Ifc4x3_rc4::IfcUnitEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1251]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1251]); }

Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::IfcUnitaryControlElementTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::IfcUnitaryControlElementTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::IfcUnitaryControlElementTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::IfcUnitaryControlElementTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Value Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Value) Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::IfcUnitaryControlElementTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::operator Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1254]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1254]); }

Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::IfcUnitaryEquipmentTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::IfcUnitaryEquipmentTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::IfcUnitaryEquipmentTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::IfcUnitaryEquipmentTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Value Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Value) Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::IfcUnitaryEquipmentTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::operator Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcValveTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1262]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcValveTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1262]); }

Ifc4x3_rc4::IfcValveTypeEnum::IfcValveTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcValveTypeEnum::IfcValveTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcValveTypeEnum::IfcValveTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcValveTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcValveTypeEnum::IfcValveTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcValveTypeEnum::Value Ifc4x3_rc4::IfcValveTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcValveTypeEnum::Value) Ifc4x3_rc4::IfcValveTypeEnum::IfcValveTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcValveTypeEnum::operator Ifc4x3_rc4::IfcValveTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcValveTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcVibrationDamperTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1271]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1271]); }

Ifc4x3_rc4::IfcVibrationDamperTypeEnum::IfcVibrationDamperTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcVibrationDamperTypeEnum::IfcVibrationDamperTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcVibrationDamperTypeEnum::IfcVibrationDamperTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcVibrationDamperTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcVibrationDamperTypeEnum::IfcVibrationDamperTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Value Ifc4x3_rc4::IfcVibrationDamperTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Value) Ifc4x3_rc4::IfcVibrationDamperTypeEnum::IfcVibrationDamperTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcVibrationDamperTypeEnum::operator Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1274]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1274]); }

Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::IfcVibrationIsolatorTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::IfcVibrationIsolatorTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::IfcVibrationIsolatorTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::IfcVibrationIsolatorTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Value Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Value) Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::IfcVibrationIsolatorTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::operator Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1278]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1278]); }

Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::IfcVoidingFeatureTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::IfcVoidingFeatureTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::IfcVoidingFeatureTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::IfcVoidingFeatureTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::Value Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::Value) Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::IfcVoidingFeatureTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::operator Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWallTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1286]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWallTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1286]); }

Ifc4x3_rc4::IfcWallTypeEnum::IfcWallTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWallTypeEnum::IfcWallTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWallTypeEnum::IfcWallTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWallTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWallTypeEnum::IfcWallTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWallTypeEnum::Value Ifc4x3_rc4::IfcWallTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWallTypeEnum::Value) Ifc4x3_rc4::IfcWallTypeEnum::IfcWallTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWallTypeEnum::operator Ifc4x3_rc4::IfcWallTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcWallTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWasteTerminalTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1292]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1292]); }

Ifc4x3_rc4::IfcWasteTerminalTypeEnum::IfcWasteTerminalTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWasteTerminalTypeEnum::IfcWasteTerminalTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWasteTerminalTypeEnum::IfcWasteTerminalTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWasteTerminalTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWasteTerminalTypeEnum::IfcWasteTerminalTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Value Ifc4x3_rc4::IfcWasteTerminalTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Value) Ifc4x3_rc4::IfcWasteTerminalTypeEnum::IfcWasteTerminalTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWasteTerminalTypeEnum::operator Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowPanelOperationEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1296]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowPanelOperationEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1296]); }

Ifc4x3_rc4::IfcWindowPanelOperationEnum::IfcWindowPanelOperationEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWindowPanelOperationEnum::IfcWindowPanelOperationEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWindowPanelOperationEnum::IfcWindowPanelOperationEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWindowPanelOperationEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWindowPanelOperationEnum::IfcWindowPanelOperationEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWindowPanelOperationEnum::Value Ifc4x3_rc4::IfcWindowPanelOperationEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWindowPanelOperationEnum::Value) Ifc4x3_rc4::IfcWindowPanelOperationEnum::IfcWindowPanelOperationEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWindowPanelOperationEnum::operator Ifc4x3_rc4::IfcWindowPanelOperationEnum::Value() const {
    return (Ifc4x3_rc4::IfcWindowPanelOperationEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowPanelPositionEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1297]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowPanelPositionEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1297]); }

Ifc4x3_rc4::IfcWindowPanelPositionEnum::IfcWindowPanelPositionEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWindowPanelPositionEnum::IfcWindowPanelPositionEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWindowPanelPositionEnum::IfcWindowPanelPositionEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWindowPanelPositionEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWindowPanelPositionEnum::IfcWindowPanelPositionEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWindowPanelPositionEnum::Value Ifc4x3_rc4::IfcWindowPanelPositionEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWindowPanelPositionEnum::Value) Ifc4x3_rc4::IfcWindowPanelPositionEnum::IfcWindowPanelPositionEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWindowPanelPositionEnum::operator Ifc4x3_rc4::IfcWindowPanelPositionEnum::Value() const {
    return (Ifc4x3_rc4::IfcWindowPanelPositionEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowStyleConstructionEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1301]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowStyleConstructionEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1301]); }

Ifc4x3_rc4::IfcWindowStyleConstructionEnum::IfcWindowStyleConstructionEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWindowStyleConstructionEnum::IfcWindowStyleConstructionEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWindowStyleConstructionEnum::IfcWindowStyleConstructionEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWindowStyleConstructionEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWindowStyleConstructionEnum::IfcWindowStyleConstructionEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWindowStyleConstructionEnum::Value Ifc4x3_rc4::IfcWindowStyleConstructionEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWindowStyleConstructionEnum::Value) Ifc4x3_rc4::IfcWindowStyleConstructionEnum::IfcWindowStyleConstructionEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWindowStyleConstructionEnum::operator Ifc4x3_rc4::IfcWindowStyleConstructionEnum::Value() const {
    return (Ifc4x3_rc4::IfcWindowStyleConstructionEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowStyleOperationEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1302]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowStyleOperationEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1302]); }

Ifc4x3_rc4::IfcWindowStyleOperationEnum::IfcWindowStyleOperationEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWindowStyleOperationEnum::IfcWindowStyleOperationEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWindowStyleOperationEnum::IfcWindowStyleOperationEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWindowStyleOperationEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWindowStyleOperationEnum::IfcWindowStyleOperationEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWindowStyleOperationEnum::Value Ifc4x3_rc4::IfcWindowStyleOperationEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWindowStyleOperationEnum::Value) Ifc4x3_rc4::IfcWindowStyleOperationEnum::IfcWindowStyleOperationEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWindowStyleOperationEnum::operator Ifc4x3_rc4::IfcWindowStyleOperationEnum::Value() const {
    return (Ifc4x3_rc4::IfcWindowStyleOperationEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1304]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1304]); }

Ifc4x3_rc4::IfcWindowTypeEnum::IfcWindowTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWindowTypeEnum::IfcWindowTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWindowTypeEnum::IfcWindowTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWindowTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWindowTypeEnum::IfcWindowTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWindowTypeEnum::Value Ifc4x3_rc4::IfcWindowTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWindowTypeEnum::Value) Ifc4x3_rc4::IfcWindowTypeEnum::IfcWindowTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWindowTypeEnum::operator Ifc4x3_rc4::IfcWindowTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcWindowTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowTypePartitioningEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1305]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1305]); }

Ifc4x3_rc4::IfcWindowTypePartitioningEnum::IfcWindowTypePartitioningEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWindowTypePartitioningEnum::IfcWindowTypePartitioningEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWindowTypePartitioningEnum::IfcWindowTypePartitioningEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWindowTypePartitioningEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWindowTypePartitioningEnum::IfcWindowTypePartitioningEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value Ifc4x3_rc4::IfcWindowTypePartitioningEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value) Ifc4x3_rc4::IfcWindowTypePartitioningEnum::IfcWindowTypePartitioningEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWindowTypePartitioningEnum::operator Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value() const {
    return (Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWorkCalendarTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1307]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWorkCalendarTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1307]); }

Ifc4x3_rc4::IfcWorkCalendarTypeEnum::IfcWorkCalendarTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWorkCalendarTypeEnum::IfcWorkCalendarTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWorkCalendarTypeEnum::IfcWorkCalendarTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWorkCalendarTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWorkCalendarTypeEnum::IfcWorkCalendarTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWorkCalendarTypeEnum::Value Ifc4x3_rc4::IfcWorkCalendarTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWorkCalendarTypeEnum::Value) Ifc4x3_rc4::IfcWorkCalendarTypeEnum::IfcWorkCalendarTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWorkCalendarTypeEnum::operator Ifc4x3_rc4::IfcWorkCalendarTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcWorkCalendarTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWorkPlanTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1310]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWorkPlanTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1310]); }

Ifc4x3_rc4::IfcWorkPlanTypeEnum::IfcWorkPlanTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWorkPlanTypeEnum::IfcWorkPlanTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWorkPlanTypeEnum::IfcWorkPlanTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWorkPlanTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWorkPlanTypeEnum::IfcWorkPlanTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWorkPlanTypeEnum::Value Ifc4x3_rc4::IfcWorkPlanTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWorkPlanTypeEnum::Value) Ifc4x3_rc4::IfcWorkPlanTypeEnum::IfcWorkPlanTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWorkPlanTypeEnum::operator Ifc4x3_rc4::IfcWorkPlanTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcWorkPlanTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWorkScheduleTypeEnum::declaration() const { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1312]); }
const IfcParse::enumeration_type& Ifc4x3_rc4::IfcWorkScheduleTypeEnum::Class() { return *((IfcParse::enumeration_type*)IFC4X3_RC4_types[1312]); }

Ifc4x3_rc4::IfcWorkScheduleTypeEnum::IfcWorkScheduleTypeEnum(IfcEntityInstanceData&& e)
    : IfcBaseType(std::move(e))
{}

Ifc4x3_rc4::IfcWorkScheduleTypeEnum::IfcWorkScheduleTypeEnum(Value v) {
    set_attribute_value(0, EnumerationReference(&declaration(), static_cast<size_t>(v)));
}

Ifc4x3_rc4::IfcWorkScheduleTypeEnum::IfcWorkScheduleTypeEnum(const std::string& v) {
    set_attribute_value(0, EnumerationReference(&declaration(), declaration().lookup_enum_offset(v)));
}

const char* Ifc4x3_rc4::IfcWorkScheduleTypeEnum::ToString(Value v) {
    return Ifc4x3_rc4::IfcWorkScheduleTypeEnum::IfcWorkScheduleTypeEnum::Class().lookup_enum_value((size_t)v);
}

Ifc4x3_rc4::IfcWorkScheduleTypeEnum::Value Ifc4x3_rc4::IfcWorkScheduleTypeEnum::FromString(const std::string& s) {
    return (Ifc4x3_rc4::IfcWorkScheduleTypeEnum::Value) Ifc4x3_rc4::IfcWorkScheduleTypeEnum::IfcWorkScheduleTypeEnum::Class().lookup_enum_offset(s);
}

Ifc4x3_rc4::IfcWorkScheduleTypeEnum::operator Ifc4x3_rc4::IfcWorkScheduleTypeEnum::Value() const {
    return (Ifc4x3_rc4::IfcWorkScheduleTypeEnum::Value) data_.storage_.get<EnumerationReference>(0).index();
}

const IfcParse::select_type& Ifc4x3_rc4::IfcActorSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[8]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcAppliedValueSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[51]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcAxis2Placement::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[68]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcBendingParameterSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[81]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcBooleanOperand::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[90]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcClassificationReferenceSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[171]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcClassificationSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[172]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcColour::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[178]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcColourOrFactor::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[179]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcCoordinateReferenceSystemSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[247]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcCsgSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[265]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcCurveFontOrScaledCurveFontSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[276]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcCurveMeasureSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[278]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcCurveOnSurface::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[279]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcCurveOrEdgeCurve::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[280]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcCurveStyleFontSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[286]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcDefinitionSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[298]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcDerivedMeasureValue::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[299]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcDocumentSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[335]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcFacilityPartTypeSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[449]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcFillStyleSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[464]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcGeometricSetSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[515]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcGridPlacementDirectionSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[527]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcHatchLineDistanceSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[531]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcImpactProtectionDeviceTypeSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[546]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcInterferenceSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[559]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcLayeredItem::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[585]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcLibrarySelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[590]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcLightDistributionDataSourceSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[593]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcMaterialSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[656]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcMeasureValue::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[658]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcMetricValueSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[671]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[679]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[681]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[682]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcObjectReferenceSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[707]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcPointOrVertexPoint::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[774]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcProcessSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[805]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcProductRepresentationSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[809]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcProductSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[810]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcPropertySetDefinitionSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[833]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcResourceObjectSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[963]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcResourceSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[964]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcRotationalStiffnessSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[981]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcSegmentIndexSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1000]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcShell::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1013]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcSimpleValue::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1024]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcSizeSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1030]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcSolidOrShell::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1042]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcSpaceBoundarySelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1049]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcSpatialReferenceSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1057]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcSpecularHighlightSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1065]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcStructuralActivityAssignmentSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1082]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcSurfaceOrFaceSurface::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1136]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcSurfaceStyleElementSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1140]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcTextFontSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1188]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcTimeOrRatioSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1211]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcTranslationalStiffnessSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1228]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcTransportElementTypeSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1233]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcTrimmingSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1239]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcUnit::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1248]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcValue::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1259]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcVectorOrDirection::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1265]); }

const IfcParse::select_type& Ifc4x3_rc4::IfcWarpingStiffnessSelect::Class() { return *((IfcParse::select_type*)IFC4X3_RC4_types[1289]); }


// Function implementations for IfcAbsorbedDoseMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAbsorbedDoseMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[0]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAbsorbedDoseMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[0]); }
Ifc4x3_rc4::IfcAbsorbedDoseMeasure::IfcAbsorbedDoseMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcAbsorbedDoseMeasure::IfcAbsorbedDoseMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcAbsorbedDoseMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcAccelerationMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAccelerationMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAccelerationMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1]); }
Ifc4x3_rc4::IfcAccelerationMeasure::IfcAccelerationMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcAccelerationMeasure::IfcAccelerationMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcAccelerationMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcAmountOfSubstanceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAmountOfSubstanceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[42]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAmountOfSubstanceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[42]); }
Ifc4x3_rc4::IfcAmountOfSubstanceMeasure::IfcAmountOfSubstanceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcAmountOfSubstanceMeasure::IfcAmountOfSubstanceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcAmountOfSubstanceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcAngularVelocityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAngularVelocityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[45]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAngularVelocityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[45]); }
Ifc4x3_rc4::IfcAngularVelocityMeasure::IfcAngularVelocityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcAngularVelocityMeasure::IfcAngularVelocityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcAngularVelocityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcArcIndex
const IfcParse::type_declaration& Ifc4x3_rc4::IfcArcIndex::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[57]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcArcIndex::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[57]); }
Ifc4x3_rc4::IfcArcIndex::IfcArcIndex(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcArcIndex::IfcArcIndex(std::vector< int > /*[3:3]*/ v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcArcIndex::operator std::vector< int > /*[3:3]*/() const { return data_.get_attribute_value(0); }

// Function implementations for IfcAreaDensityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAreaDensityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[58]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAreaDensityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[58]); }
Ifc4x3_rc4::IfcAreaDensityMeasure::IfcAreaDensityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcAreaDensityMeasure::IfcAreaDensityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcAreaDensityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcAreaMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAreaMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[59]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcAreaMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[59]); }
Ifc4x3_rc4::IfcAreaMeasure::IfcAreaMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcAreaMeasure::IfcAreaMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcAreaMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcBinary
const IfcParse::type_declaration& Ifc4x3_rc4::IfcBinary::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[82]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcBinary::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[82]); }
Ifc4x3_rc4::IfcBinary::IfcBinary(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcBinary::IfcBinary(boost::dynamic_bitset<> v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcBinary::operator boost::dynamic_bitset<>() const { return data_.get_attribute_value(0); }

// Function implementations for IfcBoolean
const IfcParse::type_declaration& Ifc4x3_rc4::IfcBoolean::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[88]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcBoolean::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[88]); }
Ifc4x3_rc4::IfcBoolean::IfcBoolean(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcBoolean::IfcBoolean(bool v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcBoolean::operator bool() const { return data_.get_attribute_value(0); }

// Function implementations for IfcBoxAlignment
const IfcParse::type_declaration& Ifc4x3_rc4::IfcBoxAlignment::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[103]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcBoxAlignment::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[103]); }
Ifc4x3_rc4::IfcBoxAlignment::IfcBoxAlignment(IfcEntityInstanceData&& e) : IfcLabel(std::move(e)) {  }
Ifc4x3_rc4::IfcBoxAlignment::IfcBoxAlignment(std::string v) : IfcLabel(v) {  }
Ifc4x3_rc4::IfcBoxAlignment::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcCardinalPointReference
const IfcParse::type_declaration& Ifc4x3_rc4::IfcCardinalPointReference::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[146]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcCardinalPointReference::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[146]); }
Ifc4x3_rc4::IfcCardinalPointReference::IfcCardinalPointReference(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcCardinalPointReference::IfcCardinalPointReference(int v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcCardinalPointReference::operator int() const { return data_.get_attribute_value(0); }

// Function implementations for IfcComplexNumber
const IfcParse::type_declaration& Ifc4x3_rc4::IfcComplexNumber::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[190]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcComplexNumber::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[190]); }
Ifc4x3_rc4::IfcComplexNumber::IfcComplexNumber(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcComplexNumber::IfcComplexNumber(std::vector< double > /*[1:2]*/ v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcComplexNumber::operator std::vector< double > /*[1:2]*/() const { return data_.get_attribute_value(0); }

// Function implementations for IfcCompoundPlaneAngleMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcCompoundPlaneAngleMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[198]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcCompoundPlaneAngleMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[198]); }
Ifc4x3_rc4::IfcCompoundPlaneAngleMeasure::IfcCompoundPlaneAngleMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcCompoundPlaneAngleMeasure::IfcCompoundPlaneAngleMeasure(std::vector< int > /*[3:4]*/ v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcCompoundPlaneAngleMeasure::operator std::vector< int > /*[3:4]*/() const { return data_.get_attribute_value(0); }

// Function implementations for IfcContextDependentMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcContextDependentMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[228]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcContextDependentMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[228]); }
Ifc4x3_rc4::IfcContextDependentMeasure::IfcContextDependentMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcContextDependentMeasure::IfcContextDependentMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcContextDependentMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcCountMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcCountMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[254]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcCountMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[254]); }
Ifc4x3_rc4::IfcCountMeasure::IfcCountMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcCountMeasure::IfcCountMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcCountMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcCurvatureMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcCurvatureMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[272]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcCurvatureMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[272]); }
Ifc4x3_rc4::IfcCurvatureMeasure::IfcCurvatureMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcCurvatureMeasure::IfcCurvatureMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcCurvatureMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcDate
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDate::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[292]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDate::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[292]); }
Ifc4x3_rc4::IfcDate::IfcDate(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcDate::IfcDate(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcDate::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcDateTime
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDateTime::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[293]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDateTime::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[293]); }
Ifc4x3_rc4::IfcDateTime::IfcDateTime(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcDateTime::IfcDateTime(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcDateTime::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcDayInMonthNumber
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDayInMonthNumber::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[294]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDayInMonthNumber::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[294]); }
Ifc4x3_rc4::IfcDayInMonthNumber::IfcDayInMonthNumber(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcDayInMonthNumber::IfcDayInMonthNumber(int v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcDayInMonthNumber::operator int() const { return data_.get_attribute_value(0); }

// Function implementations for IfcDayInWeekNumber
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDayInWeekNumber::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[295]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDayInWeekNumber::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[295]); }
Ifc4x3_rc4::IfcDayInWeekNumber::IfcDayInWeekNumber(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcDayInWeekNumber::IfcDayInWeekNumber(int v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcDayInWeekNumber::operator int() const { return data_.get_attribute_value(0); }

// Function implementations for IfcDescriptiveMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDescriptiveMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[304]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDescriptiveMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[304]); }
Ifc4x3_rc4::IfcDescriptiveMeasure::IfcDescriptiveMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcDescriptiveMeasure::IfcDescriptiveMeasure(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcDescriptiveMeasure::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcDimensionCount
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDimensionCount::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[306]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDimensionCount::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[306]); }
Ifc4x3_rc4::IfcDimensionCount::IfcDimensionCount(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcDimensionCount::IfcDimensionCount(int v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcDimensionCount::operator int() const { return data_.get_attribute_value(0); }

// Function implementations for IfcDoseEquivalentMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDoseEquivalentMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[349]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDoseEquivalentMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[349]); }
Ifc4x3_rc4::IfcDoseEquivalentMeasure::IfcDoseEquivalentMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcDoseEquivalentMeasure::IfcDoseEquivalentMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcDoseEquivalentMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcDuration
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDuration::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[361]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDuration::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[361]); }
Ifc4x3_rc4::IfcDuration::IfcDuration(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcDuration::IfcDuration(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcDuration::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcDynamicViscosityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDynamicViscosityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[362]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcDynamicViscosityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[362]); }
Ifc4x3_rc4::IfcDynamicViscosityMeasure::IfcDynamicViscosityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcDynamicViscosityMeasure::IfcDynamicViscosityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcDynamicViscosityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcElectricCapacitanceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricCapacitanceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[374]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricCapacitanceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[374]); }
Ifc4x3_rc4::IfcElectricCapacitanceMeasure::IfcElectricCapacitanceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcElectricCapacitanceMeasure::IfcElectricCapacitanceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcElectricCapacitanceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcElectricChargeMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricChargeMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[375]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricChargeMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[375]); }
Ifc4x3_rc4::IfcElectricChargeMeasure::IfcElectricChargeMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcElectricChargeMeasure::IfcElectricChargeMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcElectricChargeMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcElectricConductanceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricConductanceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[376]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricConductanceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[376]); }
Ifc4x3_rc4::IfcElectricConductanceMeasure::IfcElectricConductanceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcElectricConductanceMeasure::IfcElectricConductanceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcElectricConductanceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcElectricCurrentMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricCurrentMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[377]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricCurrentMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[377]); }
Ifc4x3_rc4::IfcElectricCurrentMeasure::IfcElectricCurrentMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcElectricCurrentMeasure::IfcElectricCurrentMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcElectricCurrentMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcElectricResistanceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricResistanceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[393]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricResistanceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[393]); }
Ifc4x3_rc4::IfcElectricResistanceMeasure::IfcElectricResistanceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcElectricResistanceMeasure::IfcElectricResistanceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcElectricResistanceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcElectricVoltageMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricVoltageMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[397]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcElectricVoltageMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[397]); }
Ifc4x3_rc4::IfcElectricVoltageMeasure::IfcElectricVoltageMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcElectricVoltageMeasure::IfcElectricVoltageMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcElectricVoltageMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcEnergyMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcEnergyMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[412]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcEnergyMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[412]); }
Ifc4x3_rc4::IfcEnergyMeasure::IfcEnergyMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcEnergyMeasure::IfcEnergyMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcEnergyMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcFontStyle
const IfcParse::type_declaration& Ifc4x3_rc4::IfcFontStyle::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[493]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcFontStyle::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[493]); }
Ifc4x3_rc4::IfcFontStyle::IfcFontStyle(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcFontStyle::IfcFontStyle(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcFontStyle::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcFontVariant
const IfcParse::type_declaration& Ifc4x3_rc4::IfcFontVariant::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[494]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcFontVariant::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[494]); }
Ifc4x3_rc4::IfcFontVariant::IfcFontVariant(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcFontVariant::IfcFontVariant(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcFontVariant::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcFontWeight
const IfcParse::type_declaration& Ifc4x3_rc4::IfcFontWeight::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[495]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcFontWeight::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[495]); }
Ifc4x3_rc4::IfcFontWeight::IfcFontWeight(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcFontWeight::IfcFontWeight(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcFontWeight::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcForceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcForceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[499]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcForceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[499]); }
Ifc4x3_rc4::IfcForceMeasure::IfcForceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcForceMeasure::IfcForceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcForceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcFrequencyMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcFrequencyMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[500]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcFrequencyMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[500]); }
Ifc4x3_rc4::IfcFrequencyMeasure::IfcFrequencyMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcFrequencyMeasure::IfcFrequencyMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcFrequencyMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcGloballyUniqueId
const IfcParse::type_declaration& Ifc4x3_rc4::IfcGloballyUniqueId::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[521]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcGloballyUniqueId::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[521]); }
Ifc4x3_rc4::IfcGloballyUniqueId::IfcGloballyUniqueId(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcGloballyUniqueId::IfcGloballyUniqueId(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcGloballyUniqueId::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcHeatFluxDensityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcHeatFluxDensityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[535]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcHeatFluxDensityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[535]); }
Ifc4x3_rc4::IfcHeatFluxDensityMeasure::IfcHeatFluxDensityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcHeatFluxDensityMeasure::IfcHeatFluxDensityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcHeatFluxDensityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcHeatingValueMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcHeatingValueMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[536]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcHeatingValueMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[536]); }
Ifc4x3_rc4::IfcHeatingValueMeasure::IfcHeatingValueMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcHeatingValueMeasure::IfcHeatingValueMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcHeatingValueMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcIdentifier
const IfcParse::type_declaration& Ifc4x3_rc4::IfcIdentifier::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[540]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcIdentifier::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[540]); }
Ifc4x3_rc4::IfcIdentifier::IfcIdentifier(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcIdentifier::IfcIdentifier(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcIdentifier::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcIlluminanceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcIlluminanceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[541]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcIlluminanceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[541]); }
Ifc4x3_rc4::IfcIlluminanceMeasure::IfcIlluminanceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcIlluminanceMeasure::IfcIlluminanceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcIlluminanceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcInductanceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcInductanceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[553]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcInductanceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[553]); }
Ifc4x3_rc4::IfcInductanceMeasure::IfcInductanceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcInductanceMeasure::IfcInductanceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcInductanceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcInteger
const IfcParse::type_declaration& Ifc4x3_rc4::IfcInteger::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[554]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcInteger::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[554]); }
Ifc4x3_rc4::IfcInteger::IfcInteger(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcInteger::IfcInteger(int v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcInteger::operator int() const { return data_.get_attribute_value(0); }

// Function implementations for IfcIntegerCountRateMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcIntegerCountRateMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[555]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcIntegerCountRateMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[555]); }
Ifc4x3_rc4::IfcIntegerCountRateMeasure::IfcIntegerCountRateMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcIntegerCountRateMeasure::IfcIntegerCountRateMeasure(int v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcIntegerCountRateMeasure::operator int() const { return data_.get_attribute_value(0); }

// Function implementations for IfcIonConcentrationMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcIonConcentrationMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[564]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcIonConcentrationMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[564]); }
Ifc4x3_rc4::IfcIonConcentrationMeasure::IfcIonConcentrationMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcIonConcentrationMeasure::IfcIonConcentrationMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcIonConcentrationMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcIsothermalMoistureCapacityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcIsothermalMoistureCapacityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[568]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcIsothermalMoistureCapacityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[568]); }
Ifc4x3_rc4::IfcIsothermalMoistureCapacityMeasure::IfcIsothermalMoistureCapacityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcIsothermalMoistureCapacityMeasure::IfcIsothermalMoistureCapacityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcIsothermalMoistureCapacityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcKinematicViscosityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcKinematicViscosityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[574]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcKinematicViscosityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[574]); }
Ifc4x3_rc4::IfcKinematicViscosityMeasure::IfcKinematicViscosityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcKinematicViscosityMeasure::IfcKinematicViscosityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcKinematicViscosityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLabel
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLabel::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[576]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLabel::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[576]); }
Ifc4x3_rc4::IfcLabel::IfcLabel(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLabel::IfcLabel(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLabel::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLanguageId
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLanguageId::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[584]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLanguageId::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[584]); }
Ifc4x3_rc4::IfcLanguageId::IfcLanguageId(IfcEntityInstanceData&& e) : IfcIdentifier(std::move(e)) {  }
Ifc4x3_rc4::IfcLanguageId::IfcLanguageId(std::string v) : IfcIdentifier(v) {  }
Ifc4x3_rc4::IfcLanguageId::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLengthMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLengthMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[587]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLengthMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[587]); }
Ifc4x3_rc4::IfcLengthMeasure::IfcLengthMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLengthMeasure::IfcLengthMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLengthMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLineIndex
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLineIndex::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[613]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLineIndex::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[613]); }
Ifc4x3_rc4::IfcLineIndex::IfcLineIndex(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLineIndex::IfcLineIndex(std::vector< int > /*[2:?]*/ v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLineIndex::operator std::vector< int > /*[2:?]*/() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLinearForceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLinearForceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[607]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLinearForceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[607]); }
Ifc4x3_rc4::IfcLinearForceMeasure::IfcLinearForceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLinearForceMeasure::IfcLinearForceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLinearForceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLinearMomentMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLinearMomentMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[608]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLinearMomentMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[608]); }
Ifc4x3_rc4::IfcLinearMomentMeasure::IfcLinearMomentMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLinearMomentMeasure::IfcLinearMomentMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLinearMomentMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLinearStiffnessMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLinearStiffnessMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[611]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLinearStiffnessMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[611]); }
Ifc4x3_rc4::IfcLinearStiffnessMeasure::IfcLinearStiffnessMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLinearStiffnessMeasure::IfcLinearStiffnessMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLinearStiffnessMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLinearVelocityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLinearVelocityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[612]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLinearVelocityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[612]); }
Ifc4x3_rc4::IfcLinearVelocityMeasure::IfcLinearVelocityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLinearVelocityMeasure::IfcLinearVelocityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLinearVelocityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLogical
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLogical::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[619]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLogical::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[619]); }
Ifc4x3_rc4::IfcLogical::IfcLogical(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLogical::IfcLogical(boost::logic::tribool v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLogical::operator boost::logic::tribool() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLuminousFluxMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLuminousFluxMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[623]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLuminousFluxMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[623]); }
Ifc4x3_rc4::IfcLuminousFluxMeasure::IfcLuminousFluxMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLuminousFluxMeasure::IfcLuminousFluxMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLuminousFluxMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLuminousIntensityDistributionMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLuminousIntensityDistributionMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[624]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLuminousIntensityDistributionMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[624]); }
Ifc4x3_rc4::IfcLuminousIntensityDistributionMeasure::IfcLuminousIntensityDistributionMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLuminousIntensityDistributionMeasure::IfcLuminousIntensityDistributionMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLuminousIntensityDistributionMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcLuminousIntensityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLuminousIntensityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[625]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcLuminousIntensityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[625]); }
Ifc4x3_rc4::IfcLuminousIntensityMeasure::IfcLuminousIntensityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcLuminousIntensityMeasure::IfcLuminousIntensityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcLuminousIntensityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMagneticFluxDensityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMagneticFluxDensityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[626]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMagneticFluxDensityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[626]); }
Ifc4x3_rc4::IfcMagneticFluxDensityMeasure::IfcMagneticFluxDensityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMagneticFluxDensityMeasure::IfcMagneticFluxDensityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMagneticFluxDensityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMagneticFluxMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMagneticFluxMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[627]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMagneticFluxMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[627]); }
Ifc4x3_rc4::IfcMagneticFluxMeasure::IfcMagneticFluxMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMagneticFluxMeasure::IfcMagneticFluxMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMagneticFluxMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMassDensityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMassDensityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[634]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMassDensityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[634]); }
Ifc4x3_rc4::IfcMassDensityMeasure::IfcMassDensityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMassDensityMeasure::IfcMassDensityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMassDensityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMassFlowRateMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMassFlowRateMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[635]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMassFlowRateMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[635]); }
Ifc4x3_rc4::IfcMassFlowRateMeasure::IfcMassFlowRateMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMassFlowRateMeasure::IfcMassFlowRateMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMassFlowRateMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMassMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMassMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[636]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMassMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[636]); }
Ifc4x3_rc4::IfcMassMeasure::IfcMassMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMassMeasure::IfcMassMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMassMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMassPerLengthMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMassPerLengthMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[637]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMassPerLengthMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[637]); }
Ifc4x3_rc4::IfcMassPerLengthMeasure::IfcMassPerLengthMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMassPerLengthMeasure::IfcMassPerLengthMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMassPerLengthMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcModulusOfElasticityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcModulusOfElasticityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[676]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcModulusOfElasticityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[676]); }
Ifc4x3_rc4::IfcModulusOfElasticityMeasure::IfcModulusOfElasticityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcModulusOfElasticityMeasure::IfcModulusOfElasticityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcModulusOfElasticityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcModulusOfLinearSubgradeReactionMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcModulusOfLinearSubgradeReactionMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[677]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcModulusOfLinearSubgradeReactionMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[677]); }
Ifc4x3_rc4::IfcModulusOfLinearSubgradeReactionMeasure::IfcModulusOfLinearSubgradeReactionMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcModulusOfLinearSubgradeReactionMeasure::IfcModulusOfLinearSubgradeReactionMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcModulusOfLinearSubgradeReactionMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcModulusOfRotationalSubgradeReactionMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[678]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[678]); }
Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionMeasure::IfcModulusOfRotationalSubgradeReactionMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionMeasure::IfcModulusOfRotationalSubgradeReactionMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcModulusOfSubgradeReactionMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcModulusOfSubgradeReactionMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[680]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcModulusOfSubgradeReactionMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[680]); }
Ifc4x3_rc4::IfcModulusOfSubgradeReactionMeasure::IfcModulusOfSubgradeReactionMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcModulusOfSubgradeReactionMeasure::IfcModulusOfSubgradeReactionMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcModulusOfSubgradeReactionMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMoistureDiffusivityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMoistureDiffusivityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[683]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMoistureDiffusivityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[683]); }
Ifc4x3_rc4::IfcMoistureDiffusivityMeasure::IfcMoistureDiffusivityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMoistureDiffusivityMeasure::IfcMoistureDiffusivityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMoistureDiffusivityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMolecularWeightMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMolecularWeightMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[684]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMolecularWeightMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[684]); }
Ifc4x3_rc4::IfcMolecularWeightMeasure::IfcMolecularWeightMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMolecularWeightMeasure::IfcMolecularWeightMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMolecularWeightMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMomentOfInertiaMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMomentOfInertiaMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[685]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMomentOfInertiaMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[685]); }
Ifc4x3_rc4::IfcMomentOfInertiaMeasure::IfcMomentOfInertiaMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMomentOfInertiaMeasure::IfcMomentOfInertiaMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMomentOfInertiaMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMonetaryMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMonetaryMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[686]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMonetaryMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[686]); }
Ifc4x3_rc4::IfcMonetaryMeasure::IfcMonetaryMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMonetaryMeasure::IfcMonetaryMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMonetaryMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcMonthInYearNumber
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMonthInYearNumber::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[688]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcMonthInYearNumber::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[688]); }
Ifc4x3_rc4::IfcMonthInYearNumber::IfcMonthInYearNumber(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcMonthInYearNumber::IfcMonthInYearNumber(int v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcMonthInYearNumber::operator int() const { return data_.get_attribute_value(0); }

// Function implementations for IfcNonNegativeLengthMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcNonNegativeLengthMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[699]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcNonNegativeLengthMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[699]); }
Ifc4x3_rc4::IfcNonNegativeLengthMeasure::IfcNonNegativeLengthMeasure(IfcEntityInstanceData&& e) : IfcLengthMeasure(std::move(e)) {  }
Ifc4x3_rc4::IfcNonNegativeLengthMeasure::IfcNonNegativeLengthMeasure(double v) : IfcLengthMeasure(v) {  }
Ifc4x3_rc4::IfcNonNegativeLengthMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcNormalisedRatioMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcNormalisedRatioMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[700]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcNormalisedRatioMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[700]); }
Ifc4x3_rc4::IfcNormalisedRatioMeasure::IfcNormalisedRatioMeasure(IfcEntityInstanceData&& e) : IfcRatioMeasure(std::move(e)) {  }
Ifc4x3_rc4::IfcNormalisedRatioMeasure::IfcNormalisedRatioMeasure(double v) : IfcRatioMeasure(v) {  }
Ifc4x3_rc4::IfcNormalisedRatioMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcNumericMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcNumericMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[701]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcNumericMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[701]); }
Ifc4x3_rc4::IfcNumericMeasure::IfcNumericMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcNumericMeasure::IfcNumericMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcNumericMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPHMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPHMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[743]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPHMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[743]); }
Ifc4x3_rc4::IfcPHMeasure::IfcPHMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcPHMeasure::IfcPHMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcPHMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcParameterValue
const IfcParse::type_declaration& Ifc4x3_rc4::IfcParameterValue::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[729]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcParameterValue::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[729]); }
Ifc4x3_rc4::IfcParameterValue::IfcParameterValue(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcParameterValue::IfcParameterValue(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcParameterValue::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPlanarForceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPlanarForceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[762]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPlanarForceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[762]); }
Ifc4x3_rc4::IfcPlanarForceMeasure::IfcPlanarForceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcPlanarForceMeasure::IfcPlanarForceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcPlanarForceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPlaneAngleMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPlaneAngleMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[764]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPlaneAngleMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[764]); }
Ifc4x3_rc4::IfcPlaneAngleMeasure::IfcPlaneAngleMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcPlaneAngleMeasure::IfcPlaneAngleMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcPlaneAngleMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPositiveInteger
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPositiveInteger::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[782]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPositiveInteger::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[782]); }
Ifc4x3_rc4::IfcPositiveInteger::IfcPositiveInteger(IfcEntityInstanceData&& e) : IfcInteger(std::move(e)) {  }
Ifc4x3_rc4::IfcPositiveInteger::IfcPositiveInteger(int v) : IfcInteger(v) {  }
Ifc4x3_rc4::IfcPositiveInteger::operator int() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPositiveLengthMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPositiveLengthMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[783]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPositiveLengthMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[783]); }
Ifc4x3_rc4::IfcPositiveLengthMeasure::IfcPositiveLengthMeasure(IfcEntityInstanceData&& e) : IfcLengthMeasure(std::move(e)) {  }
Ifc4x3_rc4::IfcPositiveLengthMeasure::IfcPositiveLengthMeasure(double v) : IfcLengthMeasure(v) {  }
Ifc4x3_rc4::IfcPositiveLengthMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPositivePlaneAngleMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPositivePlaneAngleMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[784]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPositivePlaneAngleMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[784]); }
Ifc4x3_rc4::IfcPositivePlaneAngleMeasure::IfcPositivePlaneAngleMeasure(IfcEntityInstanceData&& e) : IfcPlaneAngleMeasure(std::move(e)) {  }
Ifc4x3_rc4::IfcPositivePlaneAngleMeasure::IfcPositivePlaneAngleMeasure(double v) : IfcPlaneAngleMeasure(v) {  }
Ifc4x3_rc4::IfcPositivePlaneAngleMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPositiveRatioMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPositiveRatioMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[785]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPositiveRatioMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[785]); }
Ifc4x3_rc4::IfcPositiveRatioMeasure::IfcPositiveRatioMeasure(IfcEntityInstanceData&& e) : IfcRatioMeasure(std::move(e)) {  }
Ifc4x3_rc4::IfcPositiveRatioMeasure::IfcPositiveRatioMeasure(double v) : IfcRatioMeasure(v) {  }
Ifc4x3_rc4::IfcPositiveRatioMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPowerMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPowerMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[787]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPowerMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[787]); }
Ifc4x3_rc4::IfcPowerMeasure::IfcPowerMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcPowerMeasure::IfcPowerMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcPowerMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPresentableText
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPresentableText::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[795]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPresentableText::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[795]); }
Ifc4x3_rc4::IfcPresentableText::IfcPresentableText(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcPresentableText::IfcPresentableText(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcPresentableText::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPressureMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPressureMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[800]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPressureMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[800]); }
Ifc4x3_rc4::IfcPressureMeasure::IfcPressureMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcPressureMeasure::IfcPressureMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcPressureMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcPropertySetDefinitionSet
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPropertySetDefinitionSet::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[834]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcPropertySetDefinitionSet::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[834]); }
Ifc4x3_rc4::IfcPropertySetDefinitionSet::IfcPropertySetDefinitionSet(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcPropertySetDefinitionSet::IfcPropertySetDefinitionSet(aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v->generalize()); }
Ifc4x3_rc4::IfcPropertySetDefinitionSet::operator aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr() const { aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcPropertySetDefinition >(); }

// Function implementations for IfcRadioActivityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcRadioActivityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[858]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcRadioActivityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[858]); }
Ifc4x3_rc4::IfcRadioActivityMeasure::IfcRadioActivityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcRadioActivityMeasure::IfcRadioActivityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcRadioActivityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcRatioMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcRatioMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[874]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcRatioMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[874]); }
Ifc4x3_rc4::IfcRatioMeasure::IfcRatioMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcRatioMeasure::IfcRatioMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcRatioMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcReal
const IfcParse::type_declaration& Ifc4x3_rc4::IfcReal::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[877]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcReal::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[877]); }
Ifc4x3_rc4::IfcReal::IfcReal(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcReal::IfcReal(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcReal::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcRotationalFrequencyMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcRotationalFrequencyMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[978]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcRotationalFrequencyMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[978]); }
Ifc4x3_rc4::IfcRotationalFrequencyMeasure::IfcRotationalFrequencyMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcRotationalFrequencyMeasure::IfcRotationalFrequencyMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcRotationalFrequencyMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcRotationalMassMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcRotationalMassMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[979]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcRotationalMassMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[979]); }
Ifc4x3_rc4::IfcRotationalMassMeasure::IfcRotationalMassMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcRotationalMassMeasure::IfcRotationalMassMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcRotationalMassMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcRotationalStiffnessMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcRotationalStiffnessMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[980]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcRotationalStiffnessMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[980]); }
Ifc4x3_rc4::IfcRotationalStiffnessMeasure::IfcRotationalStiffnessMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcRotationalStiffnessMeasure::IfcRotationalStiffnessMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcRotationalStiffnessMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcSectionModulusMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSectionModulusMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[994]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSectionModulusMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[994]); }
Ifc4x3_rc4::IfcSectionModulusMeasure::IfcSectionModulusMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcSectionModulusMeasure::IfcSectionModulusMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcSectionModulusMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcSectionalAreaIntegralMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSectionalAreaIntegralMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[989]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSectionalAreaIntegralMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[989]); }
Ifc4x3_rc4::IfcSectionalAreaIntegralMeasure::IfcSectionalAreaIntegralMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcSectionalAreaIntegralMeasure::IfcSectionalAreaIntegralMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcSectionalAreaIntegralMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcShearModulusMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcShearModulusMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1012]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcShearModulusMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1012]); }
Ifc4x3_rc4::IfcShearModulusMeasure::IfcShearModulusMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcShearModulusMeasure::IfcShearModulusMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcShearModulusMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcSolidAngleMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSolidAngleMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1040]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSolidAngleMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1040]); }
Ifc4x3_rc4::IfcSolidAngleMeasure::IfcSolidAngleMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcSolidAngleMeasure::IfcSolidAngleMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcSolidAngleMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcSoundPowerLevelMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSoundPowerLevelMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1044]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSoundPowerLevelMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1044]); }
Ifc4x3_rc4::IfcSoundPowerLevelMeasure::IfcSoundPowerLevelMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcSoundPowerLevelMeasure::IfcSoundPowerLevelMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcSoundPowerLevelMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcSoundPowerMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSoundPowerMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1045]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSoundPowerMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1045]); }
Ifc4x3_rc4::IfcSoundPowerMeasure::IfcSoundPowerMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcSoundPowerMeasure::IfcSoundPowerMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcSoundPowerMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcSoundPressureLevelMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSoundPressureLevelMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1046]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSoundPressureLevelMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1046]); }
Ifc4x3_rc4::IfcSoundPressureLevelMeasure::IfcSoundPressureLevelMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcSoundPressureLevelMeasure::IfcSoundPressureLevelMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcSoundPressureLevelMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcSoundPressureMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSoundPressureMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1047]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSoundPressureMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1047]); }
Ifc4x3_rc4::IfcSoundPressureMeasure::IfcSoundPressureMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcSoundPressureMeasure::IfcSoundPressureMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcSoundPressureMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcSpecificHeatCapacityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSpecificHeatCapacityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1063]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSpecificHeatCapacityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1063]); }
Ifc4x3_rc4::IfcSpecificHeatCapacityMeasure::IfcSpecificHeatCapacityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcSpecificHeatCapacityMeasure::IfcSpecificHeatCapacityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcSpecificHeatCapacityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcSpecularExponent
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSpecularExponent::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1064]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSpecularExponent::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1064]); }
Ifc4x3_rc4::IfcSpecularExponent::IfcSpecularExponent(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcSpecularExponent::IfcSpecularExponent(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcSpecularExponent::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcSpecularRoughness
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSpecularRoughness::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1066]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcSpecularRoughness::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1066]); }
Ifc4x3_rc4::IfcSpecularRoughness::IfcSpecularRoughness(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcSpecularRoughness::IfcSpecularRoughness(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcSpecularRoughness::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcTemperatureGradientMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTemperatureGradientMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1171]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTemperatureGradientMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1171]); }
Ifc4x3_rc4::IfcTemperatureGradientMeasure::IfcTemperatureGradientMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcTemperatureGradientMeasure::IfcTemperatureGradientMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcTemperatureGradientMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcTemperatureRateOfChangeMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTemperatureRateOfChangeMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1172]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTemperatureRateOfChangeMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1172]); }
Ifc4x3_rc4::IfcTemperatureRateOfChangeMeasure::IfcTemperatureRateOfChangeMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcTemperatureRateOfChangeMeasure::IfcTemperatureRateOfChangeMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcTemperatureRateOfChangeMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcText
const IfcParse::type_declaration& Ifc4x3_rc4::IfcText::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1184]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcText::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1184]); }
Ifc4x3_rc4::IfcText::IfcText(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcText::IfcText(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcText::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcTextAlignment
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTextAlignment::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1185]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTextAlignment::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1185]); }
Ifc4x3_rc4::IfcTextAlignment::IfcTextAlignment(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcTextAlignment::IfcTextAlignment(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcTextAlignment::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcTextDecoration
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTextDecoration::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1186]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTextDecoration::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1186]); }
Ifc4x3_rc4::IfcTextDecoration::IfcTextDecoration(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcTextDecoration::IfcTextDecoration(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcTextDecoration::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcTextFontName
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTextFontName::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1187]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTextFontName::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1187]); }
Ifc4x3_rc4::IfcTextFontName::IfcTextFontName(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcTextFontName::IfcTextFontName(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcTextFontName::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcTextTransformation
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTextTransformation::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1196]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTextTransformation::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1196]); }
Ifc4x3_rc4::IfcTextTransformation::IfcTextTransformation(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcTextTransformation::IfcTextTransformation(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcTextTransformation::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcThermalAdmittanceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermalAdmittanceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1202]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermalAdmittanceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1202]); }
Ifc4x3_rc4::IfcThermalAdmittanceMeasure::IfcThermalAdmittanceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcThermalAdmittanceMeasure::IfcThermalAdmittanceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcThermalAdmittanceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcThermalConductivityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermalConductivityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1203]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermalConductivityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1203]); }
Ifc4x3_rc4::IfcThermalConductivityMeasure::IfcThermalConductivityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcThermalConductivityMeasure::IfcThermalConductivityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcThermalConductivityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcThermalExpansionCoefficientMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermalExpansionCoefficientMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1204]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermalExpansionCoefficientMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1204]); }
Ifc4x3_rc4::IfcThermalExpansionCoefficientMeasure::IfcThermalExpansionCoefficientMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcThermalExpansionCoefficientMeasure::IfcThermalExpansionCoefficientMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcThermalExpansionCoefficientMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcThermalResistanceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermalResistanceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1205]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermalResistanceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1205]); }
Ifc4x3_rc4::IfcThermalResistanceMeasure::IfcThermalResistanceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcThermalResistanceMeasure::IfcThermalResistanceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcThermalResistanceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcThermalTransmittanceMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermalTransmittanceMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1206]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermalTransmittanceMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1206]); }
Ifc4x3_rc4::IfcThermalTransmittanceMeasure::IfcThermalTransmittanceMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcThermalTransmittanceMeasure::IfcThermalTransmittanceMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcThermalTransmittanceMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcThermodynamicTemperatureMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermodynamicTemperatureMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1207]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcThermodynamicTemperatureMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1207]); }
Ifc4x3_rc4::IfcThermodynamicTemperatureMeasure::IfcThermodynamicTemperatureMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcThermodynamicTemperatureMeasure::IfcThermodynamicTemperatureMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcThermodynamicTemperatureMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcTime
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTime::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1209]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTime::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1209]); }
Ifc4x3_rc4::IfcTime::IfcTime(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcTime::IfcTime(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcTime::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcTimeMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTimeMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1210]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTimeMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1210]); }
Ifc4x3_rc4::IfcTimeMeasure::IfcTimeMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcTimeMeasure::IfcTimeMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcTimeMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcTimeStamp
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTimeStamp::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1216]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTimeStamp::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1216]); }
Ifc4x3_rc4::IfcTimeStamp::IfcTimeStamp(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcTimeStamp::IfcTimeStamp(int v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcTimeStamp::operator int() const { return data_.get_attribute_value(0); }

// Function implementations for IfcTorqueMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTorqueMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1220]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcTorqueMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1220]); }
Ifc4x3_rc4::IfcTorqueMeasure::IfcTorqueMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcTorqueMeasure::IfcTorqueMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcTorqueMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcURIReference
const IfcParse::type_declaration& Ifc4x3_rc4::IfcURIReference::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1257]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcURIReference::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1257]); }
Ifc4x3_rc4::IfcURIReference::IfcURIReference(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcURIReference::IfcURIReference(std::string v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcURIReference::operator std::string() const { return data_.get_attribute_value(0); }

// Function implementations for IfcVaporPermeabilityMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcVaporPermeabilityMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1263]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcVaporPermeabilityMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1263]); }
Ifc4x3_rc4::IfcVaporPermeabilityMeasure::IfcVaporPermeabilityMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcVaporPermeabilityMeasure::IfcVaporPermeabilityMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcVaporPermeabilityMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcVolumeMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcVolumeMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1280]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcVolumeMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1280]); }
Ifc4x3_rc4::IfcVolumeMeasure::IfcVolumeMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcVolumeMeasure::IfcVolumeMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcVolumeMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcVolumetricFlowRateMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcVolumetricFlowRateMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1281]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcVolumetricFlowRateMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1281]); }
Ifc4x3_rc4::IfcVolumetricFlowRateMeasure::IfcVolumetricFlowRateMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcVolumetricFlowRateMeasure::IfcVolumetricFlowRateMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcVolumetricFlowRateMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcWarpingConstantMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcWarpingConstantMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1287]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcWarpingConstantMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1287]); }
Ifc4x3_rc4::IfcWarpingConstantMeasure::IfcWarpingConstantMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcWarpingConstantMeasure::IfcWarpingConstantMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcWarpingConstantMeasure::operator double() const { return data_.get_attribute_value(0); }

// Function implementations for IfcWarpingMomentMeasure
const IfcParse::type_declaration& Ifc4x3_rc4::IfcWarpingMomentMeasure::Class() { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1288]); }
const IfcParse::type_declaration& Ifc4x3_rc4::IfcWarpingMomentMeasure::declaration() const { return *((IfcParse::type_declaration*)IFC4X3_RC4_types[1288]); }
Ifc4x3_rc4::IfcWarpingMomentMeasure::IfcWarpingMomentMeasure(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseType(std::move(e)) {  }
Ifc4x3_rc4::IfcWarpingMomentMeasure::IfcWarpingMomentMeasure(double v) : IfcUtil::IfcBaseType() { set_attribute_value(0, v); }
Ifc4x3_rc4::IfcWarpingMomentMeasure::operator double() const { return data_.get_attribute_value(0); }


// Function implementations for IfcActionRequest
boost::optional< ::Ifc4x3_rc4::IfcActionRequestTypeEnum::Value > Ifc4x3_rc4::IfcActionRequest::PredefinedType() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcActionRequestTypeEnum::FromString(data_.get_attribute_value(6)); }
void Ifc4x3_rc4::IfcActionRequest::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcActionRequestTypeEnum::Value > v) { if (v) {set_attribute_value(6, EnumerationReference(&::Ifc4x3_rc4::IfcActionRequestTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcActionRequest::Status() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcActionRequest::setStatus(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcActionRequest::LongDescription() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcActionRequest::setLongDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcActionRequest::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[2]); }
const IfcParse::entity& Ifc4x3_rc4::IfcActionRequest::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[2]); }
Ifc4x3_rc4::IfcActionRequest::IfcActionRequest(IfcEntityInstanceData&& e) : IfcControl(std::move(e)) { }
Ifc4x3_rc4::IfcActionRequest::IfcActionRequest(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< ::Ifc4x3_rc4::IfcActionRequestTypeEnum::Value > v7_PredefinedType, boost::optional< std::string > v8_Status, boost::optional< std::string > v9_LongDescription) : IfcControl(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_PredefinedType) {set_attribute_value(6, (EnumerationReference(&::Ifc4x3_rc4::IfcActionRequestTypeEnum::Class(),(size_t)*v7_PredefinedType))); } if (v8_Status) {set_attribute_value(7, (*v8_Status)); } if (v9_LongDescription) {set_attribute_value(8, (*v9_LongDescription)); }; populate_derived(); }

// Function implementations for IfcActor
::Ifc4x3_rc4::IfcActorSelect* Ifc4x3_rc4::IfcActor::TheActor() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcActorSelect>(true); }
void Ifc4x3_rc4::IfcActor::setTheActor(::Ifc4x3_rc4::IfcActorSelect* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }

::Ifc4x3_rc4::IfcRelAssignsToActor::list::ptr Ifc4x3_rc4::IfcActor::IsActingUpon() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[906], 6)->as<IfcRelAssignsToActor>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcActor::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[6]); }
const IfcParse::entity& Ifc4x3_rc4::IfcActor::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[6]); }
Ifc4x3_rc4::IfcActor::IfcActor(IfcEntityInstanceData&& e) : IfcObject(std::move(e)) { }
Ifc4x3_rc4::IfcActor::IfcActor(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcActorSelect* v6_TheActor) : IfcObject(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_TheActor ? v6_TheActor->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcActorRole
::Ifc4x3_rc4::IfcRoleEnum::Value Ifc4x3_rc4::IfcActorRole::Role() const {  return ::Ifc4x3_rc4::IfcRoleEnum::FromString(data_.get_attribute_value(0)); }
void Ifc4x3_rc4::IfcActorRole::setRole(::Ifc4x3_rc4::IfcRoleEnum::Value v) { set_attribute_value(0, EnumerationReference(&::Ifc4x3_rc4::IfcRoleEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcActorRole::UserDefinedRole() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcActorRole::setUserDefinedRole(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcActorRole::Description() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcActorRole::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcActorRole::HasExternalReference() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcActorRole::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[7]); }
const IfcParse::entity& Ifc4x3_rc4::IfcActorRole::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[7]); }
Ifc4x3_rc4::IfcActorRole::IfcActorRole(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcActorRole::IfcActorRole(::Ifc4x3_rc4::IfcRoleEnum::Value v1_Role, boost::optional< std::string > v2_UserDefinedRole, boost::optional< std::string > v3_Description) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcRoleEnum::Class(),(size_t)v1_Role))); if (v2_UserDefinedRole) {set_attribute_value(1, (*v2_UserDefinedRole)); } if (v3_Description) {set_attribute_value(2, (*v3_Description)); }; populate_derived(); }

// Function implementations for IfcActuator
boost::optional< ::Ifc4x3_rc4::IfcActuatorTypeEnum::Value > Ifc4x3_rc4::IfcActuator::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcActuatorTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcActuator::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcActuatorTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcActuatorTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcActuator::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[9]); }
const IfcParse::entity& Ifc4x3_rc4::IfcActuator::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[9]); }
Ifc4x3_rc4::IfcActuator::IfcActuator(IfcEntityInstanceData&& e) : IfcDistributionControlElement(std::move(e)) { }
Ifc4x3_rc4::IfcActuator::IfcActuator(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcActuatorTypeEnum::Value > v9_PredefinedType) : IfcDistributionControlElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcActuatorTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcActuatorType
::Ifc4x3_rc4::IfcActuatorTypeEnum::Value Ifc4x3_rc4::IfcActuatorType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcActuatorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcActuatorType::setPredefinedType(::Ifc4x3_rc4::IfcActuatorTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcActuatorTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcActuatorType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[10]); }
const IfcParse::entity& Ifc4x3_rc4::IfcActuatorType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[10]); }
Ifc4x3_rc4::IfcActuatorType::IfcActuatorType(IfcEntityInstanceData&& e) : IfcDistributionControlElementType(std::move(e)) { }
Ifc4x3_rc4::IfcActuatorType::IfcActuatorType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcActuatorTypeEnum::Value v10_PredefinedType) : IfcDistributionControlElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcActuatorTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcAddress
boost::optional< ::Ifc4x3_rc4::IfcAddressTypeEnum::Value > Ifc4x3_rc4::IfcAddress::Purpose() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcAddressTypeEnum::FromString(data_.get_attribute_value(0)); }
void Ifc4x3_rc4::IfcAddress::setPurpose(boost::optional< ::Ifc4x3_rc4::IfcAddressTypeEnum::Value > v) { if (v) {set_attribute_value(0, EnumerationReference(&::Ifc4x3_rc4::IfcAddressTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcAddress::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcAddress::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcAddress::UserDefinedPurpose() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcAddress::setUserDefinedPurpose(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }

::Ifc4x3_rc4::IfcPerson::list::ptr Ifc4x3_rc4::IfcAddress::OfPerson() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[741], 7)->as<IfcPerson>(); }
::Ifc4x3_rc4::IfcOrganization::list::ptr Ifc4x3_rc4::IfcAddress::OfOrganization() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[720], 4)->as<IfcOrganization>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcAddress::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[12]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAddress::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[12]); }
Ifc4x3_rc4::IfcAddress::IfcAddress(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcAddress::IfcAddress(boost::optional< ::Ifc4x3_rc4::IfcAddressTypeEnum::Value > v1_Purpose, boost::optional< std::string > v2_Description, boost::optional< std::string > v3_UserDefinedPurpose) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(3))) {  if (v1_Purpose) {set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcAddressTypeEnum::Class(),(size_t)*v1_Purpose))); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_UserDefinedPurpose) {set_attribute_value(2, (*v3_UserDefinedPurpose)); }; populate_derived(); }

// Function implementations for IfcAdvancedBrep


const IfcParse::entity& Ifc4x3_rc4::IfcAdvancedBrep::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[14]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAdvancedBrep::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[14]); }
Ifc4x3_rc4::IfcAdvancedBrep::IfcAdvancedBrep(IfcEntityInstanceData&& e) : IfcManifoldSolidBrep(std::move(e)) { }
Ifc4x3_rc4::IfcAdvancedBrep::IfcAdvancedBrep(::Ifc4x3_rc4::IfcClosedShell* v1_Outer) : IfcManifoldSolidBrep(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_Outer ? v1_Outer->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcAdvancedBrepWithVoids
aggregate_of< ::Ifc4x3_rc4::IfcClosedShell >::ptr Ifc4x3_rc4::IfcAdvancedBrepWithVoids::Voids() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcClosedShell >(); }
void Ifc4x3_rc4::IfcAdvancedBrepWithVoids::setVoids(aggregate_of< ::Ifc4x3_rc4::IfcClosedShell >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcAdvancedBrepWithVoids::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[15]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAdvancedBrepWithVoids::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[15]); }
Ifc4x3_rc4::IfcAdvancedBrepWithVoids::IfcAdvancedBrepWithVoids(IfcEntityInstanceData&& e) : IfcAdvancedBrep(std::move(e)) { }
Ifc4x3_rc4::IfcAdvancedBrepWithVoids::IfcAdvancedBrepWithVoids(::Ifc4x3_rc4::IfcClosedShell* v1_Outer, aggregate_of< ::Ifc4x3_rc4::IfcClosedShell >::ptr v2_Voids) : IfcAdvancedBrep(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Outer ? v1_Outer->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Voids)->generalize());; populate_derived(); }

// Function implementations for IfcAdvancedFace


const IfcParse::entity& Ifc4x3_rc4::IfcAdvancedFace::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[16]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAdvancedFace::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[16]); }
Ifc4x3_rc4::IfcAdvancedFace::IfcAdvancedFace(IfcEntityInstanceData&& e) : IfcFaceSurface(std::move(e)) { }
Ifc4x3_rc4::IfcAdvancedFace::IfcAdvancedFace(aggregate_of< ::Ifc4x3_rc4::IfcFaceBound >::ptr v1_Bounds, ::Ifc4x3_rc4::IfcSurface* v2_FaceSurface, bool v3_SameSense) : IfcFaceSurface(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_Bounds)->generalize());set_attribute_value(1, v2_FaceSurface ? v2_FaceSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, (v3_SameSense));; populate_derived(); }

// Function implementations for IfcAirTerminal
boost::optional< ::Ifc4x3_rc4::IfcAirTerminalTypeEnum::Value > Ifc4x3_rc4::IfcAirTerminal::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcAirTerminalTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcAirTerminal::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcAirTerminalTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcAirTerminalTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcAirTerminal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[17]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAirTerminal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[17]); }
Ifc4x3_rc4::IfcAirTerminal::IfcAirTerminal(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcAirTerminal::IfcAirTerminal(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcAirTerminalTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcAirTerminalTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcAirTerminalBox
boost::optional< ::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Value > Ifc4x3_rc4::IfcAirTerminalBox::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcAirTerminalBox::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcAirTerminalBox::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[18]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAirTerminalBox::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[18]); }
Ifc4x3_rc4::IfcAirTerminalBox::IfcAirTerminalBox(IfcEntityInstanceData&& e) : IfcFlowController(std::move(e)) { }
Ifc4x3_rc4::IfcAirTerminalBox::IfcAirTerminalBox(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Value > v9_PredefinedType) : IfcFlowController(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcAirTerminalBoxType
::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Value Ifc4x3_rc4::IfcAirTerminalBoxType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcAirTerminalBoxType::setPredefinedType(::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcAirTerminalBoxType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[19]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAirTerminalBoxType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[19]); }
Ifc4x3_rc4::IfcAirTerminalBoxType::IfcAirTerminalBoxType(IfcEntityInstanceData&& e) : IfcFlowControllerType(std::move(e)) { }
Ifc4x3_rc4::IfcAirTerminalBoxType::IfcAirTerminalBoxType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Value v10_PredefinedType) : IfcFlowControllerType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcAirTerminalBoxTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcAirTerminalType
::Ifc4x3_rc4::IfcAirTerminalTypeEnum::Value Ifc4x3_rc4::IfcAirTerminalType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcAirTerminalTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcAirTerminalType::setPredefinedType(::Ifc4x3_rc4::IfcAirTerminalTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcAirTerminalTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcAirTerminalType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[21]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAirTerminalType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[21]); }
Ifc4x3_rc4::IfcAirTerminalType::IfcAirTerminalType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcAirTerminalType::IfcAirTerminalType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcAirTerminalTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcAirTerminalTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcAirToAirHeatRecovery
boost::optional< ::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Value > Ifc4x3_rc4::IfcAirToAirHeatRecovery::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcAirToAirHeatRecovery::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcAirToAirHeatRecovery::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[23]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAirToAirHeatRecovery::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[23]); }
Ifc4x3_rc4::IfcAirToAirHeatRecovery::IfcAirToAirHeatRecovery(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcAirToAirHeatRecovery::IfcAirToAirHeatRecovery(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcAirToAirHeatRecoveryType
::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Value Ifc4x3_rc4::IfcAirToAirHeatRecoveryType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcAirToAirHeatRecoveryType::setPredefinedType(::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcAirToAirHeatRecoveryType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[24]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAirToAirHeatRecoveryType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[24]); }
Ifc4x3_rc4::IfcAirToAirHeatRecoveryType::IfcAirToAirHeatRecoveryType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcAirToAirHeatRecoveryType::IfcAirToAirHeatRecoveryType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcAirToAirHeatRecoveryTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcAlarm
boost::optional< ::Ifc4x3_rc4::IfcAlarmTypeEnum::Value > Ifc4x3_rc4::IfcAlarm::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcAlarmTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcAlarm::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcAlarmTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcAlarmTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcAlarm::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[26]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlarm::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[26]); }
Ifc4x3_rc4::IfcAlarm::IfcAlarm(IfcEntityInstanceData&& e) : IfcDistributionControlElement(std::move(e)) { }
Ifc4x3_rc4::IfcAlarm::IfcAlarm(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcAlarmTypeEnum::Value > v9_PredefinedType) : IfcDistributionControlElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcAlarmTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcAlarmType
::Ifc4x3_rc4::IfcAlarmTypeEnum::Value Ifc4x3_rc4::IfcAlarmType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcAlarmTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcAlarmType::setPredefinedType(::Ifc4x3_rc4::IfcAlarmTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcAlarmTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcAlarmType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[27]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlarmType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[27]); }
Ifc4x3_rc4::IfcAlarmType::IfcAlarmType(IfcEntityInstanceData&& e) : IfcDistributionControlElementType(std::move(e)) { }
Ifc4x3_rc4::IfcAlarmType::IfcAlarmType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcAlarmTypeEnum::Value v10_PredefinedType) : IfcDistributionControlElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcAlarmTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcAlignment
boost::optional< ::Ifc4x3_rc4::IfcAlignmentTypeEnum::Value > Ifc4x3_rc4::IfcAlignment::PredefinedType() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcAlignmentTypeEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcAlignment::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcAlignmentTypeEnum::Value > v) { if (v) {set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcAlignmentTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(7);} }


const IfcParse::entity& Ifc4x3_rc4::IfcAlignment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[29]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlignment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[29]); }
Ifc4x3_rc4::IfcAlignment::IfcAlignment(IfcEntityInstanceData&& e) : IfcLinearPositioningElement(std::move(e)) { }
Ifc4x3_rc4::IfcAlignment::IfcAlignment(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< ::Ifc4x3_rc4::IfcAlignmentTypeEnum::Value > v8_PredefinedType) : IfcLinearPositioningElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_PredefinedType) {set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcAlignmentTypeEnum::Class(),(size_t)*v8_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcAlignmentCant
double Ifc4x3_rc4::IfcAlignmentCant::RailHeadDistance() const {  double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcAlignmentCant::setRailHeadDistance(double v) { set_attribute_value(7, v);if constexpr (false)unset_attribute_value(7); }


const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentCant::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[30]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentCant::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[30]); }
Ifc4x3_rc4::IfcAlignmentCant::IfcAlignmentCant(IfcEntityInstanceData&& e) : IfcLinearElement(std::move(e)) { }
Ifc4x3_rc4::IfcAlignmentCant::IfcAlignmentCant(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, double v8_RailHeadDistance) : IfcLinearElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (v8_RailHeadDistance));; populate_derived(); }

// Function implementations for IfcAlignmentCantSegment
double Ifc4x3_rc4::IfcAlignmentCantSegment::StartDistAlong() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcAlignmentCantSegment::setStartDistAlong(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcAlignmentCantSegment::HorizontalLength() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcAlignmentCantSegment::setHorizontalLength(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcAlignmentCantSegment::StartCantLeft() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcAlignmentCantSegment::setStartCantLeft(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
boost::optional< double > Ifc4x3_rc4::IfcAlignmentCantSegment::EndCantLeft() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcAlignmentCantSegment::setEndCantLeft(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
double Ifc4x3_rc4::IfcAlignmentCantSegment::StartCantRight() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcAlignmentCantSegment::setStartCantRight(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< double > Ifc4x3_rc4::IfcAlignmentCantSegment::EndCantRight() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcAlignmentCantSegment::setEndCantRight(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
::Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::Value Ifc4x3_rc4::IfcAlignmentCantSegment::PredefinedType() const {  return ::Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcAlignmentCantSegment::setPredefinedType(::Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::Value v) { set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentCantSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[31]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentCantSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[31]); }
Ifc4x3_rc4::IfcAlignmentCantSegment::IfcAlignmentCantSegment(IfcEntityInstanceData&& e) : IfcAlignmentParameterSegment(std::move(e)) { }
Ifc4x3_rc4::IfcAlignmentCantSegment::IfcAlignmentCantSegment(boost::optional< std::string > v1_StartTag, boost::optional< std::string > v2_EndTag, double v3_StartDistAlong, double v4_HorizontalLength, double v5_StartCantLeft, boost::optional< double > v6_EndCantLeft, double v7_StartCantRight, boost::optional< double > v8_EndCantRight, ::Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::Value v9_PredefinedType) : IfcAlignmentParameterSegment(IfcEntityInstanceData(storage_t(9))) {  if (v1_StartTag) {set_attribute_value(0, (*v1_StartTag)); } if (v2_EndTag) {set_attribute_value(1, (*v2_EndTag)); }set_attribute_value(2, (v3_StartDistAlong));set_attribute_value(3, (v4_HorizontalLength));set_attribute_value(4, (v5_StartCantLeft)); if (v6_EndCantLeft) {set_attribute_value(5, (*v6_EndCantLeft)); }set_attribute_value(6, (v7_StartCantRight)); if (v8_EndCantRight) {set_attribute_value(7, (*v8_EndCantRight)); }set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcAlignmentCantSegmentTypeEnum::Class(),(size_t)v9_PredefinedType)));; populate_derived(); }

// Function implementations for IfcAlignmentHorizontal


const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentHorizontal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[33]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentHorizontal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[33]); }
Ifc4x3_rc4::IfcAlignmentHorizontal::IfcAlignmentHorizontal(IfcEntityInstanceData&& e) : IfcLinearElement(std::move(e)) { }
Ifc4x3_rc4::IfcAlignmentHorizontal::IfcAlignmentHorizontal(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation) : IfcLinearElement(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcAlignmentHorizontalSegment
::Ifc4x3_rc4::IfcCartesianPoint* Ifc4x3_rc4::IfcAlignmentHorizontalSegment::StartPoint() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcCartesianPoint>(true); }
void Ifc4x3_rc4::IfcAlignmentHorizontalSegment::setStartPoint(::Ifc4x3_rc4::IfcCartesianPoint* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcAlignmentHorizontalSegment::StartDirection() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcAlignmentHorizontalSegment::setStartDirection(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcAlignmentHorizontalSegment::StartRadiusOfCurvature() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcAlignmentHorizontalSegment::setStartRadiusOfCurvature(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
double Ifc4x3_rc4::IfcAlignmentHorizontalSegment::EndRadiusOfCurvature() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcAlignmentHorizontalSegment::setEndRadiusOfCurvature(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcAlignmentHorizontalSegment::SegmentLength() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcAlignmentHorizontalSegment::setSegmentLength(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< double > Ifc4x3_rc4::IfcAlignmentHorizontalSegment::GravityCenterLineHeight() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcAlignmentHorizontalSegment::setGravityCenterLineHeight(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
::Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::Value Ifc4x3_rc4::IfcAlignmentHorizontalSegment::PredefinedType() const {  return ::Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcAlignmentHorizontalSegment::setPredefinedType(::Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::Value v) { set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentHorizontalSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[34]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentHorizontalSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[34]); }
Ifc4x3_rc4::IfcAlignmentHorizontalSegment::IfcAlignmentHorizontalSegment(IfcEntityInstanceData&& e) : IfcAlignmentParameterSegment(std::move(e)) { }
Ifc4x3_rc4::IfcAlignmentHorizontalSegment::IfcAlignmentHorizontalSegment(boost::optional< std::string > v1_StartTag, boost::optional< std::string > v2_EndTag, ::Ifc4x3_rc4::IfcCartesianPoint* v3_StartPoint, double v4_StartDirection, double v5_StartRadiusOfCurvature, double v6_EndRadiusOfCurvature, double v7_SegmentLength, boost::optional< double > v8_GravityCenterLineHeight, ::Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::Value v9_PredefinedType) : IfcAlignmentParameterSegment(IfcEntityInstanceData(storage_t(9))) {  if (v1_StartTag) {set_attribute_value(0, (*v1_StartTag)); } if (v2_EndTag) {set_attribute_value(1, (*v2_EndTag)); }set_attribute_value(2, v3_StartPoint ? v3_StartPoint->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_StartDirection));set_attribute_value(4, (v5_StartRadiusOfCurvature));set_attribute_value(5, (v6_EndRadiusOfCurvature));set_attribute_value(6, (v7_SegmentLength)); if (v8_GravityCenterLineHeight) {set_attribute_value(7, (*v8_GravityCenterLineHeight)); }set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcAlignmentHorizontalSegmentTypeEnum::Class(),(size_t)v9_PredefinedType)));; populate_derived(); }

// Function implementations for IfcAlignmentParameterSegment
boost::optional< std::string > Ifc4x3_rc4::IfcAlignmentParameterSegment::StartTag() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcAlignmentParameterSegment::setStartTag(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcAlignmentParameterSegment::EndTag() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcAlignmentParameterSegment::setEndTag(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }


const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentParameterSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[36]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentParameterSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[36]); }
Ifc4x3_rc4::IfcAlignmentParameterSegment::IfcAlignmentParameterSegment(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcAlignmentParameterSegment::IfcAlignmentParameterSegment(boost::optional< std::string > v1_StartTag, boost::optional< std::string > v2_EndTag) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) {  if (v1_StartTag) {set_attribute_value(0, (*v1_StartTag)); } if (v2_EndTag) {set_attribute_value(1, (*v2_EndTag)); }; populate_derived(); }

// Function implementations for IfcAlignmentSegment
::Ifc4x3_rc4::IfcAlignmentParameterSegment* Ifc4x3_rc4::IfcAlignmentSegment::DesignParameters() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcAlignmentParameterSegment>(true); }
void Ifc4x3_rc4::IfcAlignmentSegment::setDesignParameters(::Ifc4x3_rc4::IfcAlignmentParameterSegment* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }


const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[37]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[37]); }
Ifc4x3_rc4::IfcAlignmentSegment::IfcAlignmentSegment(IfcEntityInstanceData&& e) : IfcLinearElement(std::move(e)) { }
Ifc4x3_rc4::IfcAlignmentSegment::IfcAlignmentSegment(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcAlignmentParameterSegment* v8_DesignParameters) : IfcLinearElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_DesignParameters ? v8_DesignParameters->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcAlignmentVertical


const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentVertical::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[39]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentVertical::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[39]); }
Ifc4x3_rc4::IfcAlignmentVertical::IfcAlignmentVertical(IfcEntityInstanceData&& e) : IfcLinearElement(std::move(e)) { }
Ifc4x3_rc4::IfcAlignmentVertical::IfcAlignmentVertical(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation) : IfcLinearElement(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcAlignmentVerticalSegment
double Ifc4x3_rc4::IfcAlignmentVerticalSegment::StartDistAlong() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcAlignmentVerticalSegment::setStartDistAlong(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcAlignmentVerticalSegment::HorizontalLength() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcAlignmentVerticalSegment::setHorizontalLength(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcAlignmentVerticalSegment::StartHeight() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcAlignmentVerticalSegment::setStartHeight(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
double Ifc4x3_rc4::IfcAlignmentVerticalSegment::StartGradient() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcAlignmentVerticalSegment::setStartGradient(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcAlignmentVerticalSegment::EndGradient() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcAlignmentVerticalSegment::setEndGradient(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< double > Ifc4x3_rc4::IfcAlignmentVerticalSegment::RadiusOfCurvature() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcAlignmentVerticalSegment::setRadiusOfCurvature(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
::Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::Value Ifc4x3_rc4::IfcAlignmentVerticalSegment::PredefinedType() const {  return ::Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcAlignmentVerticalSegment::setPredefinedType(::Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::Value v) { set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentVerticalSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[40]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAlignmentVerticalSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[40]); }
Ifc4x3_rc4::IfcAlignmentVerticalSegment::IfcAlignmentVerticalSegment(IfcEntityInstanceData&& e) : IfcAlignmentParameterSegment(std::move(e)) { }
Ifc4x3_rc4::IfcAlignmentVerticalSegment::IfcAlignmentVerticalSegment(boost::optional< std::string > v1_StartTag, boost::optional< std::string > v2_EndTag, double v3_StartDistAlong, double v4_HorizontalLength, double v5_StartHeight, double v6_StartGradient, double v7_EndGradient, boost::optional< double > v8_RadiusOfCurvature, ::Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::Value v9_PredefinedType) : IfcAlignmentParameterSegment(IfcEntityInstanceData(storage_t(9))) {  if (v1_StartTag) {set_attribute_value(0, (*v1_StartTag)); } if (v2_EndTag) {set_attribute_value(1, (*v2_EndTag)); }set_attribute_value(2, (v3_StartDistAlong));set_attribute_value(3, (v4_HorizontalLength));set_attribute_value(4, (v5_StartHeight));set_attribute_value(5, (v6_StartGradient));set_attribute_value(6, (v7_EndGradient)); if (v8_RadiusOfCurvature) {set_attribute_value(7, (*v8_RadiusOfCurvature)); }set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcAlignmentVerticalSegmentTypeEnum::Class(),(size_t)v9_PredefinedType)));; populate_derived(); }

// Function implementations for IfcAnnotation
boost::optional< ::Ifc4x3_rc4::IfcAnnotationTypeEnum::Value > Ifc4x3_rc4::IfcAnnotation::PredefinedType() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcAnnotationTypeEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcAnnotation::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcAnnotationTypeEnum::Value > v) { if (v) {set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcAnnotationTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(7);} }

::Ifc4x3_rc4::IfcRelContainedInSpatialStructure::list::ptr Ifc4x3_rc4::IfcAnnotation::ContainedInStructure() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[931], 4)->as<IfcRelContainedInSpatialStructure>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcAnnotation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[46]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAnnotation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[46]); }
Ifc4x3_rc4::IfcAnnotation::IfcAnnotation(IfcEntityInstanceData&& e) : IfcProduct(std::move(e)) { }
Ifc4x3_rc4::IfcAnnotation::IfcAnnotation(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< ::Ifc4x3_rc4::IfcAnnotationTypeEnum::Value > v8_PredefinedType) : IfcProduct(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_PredefinedType) {set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcAnnotationTypeEnum::Class(),(size_t)*v8_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcAnnotationFillArea
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcAnnotationFillArea::OuterBoundary() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcAnnotationFillArea::setOuterBoundary(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcCurve >::ptr > Ifc4x3_rc4::IfcAnnotationFillArea::InnerBoundaries() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcCurve >(); }
void Ifc4x3_rc4::IfcAnnotationFillArea::setInnerBoundaries(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcCurve >::ptr > v) { if (v) {set_attribute_value(1, (*v)->generalize());} else {unset_attribute_value(1);} }


const IfcParse::entity& Ifc4x3_rc4::IfcAnnotationFillArea::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[47]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAnnotationFillArea::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[47]); }
Ifc4x3_rc4::IfcAnnotationFillArea::IfcAnnotationFillArea(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcAnnotationFillArea::IfcAnnotationFillArea(::Ifc4x3_rc4::IfcCurve* v1_OuterBoundary, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcCurve >::ptr > v2_InnerBoundaries) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_OuterBoundary ? v1_OuterBoundary->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_InnerBoundaries) {set_attribute_value(1, (*v2_InnerBoundaries)->generalize()); }; populate_derived(); }

// Function implementations for IfcApplication
::Ifc4x3_rc4::IfcOrganization* Ifc4x3_rc4::IfcApplication::ApplicationDeveloper() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcOrganization>(true); }
void Ifc4x3_rc4::IfcApplication::setApplicationDeveloper(::Ifc4x3_rc4::IfcOrganization* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
std::string Ifc4x3_rc4::IfcApplication::Version() const {  std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcApplication::setVersion(std::string v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
std::string Ifc4x3_rc4::IfcApplication::ApplicationFullName() const {  std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcApplication::setApplicationFullName(std::string v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
std::string Ifc4x3_rc4::IfcApplication::ApplicationIdentifier() const {  std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcApplication::setApplicationIdentifier(std::string v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcApplication::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[49]); }
const IfcParse::entity& Ifc4x3_rc4::IfcApplication::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[49]); }
Ifc4x3_rc4::IfcApplication::IfcApplication(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcApplication::IfcApplication(::Ifc4x3_rc4::IfcOrganization* v1_ApplicationDeveloper, std::string v2_Version, std::string v3_ApplicationFullName, std::string v4_ApplicationIdentifier) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_ApplicationDeveloper ? v1_ApplicationDeveloper->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Version));set_attribute_value(2, (v3_ApplicationFullName));set_attribute_value(3, (v4_ApplicationIdentifier));; populate_derived(); }

// Function implementations for IfcAppliedValue
boost::optional< std::string > Ifc4x3_rc4::IfcAppliedValue::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcAppliedValue::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcAppliedValue::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcAppliedValue::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
::Ifc4x3_rc4::IfcAppliedValueSelect* Ifc4x3_rc4::IfcAppliedValue::AppliedValue() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcAppliedValueSelect>(true); }
void Ifc4x3_rc4::IfcAppliedValue::setAppliedValue(::Ifc4x3_rc4::IfcAppliedValueSelect* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcMeasureWithUnit* Ifc4x3_rc4::IfcAppliedValue::UnitBasis() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcMeasureWithUnit>(true); }
void Ifc4x3_rc4::IfcAppliedValue::setUnitBasis(::Ifc4x3_rc4::IfcMeasureWithUnit* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcAppliedValue::ApplicableDate() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcAppliedValue::setApplicableDate(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcAppliedValue::FixedUntilDate() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcAppliedValue::setFixedUntilDate(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcAppliedValue::Category() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcAppliedValue::setCategory(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcAppliedValue::Condition() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcAppliedValue::setCondition(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< ::Ifc4x3_rc4::IfcArithmeticOperatorEnum::Value > Ifc4x3_rc4::IfcAppliedValue::ArithmeticOperator() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcArithmeticOperatorEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcAppliedValue::setArithmeticOperator(boost::optional< ::Ifc4x3_rc4::IfcArithmeticOperatorEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcArithmeticOperatorEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > Ifc4x3_rc4::IfcAppliedValue::Components() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(9); return es->as< ::Ifc4x3_rc4::IfcAppliedValue >(); }
void Ifc4x3_rc4::IfcAppliedValue::setComponents(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v) { if (v) {set_attribute_value(9, (*v)->generalize());} else {unset_attribute_value(9);} }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcAppliedValue::HasExternalReference() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcAppliedValue::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[50]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAppliedValue::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[50]); }
Ifc4x3_rc4::IfcAppliedValue::IfcAppliedValue(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcAppliedValue::IfcAppliedValue(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcAppliedValueSelect* v3_AppliedValue, ::Ifc4x3_rc4::IfcMeasureWithUnit* v4_UnitBasis, boost::optional< std::string > v5_ApplicableDate, boost::optional< std::string > v6_FixedUntilDate, boost::optional< std::string > v7_Category, boost::optional< std::string > v8_Condition, boost::optional< ::Ifc4x3_rc4::IfcArithmeticOperatorEnum::Value > v9_ArithmeticOperator, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v10_Components) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(10))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_AppliedValue ? v3_AppliedValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_UnitBasis ? v4_UnitBasis->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_ApplicableDate) {set_attribute_value(4, (*v5_ApplicableDate)); } if (v6_FixedUntilDate) {set_attribute_value(5, (*v6_FixedUntilDate)); } if (v7_Category) {set_attribute_value(6, (*v7_Category)); } if (v8_Condition) {set_attribute_value(7, (*v8_Condition)); } if (v9_ArithmeticOperator) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcArithmeticOperatorEnum::Class(),(size_t)*v9_ArithmeticOperator))); } if (v10_Components) {set_attribute_value(9, (*v10_Components)->generalize()); }; populate_derived(); }

// Function implementations for IfcApproval
boost::optional< std::string > Ifc4x3_rc4::IfcApproval::Identifier() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcApproval::setIdentifier(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcApproval::Name() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcApproval::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcApproval::Description() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcApproval::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< std::string > Ifc4x3_rc4::IfcApproval::TimeOfApproval() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcApproval::setTimeOfApproval(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::string > Ifc4x3_rc4::IfcApproval::Status() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcApproval::setStatus(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcApproval::Level() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcApproval::setLevel(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcApproval::Qualifier() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcApproval::setQualifier(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
::Ifc4x3_rc4::IfcActorSelect* Ifc4x3_rc4::IfcApproval::RequestingApproval() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcActorSelect>(true); }
void Ifc4x3_rc4::IfcApproval::setRequestingApproval(::Ifc4x3_rc4::IfcActorSelect* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }
::Ifc4x3_rc4::IfcActorSelect* Ifc4x3_rc4::IfcApproval::GivingApproval() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcActorSelect>(true); }
void Ifc4x3_rc4::IfcApproval::setGivingApproval(::Ifc4x3_rc4::IfcActorSelect* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcApproval::HasExternalReferences() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }
::Ifc4x3_rc4::IfcRelAssociatesApproval::list::ptr Ifc4x3_rc4::IfcApproval::ApprovedObjects() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[914], 5)->as<IfcRelAssociatesApproval>(); }
::Ifc4x3_rc4::IfcResourceApprovalRelationship::list::ptr Ifc4x3_rc4::IfcApproval::ApprovedResources() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[960], 3)->as<IfcResourceApprovalRelationship>(); }
::Ifc4x3_rc4::IfcApprovalRelationship::list::ptr Ifc4x3_rc4::IfcApproval::IsRelatedWith() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[53], 3)->as<IfcApprovalRelationship>(); }
::Ifc4x3_rc4::IfcApprovalRelationship::list::ptr Ifc4x3_rc4::IfcApproval::Relates() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[53], 2)->as<IfcApprovalRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcApproval::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[52]); }
const IfcParse::entity& Ifc4x3_rc4::IfcApproval::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[52]); }
Ifc4x3_rc4::IfcApproval::IfcApproval(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcApproval::IfcApproval(boost::optional< std::string > v1_Identifier, boost::optional< std::string > v2_Name, boost::optional< std::string > v3_Description, boost::optional< std::string > v4_TimeOfApproval, boost::optional< std::string > v5_Status, boost::optional< std::string > v6_Level, boost::optional< std::string > v7_Qualifier, ::Ifc4x3_rc4::IfcActorSelect* v8_RequestingApproval, ::Ifc4x3_rc4::IfcActorSelect* v9_GivingApproval) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(9))) {  if (v1_Identifier) {set_attribute_value(0, (*v1_Identifier)); } if (v2_Name) {set_attribute_value(1, (*v2_Name)); } if (v3_Description) {set_attribute_value(2, (*v3_Description)); } if (v4_TimeOfApproval) {set_attribute_value(3, (*v4_TimeOfApproval)); } if (v5_Status) {set_attribute_value(4, (*v5_Status)); } if (v6_Level) {set_attribute_value(5, (*v6_Level)); } if (v7_Qualifier) {set_attribute_value(6, (*v7_Qualifier)); }set_attribute_value(7, v8_RequestingApproval ? v8_RequestingApproval->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, v9_GivingApproval ? v9_GivingApproval->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcApprovalRelationship
::Ifc4x3_rc4::IfcApproval* Ifc4x3_rc4::IfcApprovalRelationship::RelatingApproval() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcApproval>(true); }
void Ifc4x3_rc4::IfcApprovalRelationship::setRelatingApproval(::Ifc4x3_rc4::IfcApproval* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
aggregate_of< ::Ifc4x3_rc4::IfcApproval >::ptr Ifc4x3_rc4::IfcApprovalRelationship::RelatedApprovals() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcApproval >(); }
void Ifc4x3_rc4::IfcApprovalRelationship::setRelatedApprovals(aggregate_of< ::Ifc4x3_rc4::IfcApproval >::ptr v) { set_attribute_value(3, (v)->generalize());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcApprovalRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[53]); }
const IfcParse::entity& Ifc4x3_rc4::IfcApprovalRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[53]); }
Ifc4x3_rc4::IfcApprovalRelationship::IfcApprovalRelationship(IfcEntityInstanceData&& e) : IfcResourceLevelRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcApprovalRelationship::IfcApprovalRelationship(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcApproval* v3_RelatingApproval, aggregate_of< ::Ifc4x3_rc4::IfcApproval >::ptr v4_RelatedApprovals) : IfcResourceLevelRelationship(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_RelatingApproval ? v3_RelatingApproval->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_RelatedApprovals)->generalize());; populate_derived(); }

// Function implementations for IfcArbitraryClosedProfileDef
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcArbitraryClosedProfileDef::OuterCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcArbitraryClosedProfileDef::setOuterCurve(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcArbitraryClosedProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[54]); }
const IfcParse::entity& Ifc4x3_rc4::IfcArbitraryClosedProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[54]); }
Ifc4x3_rc4::IfcArbitraryClosedProfileDef::IfcArbitraryClosedProfileDef(IfcEntityInstanceData&& e) : IfcProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcArbitraryClosedProfileDef::IfcArbitraryClosedProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcCurve* v3_OuterCurve) : IfcProfileDef(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_OuterCurve ? v3_OuterCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcArbitraryOpenProfileDef
::Ifc4x3_rc4::IfcBoundedCurve* Ifc4x3_rc4::IfcArbitraryOpenProfileDef::Curve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcBoundedCurve>(true); }
void Ifc4x3_rc4::IfcArbitraryOpenProfileDef::setCurve(::Ifc4x3_rc4::IfcBoundedCurve* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcArbitraryOpenProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[55]); }
const IfcParse::entity& Ifc4x3_rc4::IfcArbitraryOpenProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[55]); }
Ifc4x3_rc4::IfcArbitraryOpenProfileDef::IfcArbitraryOpenProfileDef(IfcEntityInstanceData&& e) : IfcProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcArbitraryOpenProfileDef::IfcArbitraryOpenProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcBoundedCurve* v3_Curve) : IfcProfileDef(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Curve ? v3_Curve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcArbitraryProfileDefWithVoids
aggregate_of< ::Ifc4x3_rc4::IfcCurve >::ptr Ifc4x3_rc4::IfcArbitraryProfileDefWithVoids::InnerCurves() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcCurve >(); }
void Ifc4x3_rc4::IfcArbitraryProfileDefWithVoids::setInnerCurves(aggregate_of< ::Ifc4x3_rc4::IfcCurve >::ptr v) { set_attribute_value(3, (v)->generalize());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcArbitraryProfileDefWithVoids::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[56]); }
const IfcParse::entity& Ifc4x3_rc4::IfcArbitraryProfileDefWithVoids::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[56]); }
Ifc4x3_rc4::IfcArbitraryProfileDefWithVoids::IfcArbitraryProfileDefWithVoids(IfcEntityInstanceData&& e) : IfcArbitraryClosedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcArbitraryProfileDefWithVoids::IfcArbitraryProfileDefWithVoids(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcCurve* v3_OuterCurve, aggregate_of< ::Ifc4x3_rc4::IfcCurve >::ptr v4_InnerCurves) : IfcArbitraryClosedProfileDef(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_OuterCurve ? v3_OuterCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_InnerCurves)->generalize());; populate_derived(); }

// Function implementations for IfcAsset
boost::optional< std::string > Ifc4x3_rc4::IfcAsset::Identification() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcAsset::setIdentification(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
::Ifc4x3_rc4::IfcCostValue* Ifc4x3_rc4::IfcAsset::OriginalValue() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcCostValue>(true); }
void Ifc4x3_rc4::IfcAsset::setOriginalValue(::Ifc4x3_rc4::IfcCostValue* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
::Ifc4x3_rc4::IfcCostValue* Ifc4x3_rc4::IfcAsset::CurrentValue() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcCostValue>(true); }
void Ifc4x3_rc4::IfcAsset::setCurrentValue(::Ifc4x3_rc4::IfcCostValue* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }
::Ifc4x3_rc4::IfcCostValue* Ifc4x3_rc4::IfcAsset::TotalReplacementCost() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcCostValue>(true); }
void Ifc4x3_rc4::IfcAsset::setTotalReplacementCost(::Ifc4x3_rc4::IfcCostValue* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }
::Ifc4x3_rc4::IfcActorSelect* Ifc4x3_rc4::IfcAsset::Owner() const { if(data_.get_attribute_value(9).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcActorSelect>(true); }
void Ifc4x3_rc4::IfcAsset::setOwner(::Ifc4x3_rc4::IfcActorSelect* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }
::Ifc4x3_rc4::IfcActorSelect* Ifc4x3_rc4::IfcAsset::User() const { if(data_.get_attribute_value(10).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(10)))->as<::Ifc4x3_rc4::IfcActorSelect>(true); }
void Ifc4x3_rc4::IfcAsset::setUser(::Ifc4x3_rc4::IfcActorSelect* v) { set_attribute_value(10, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(10); }
::Ifc4x3_rc4::IfcPerson* Ifc4x3_rc4::IfcAsset::ResponsiblePerson() const { if(data_.get_attribute_value(11).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(11)))->as<::Ifc4x3_rc4::IfcPerson>(true); }
void Ifc4x3_rc4::IfcAsset::setResponsiblePerson(::Ifc4x3_rc4::IfcPerson* v) { set_attribute_value(11, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(11); }
boost::optional< std::string > Ifc4x3_rc4::IfcAsset::IncorporationDate() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcAsset::setIncorporationDate(boost::optional< std::string > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
::Ifc4x3_rc4::IfcCostValue* Ifc4x3_rc4::IfcAsset::DepreciatedValue() const { if(data_.get_attribute_value(13).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(13)))->as<::Ifc4x3_rc4::IfcCostValue>(true); }
void Ifc4x3_rc4::IfcAsset::setDepreciatedValue(::Ifc4x3_rc4::IfcCostValue* v) { set_attribute_value(13, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(13); }


const IfcParse::entity& Ifc4x3_rc4::IfcAsset::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[62]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAsset::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[62]); }
Ifc4x3_rc4::IfcAsset::IfcAsset(IfcEntityInstanceData&& e) : IfcGroup(std::move(e)) { }
Ifc4x3_rc4::IfcAsset::IfcAsset(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, ::Ifc4x3_rc4::IfcCostValue* v7_OriginalValue, ::Ifc4x3_rc4::IfcCostValue* v8_CurrentValue, ::Ifc4x3_rc4::IfcCostValue* v9_TotalReplacementCost, ::Ifc4x3_rc4::IfcActorSelect* v10_Owner, ::Ifc4x3_rc4::IfcActorSelect* v11_User, ::Ifc4x3_rc4::IfcPerson* v12_ResponsiblePerson, boost::optional< std::string > v13_IncorporationDate, ::Ifc4x3_rc4::IfcCostValue* v14_DepreciatedValue) : IfcGroup(IfcEntityInstanceData(storage_t(14))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); }set_attribute_value(6, v7_OriginalValue ? v7_OriginalValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_CurrentValue ? v8_CurrentValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, v9_TotalReplacementCost ? v9_TotalReplacementCost->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(9, v10_Owner ? v10_Owner->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(10, v11_User ? v11_User->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(11, v12_ResponsiblePerson ? v12_ResponsiblePerson->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v13_IncorporationDate) {set_attribute_value(12, (*v13_IncorporationDate)); }set_attribute_value(13, v14_DepreciatedValue ? v14_DepreciatedValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcAsymmetricIShapeProfileDef
double Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::BottomFlangeWidth() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setBottomFlangeWidth(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::OverallDepth() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setOverallDepth(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
double Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::WebThickness() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setWebThickness(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::BottomFlangeThickness() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setBottomFlangeThickness(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< double > Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::BottomFlangeFilletRadius() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setBottomFlangeFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
double Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::TopFlangeWidth() const {  double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setTopFlangeWidth(double v) { set_attribute_value(8, v);if constexpr (false)unset_attribute_value(8); }
boost::optional< double > Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::TopFlangeThickness() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setTopFlangeThickness(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< double > Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::TopFlangeFilletRadius() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setTopFlangeFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::BottomFlangeEdgeRadius() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setBottomFlangeEdgeRadius(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< double > Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::BottomFlangeSlope() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } double v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setBottomFlangeSlope(boost::optional< double > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
boost::optional< double > Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::TopFlangeEdgeRadius() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } double v = data_.get_attribute_value(13); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setTopFlangeEdgeRadius(boost::optional< double > v) { if (v) {set_attribute_value(13, *v);} else {unset_attribute_value(13);} }
boost::optional< double > Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::TopFlangeSlope() const { if(data_.get_attribute_value(14).isNull()) { return boost::none; } double v = data_.get_attribute_value(14); return v; }
void Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::setTopFlangeSlope(boost::optional< double > v) { if (v) {set_attribute_value(14, *v);} else {unset_attribute_value(14);} }


const IfcParse::entity& Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[63]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[63]); }
Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::IfcAsymmetricIShapeProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcAsymmetricIShapeProfileDef::IfcAsymmetricIShapeProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_BottomFlangeWidth, double v5_OverallDepth, double v6_WebThickness, double v7_BottomFlangeThickness, boost::optional< double > v8_BottomFlangeFilletRadius, double v9_TopFlangeWidth, boost::optional< double > v10_TopFlangeThickness, boost::optional< double > v11_TopFlangeFilletRadius, boost::optional< double > v12_BottomFlangeEdgeRadius, boost::optional< double > v13_BottomFlangeSlope, boost::optional< double > v14_TopFlangeEdgeRadius, boost::optional< double > v15_TopFlangeSlope) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(15))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_BottomFlangeWidth));set_attribute_value(4, (v5_OverallDepth));set_attribute_value(5, (v6_WebThickness));set_attribute_value(6, (v7_BottomFlangeThickness)); if (v8_BottomFlangeFilletRadius) {set_attribute_value(7, (*v8_BottomFlangeFilletRadius)); }set_attribute_value(8, (v9_TopFlangeWidth)); if (v10_TopFlangeThickness) {set_attribute_value(9, (*v10_TopFlangeThickness)); } if (v11_TopFlangeFilletRadius) {set_attribute_value(10, (*v11_TopFlangeFilletRadius)); } if (v12_BottomFlangeEdgeRadius) {set_attribute_value(11, (*v12_BottomFlangeEdgeRadius)); } if (v13_BottomFlangeSlope) {set_attribute_value(12, (*v13_BottomFlangeSlope)); } if (v14_TopFlangeEdgeRadius) {set_attribute_value(13, (*v14_TopFlangeEdgeRadius)); } if (v15_TopFlangeSlope) {set_attribute_value(14, (*v15_TopFlangeSlope)); }; populate_derived(); }

// Function implementations for IfcAudioVisualAppliance
boost::optional< ::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Value > Ifc4x3_rc4::IfcAudioVisualAppliance::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcAudioVisualAppliance::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcAudioVisualAppliance::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[64]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAudioVisualAppliance::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[64]); }
Ifc4x3_rc4::IfcAudioVisualAppliance::IfcAudioVisualAppliance(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcAudioVisualAppliance::IfcAudioVisualAppliance(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcAudioVisualApplianceType
::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Value Ifc4x3_rc4::IfcAudioVisualApplianceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcAudioVisualApplianceType::setPredefinedType(::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcAudioVisualApplianceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[65]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAudioVisualApplianceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[65]); }
Ifc4x3_rc4::IfcAudioVisualApplianceType::IfcAudioVisualApplianceType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcAudioVisualApplianceType::IfcAudioVisualApplianceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcAudioVisualApplianceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcAxis1Placement
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcAxis1Placement::Axis() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcAxis1Placement::setAxis(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcAxis1Placement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[67]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAxis1Placement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[67]); }
Ifc4x3_rc4::IfcAxis1Placement::IfcAxis1Placement(IfcEntityInstanceData&& e) : IfcPlacement(std::move(e)) { }
Ifc4x3_rc4::IfcAxis1Placement::IfcAxis1Placement(::Ifc4x3_rc4::IfcPoint* v1_Location, ::Ifc4x3_rc4::IfcDirection* v2_Axis) : IfcPlacement(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Location ? v1_Location->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Axis ? v2_Axis->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcAxis2Placement2D
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcAxis2Placement2D::RefDirection() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcAxis2Placement2D::setRefDirection(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcAxis2Placement2D::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[69]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAxis2Placement2D::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[69]); }
Ifc4x3_rc4::IfcAxis2Placement2D::IfcAxis2Placement2D(IfcEntityInstanceData&& e) : IfcPlacement(std::move(e)) { }
Ifc4x3_rc4::IfcAxis2Placement2D::IfcAxis2Placement2D(::Ifc4x3_rc4::IfcPoint* v1_Location, ::Ifc4x3_rc4::IfcDirection* v2_RefDirection) : IfcPlacement(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Location ? v1_Location->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_RefDirection ? v2_RefDirection->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcAxis2Placement3D
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcAxis2Placement3D::Axis() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcAxis2Placement3D::setAxis(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcAxis2Placement3D::RefDirection() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcAxis2Placement3D::setRefDirection(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcAxis2Placement3D::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[70]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAxis2Placement3D::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[70]); }
Ifc4x3_rc4::IfcAxis2Placement3D::IfcAxis2Placement3D(IfcEntityInstanceData&& e) : IfcPlacement(std::move(e)) { }
Ifc4x3_rc4::IfcAxis2Placement3D::IfcAxis2Placement3D(::Ifc4x3_rc4::IfcPoint* v1_Location, ::Ifc4x3_rc4::IfcDirection* v2_Axis, ::Ifc4x3_rc4::IfcDirection* v3_RefDirection) : IfcPlacement(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Location ? v1_Location->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Axis ? v2_Axis->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_RefDirection ? v3_RefDirection->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcAxis2PlacementLinear
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcAxis2PlacementLinear::Axis() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcAxis2PlacementLinear::setAxis(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcAxis2PlacementLinear::RefDirection() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcAxis2PlacementLinear::setRefDirection(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcAxis2PlacementLinear::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[71]); }
const IfcParse::entity& Ifc4x3_rc4::IfcAxis2PlacementLinear::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[71]); }
Ifc4x3_rc4::IfcAxis2PlacementLinear::IfcAxis2PlacementLinear(IfcEntityInstanceData&& e) : IfcPlacement(std::move(e)) { }
Ifc4x3_rc4::IfcAxis2PlacementLinear::IfcAxis2PlacementLinear(::Ifc4x3_rc4::IfcPoint* v1_Location, ::Ifc4x3_rc4::IfcDirection* v2_Axis, ::Ifc4x3_rc4::IfcDirection* v3_RefDirection) : IfcPlacement(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Location ? v1_Location->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Axis ? v2_Axis->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_RefDirection ? v3_RefDirection->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcBSplineCurve
int Ifc4x3_rc4::IfcBSplineCurve::Degree() const {  int v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcBSplineCurve::setDegree(int v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr Ifc4x3_rc4::IfcBSplineCurve::ControlPointsList() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcCartesianPoint >(); }
void Ifc4x3_rc4::IfcBSplineCurve::setControlPointsList(aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcBSplineCurveForm::Value Ifc4x3_rc4::IfcBSplineCurve::CurveForm() const {  return ::Ifc4x3_rc4::IfcBSplineCurveForm::FromString(data_.get_attribute_value(2)); }
void Ifc4x3_rc4::IfcBSplineCurve::setCurveForm(::Ifc4x3_rc4::IfcBSplineCurveForm::Value v) { set_attribute_value(2, EnumerationReference(&::Ifc4x3_rc4::IfcBSplineCurveForm::Class(), (size_t) v));if constexpr (false)unset_attribute_value(2); }
boost::logic::tribool Ifc4x3_rc4::IfcBSplineCurve::ClosedCurve() const {  boost::logic::tribool v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcBSplineCurve::setClosedCurve(boost::logic::tribool v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::logic::tribool Ifc4x3_rc4::IfcBSplineCurve::SelfIntersect() const {  boost::logic::tribool v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcBSplineCurve::setSelfIntersect(boost::logic::tribool v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcBSplineCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[108]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBSplineCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[108]); }
Ifc4x3_rc4::IfcBSplineCurve::IfcBSplineCurve(IfcEntityInstanceData&& e) : IfcBoundedCurve(std::move(e)) { }
Ifc4x3_rc4::IfcBSplineCurve::IfcBSplineCurve(int v1_Degree, aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v2_ControlPointsList, ::Ifc4x3_rc4::IfcBSplineCurveForm::Value v3_CurveForm, boost::logic::tribool v4_ClosedCurve, boost::logic::tribool v5_SelfIntersect) : IfcBoundedCurve(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_Degree));set_attribute_value(1, (v2_ControlPointsList)->generalize());set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcBSplineCurveForm::Class(),(size_t)v3_CurveForm)));set_attribute_value(3, (v4_ClosedCurve));set_attribute_value(4, (v5_SelfIntersect));; populate_derived(); }

// Function implementations for IfcBSplineCurveWithKnots
std::vector< int > /*[2:?]*/ Ifc4x3_rc4::IfcBSplineCurveWithKnots::KnotMultiplicities() const {  std::vector< int > /*[2:?]*/ v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcBSplineCurveWithKnots::setKnotMultiplicities(std::vector< int > /*[2:?]*/ v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
std::vector< double > /*[2:?]*/ Ifc4x3_rc4::IfcBSplineCurveWithKnots::Knots() const {  std::vector< double > /*[2:?]*/ v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcBSplineCurveWithKnots::setKnots(std::vector< double > /*[2:?]*/ v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
::Ifc4x3_rc4::IfcKnotType::Value Ifc4x3_rc4::IfcBSplineCurveWithKnots::KnotSpec() const {  return ::Ifc4x3_rc4::IfcKnotType::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcBSplineCurveWithKnots::setKnotSpec(::Ifc4x3_rc4::IfcKnotType::Value v) { set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcKnotType::Class(), (size_t) v));if constexpr (false)unset_attribute_value(7); }


const IfcParse::entity& Ifc4x3_rc4::IfcBSplineCurveWithKnots::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[110]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBSplineCurveWithKnots::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[110]); }
Ifc4x3_rc4::IfcBSplineCurveWithKnots::IfcBSplineCurveWithKnots(IfcEntityInstanceData&& e) : IfcBSplineCurve(std::move(e)) { }
Ifc4x3_rc4::IfcBSplineCurveWithKnots::IfcBSplineCurveWithKnots(int v1_Degree, aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v2_ControlPointsList, ::Ifc4x3_rc4::IfcBSplineCurveForm::Value v3_CurveForm, boost::logic::tribool v4_ClosedCurve, boost::logic::tribool v5_SelfIntersect, std::vector< int > /*[2:?]*/ v6_KnotMultiplicities, std::vector< double > /*[2:?]*/ v7_Knots, ::Ifc4x3_rc4::IfcKnotType::Value v8_KnotSpec) : IfcBSplineCurve(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_Degree));set_attribute_value(1, (v2_ControlPointsList)->generalize());set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcBSplineCurveForm::Class(),(size_t)v3_CurveForm)));set_attribute_value(3, (v4_ClosedCurve));set_attribute_value(4, (v5_SelfIntersect));set_attribute_value(5, (v6_KnotMultiplicities));set_attribute_value(6, (v7_Knots));set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcKnotType::Class(),(size_t)v8_KnotSpec)));; populate_derived(); }

// Function implementations for IfcBSplineSurface
int Ifc4x3_rc4::IfcBSplineSurface::UDegree() const {  int v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcBSplineSurface::setUDegree(int v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
int Ifc4x3_rc4::IfcBSplineSurface::VDegree() const {  int v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcBSplineSurface::setVDegree(int v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
aggregate_of_aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr Ifc4x3_rc4::IfcBSplineSurface::ControlPointsList() const {  aggregate_of_aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcCartesianPoint >(); }
void Ifc4x3_rc4::IfcBSplineSurface::setControlPointsList(aggregate_of_aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcBSplineSurfaceForm::Value Ifc4x3_rc4::IfcBSplineSurface::SurfaceForm() const {  return ::Ifc4x3_rc4::IfcBSplineSurfaceForm::FromString(data_.get_attribute_value(3)); }
void Ifc4x3_rc4::IfcBSplineSurface::setSurfaceForm(::Ifc4x3_rc4::IfcBSplineSurfaceForm::Value v) { set_attribute_value(3, EnumerationReference(&::Ifc4x3_rc4::IfcBSplineSurfaceForm::Class(), (size_t) v));if constexpr (false)unset_attribute_value(3); }
boost::logic::tribool Ifc4x3_rc4::IfcBSplineSurface::UClosed() const {  boost::logic::tribool v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcBSplineSurface::setUClosed(boost::logic::tribool v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
boost::logic::tribool Ifc4x3_rc4::IfcBSplineSurface::VClosed() const {  boost::logic::tribool v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcBSplineSurface::setVClosed(boost::logic::tribool v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
boost::logic::tribool Ifc4x3_rc4::IfcBSplineSurface::SelfIntersect() const {  boost::logic::tribool v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcBSplineSurface::setSelfIntersect(boost::logic::tribool v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcBSplineSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[111]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBSplineSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[111]); }
Ifc4x3_rc4::IfcBSplineSurface::IfcBSplineSurface(IfcEntityInstanceData&& e) : IfcBoundedSurface(std::move(e)) { }
Ifc4x3_rc4::IfcBSplineSurface::IfcBSplineSurface(int v1_UDegree, int v2_VDegree, aggregate_of_aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v3_ControlPointsList, ::Ifc4x3_rc4::IfcBSplineSurfaceForm::Value v4_SurfaceForm, boost::logic::tribool v5_UClosed, boost::logic::tribool v6_VClosed, boost::logic::tribool v7_SelfIntersect) : IfcBoundedSurface(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_UDegree));set_attribute_value(1, (v2_VDegree));set_attribute_value(2, (v3_ControlPointsList)->generalize());set_attribute_value(3, (EnumerationReference(&::Ifc4x3_rc4::IfcBSplineSurfaceForm::Class(),(size_t)v4_SurfaceForm)));set_attribute_value(4, (v5_UClosed));set_attribute_value(5, (v6_VClosed));set_attribute_value(6, (v7_SelfIntersect));; populate_derived(); }

// Function implementations for IfcBSplineSurfaceWithKnots
std::vector< int > /*[2:?]*/ Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::UMultiplicities() const {  std::vector< int > /*[2:?]*/ v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::setUMultiplicities(std::vector< int > /*[2:?]*/ v) { set_attribute_value(7, v);if constexpr (false)unset_attribute_value(7); }
std::vector< int > /*[2:?]*/ Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::VMultiplicities() const {  std::vector< int > /*[2:?]*/ v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::setVMultiplicities(std::vector< int > /*[2:?]*/ v) { set_attribute_value(8, v);if constexpr (false)unset_attribute_value(8); }
std::vector< double > /*[2:?]*/ Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::UKnots() const {  std::vector< double > /*[2:?]*/ v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::setUKnots(std::vector< double > /*[2:?]*/ v) { set_attribute_value(9, v);if constexpr (false)unset_attribute_value(9); }
std::vector< double > /*[2:?]*/ Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::VKnots() const {  std::vector< double > /*[2:?]*/ v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::setVKnots(std::vector< double > /*[2:?]*/ v) { set_attribute_value(10, v);if constexpr (false)unset_attribute_value(10); }
::Ifc4x3_rc4::IfcKnotType::Value Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::KnotSpec() const {  return ::Ifc4x3_rc4::IfcKnotType::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::setKnotSpec(::Ifc4x3_rc4::IfcKnotType::Value v) { set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcKnotType::Class(), (size_t) v));if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[113]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[113]); }
Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::IfcBSplineSurfaceWithKnots(IfcEntityInstanceData&& e) : IfcBSplineSurface(std::move(e)) { }
Ifc4x3_rc4::IfcBSplineSurfaceWithKnots::IfcBSplineSurfaceWithKnots(int v1_UDegree, int v2_VDegree, aggregate_of_aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v3_ControlPointsList, ::Ifc4x3_rc4::IfcBSplineSurfaceForm::Value v4_SurfaceForm, boost::logic::tribool v5_UClosed, boost::logic::tribool v6_VClosed, boost::logic::tribool v7_SelfIntersect, std::vector< int > /*[2:?]*/ v8_UMultiplicities, std::vector< int > /*[2:?]*/ v9_VMultiplicities, std::vector< double > /*[2:?]*/ v10_UKnots, std::vector< double > /*[2:?]*/ v11_VKnots, ::Ifc4x3_rc4::IfcKnotType::Value v12_KnotSpec) : IfcBSplineSurface(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_UDegree));set_attribute_value(1, (v2_VDegree));set_attribute_value(2, (v3_ControlPointsList)->generalize());set_attribute_value(3, (EnumerationReference(&::Ifc4x3_rc4::IfcBSplineSurfaceForm::Class(),(size_t)v4_SurfaceForm)));set_attribute_value(4, (v5_UClosed));set_attribute_value(5, (v6_VClosed));set_attribute_value(6, (v7_SelfIntersect));set_attribute_value(7, (v8_UMultiplicities));set_attribute_value(8, (v9_VMultiplicities));set_attribute_value(9, (v10_UKnots));set_attribute_value(10, (v11_VKnots));set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcKnotType::Class(),(size_t)v12_KnotSpec)));; populate_derived(); }

// Function implementations for IfcBeam
boost::optional< ::Ifc4x3_rc4::IfcBeamTypeEnum::Value > Ifc4x3_rc4::IfcBeam::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcBeamTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcBeam::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcBeamTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcBeamTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBeam::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[72]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBeam::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[72]); }
Ifc4x3_rc4::IfcBeam::IfcBeam(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcBeam::IfcBeam(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcBeamTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcBeamTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcBeamStandardCase


const IfcParse::entity& Ifc4x3_rc4::IfcBeamStandardCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[73]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBeamStandardCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[73]); }
Ifc4x3_rc4::IfcBeamStandardCase::IfcBeamStandardCase(IfcEntityInstanceData&& e) : IfcBeam(std::move(e)) { }
Ifc4x3_rc4::IfcBeamStandardCase::IfcBeamStandardCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcBeamTypeEnum::Value > v9_PredefinedType) : IfcBeam(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcBeamTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcBeamType
::Ifc4x3_rc4::IfcBeamTypeEnum::Value Ifc4x3_rc4::IfcBeamType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcBeamTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcBeamType::setPredefinedType(::Ifc4x3_rc4::IfcBeamTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcBeamTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcBeamType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[74]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBeamType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[74]); }
Ifc4x3_rc4::IfcBeamType::IfcBeamType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcBeamType::IfcBeamType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcBeamTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcBeamTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcBearing
boost::optional< ::Ifc4x3_rc4::IfcBearingTypeEnum::Value > Ifc4x3_rc4::IfcBearing::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcBearingTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcBearing::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcBearingTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcBearingTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBearing::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[76]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBearing::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[76]); }
Ifc4x3_rc4::IfcBearing::IfcBearing(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcBearing::IfcBearing(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcBearingTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcBearingTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcBearingType
::Ifc4x3_rc4::IfcBearingTypeEnum::Value Ifc4x3_rc4::IfcBearingType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcBearingTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcBearingType::setPredefinedType(::Ifc4x3_rc4::IfcBearingTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcBearingTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcBearingType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[77]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBearingType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[77]); }
Ifc4x3_rc4::IfcBearingType::IfcBearingType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcBearingType::IfcBearingType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcBearingTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcBearingTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcBlobTexture
std::string Ifc4x3_rc4::IfcBlobTexture::RasterFormat() const {  std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcBlobTexture::setRasterFormat(std::string v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
boost::dynamic_bitset<> Ifc4x3_rc4::IfcBlobTexture::RasterCode() const {  boost::dynamic_bitset<> v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcBlobTexture::setRasterCode(boost::dynamic_bitset<> v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcBlobTexture::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[83]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBlobTexture::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[83]); }
Ifc4x3_rc4::IfcBlobTexture::IfcBlobTexture(IfcEntityInstanceData&& e) : IfcSurfaceTexture(std::move(e)) { }
Ifc4x3_rc4::IfcBlobTexture::IfcBlobTexture(bool v1_RepeatS, bool v2_RepeatT, boost::optional< std::string > v3_Mode, ::Ifc4x3_rc4::IfcCartesianTransformationOperator2D* v4_TextureTransform, boost::optional< std::vector< std::string > /*[1:?]*/ > v5_Parameter, std::string v6_RasterFormat, boost::dynamic_bitset<> v7_RasterCode) : IfcSurfaceTexture(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_RepeatS));set_attribute_value(1, (v2_RepeatT)); if (v3_Mode) {set_attribute_value(2, (*v3_Mode)); }set_attribute_value(3, v4_TextureTransform ? v4_TextureTransform->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Parameter) {set_attribute_value(4, (*v5_Parameter)); }set_attribute_value(5, (v6_RasterFormat));set_attribute_value(6, (v7_RasterCode));; populate_derived(); }

// Function implementations for IfcBlock
double Ifc4x3_rc4::IfcBlock::XLength() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcBlock::setXLength(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcBlock::YLength() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcBlock::setYLength(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcBlock::ZLength() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcBlock::setZLength(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcBlock::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[84]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBlock::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[84]); }
Ifc4x3_rc4::IfcBlock::IfcBlock(IfcEntityInstanceData&& e) : IfcCsgPrimitive3D(std::move(e)) { }
Ifc4x3_rc4::IfcBlock::IfcBlock(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position, double v2_XLength, double v3_YLength, double v4_ZLength) : IfcCsgPrimitive3D(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_XLength));set_attribute_value(2, (v3_YLength));set_attribute_value(3, (v4_ZLength));; populate_derived(); }

// Function implementations for IfcBoiler
boost::optional< ::Ifc4x3_rc4::IfcBoilerTypeEnum::Value > Ifc4x3_rc4::IfcBoiler::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcBoilerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcBoiler::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcBoilerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcBoilerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBoiler::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[85]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoiler::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[85]); }
Ifc4x3_rc4::IfcBoiler::IfcBoiler(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcBoiler::IfcBoiler(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcBoilerTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcBoilerTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcBoilerType
::Ifc4x3_rc4::IfcBoilerTypeEnum::Value Ifc4x3_rc4::IfcBoilerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcBoilerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcBoilerType::setPredefinedType(::Ifc4x3_rc4::IfcBoilerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcBoilerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcBoilerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[86]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoilerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[86]); }
Ifc4x3_rc4::IfcBoilerType::IfcBoilerType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcBoilerType::IfcBoilerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcBoilerTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcBoilerTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcBooleanClippingResult


const IfcParse::entity& Ifc4x3_rc4::IfcBooleanClippingResult::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[89]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBooleanClippingResult::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[89]); }
Ifc4x3_rc4::IfcBooleanClippingResult::IfcBooleanClippingResult(IfcEntityInstanceData&& e) : IfcBooleanResult(std::move(e)) { }
Ifc4x3_rc4::IfcBooleanClippingResult::IfcBooleanClippingResult(::Ifc4x3_rc4::IfcBooleanOperator::Value v1_Operator, ::Ifc4x3_rc4::IfcBooleanOperand* v2_FirstOperand, ::Ifc4x3_rc4::IfcBooleanOperand* v3_SecondOperand) : IfcBooleanResult(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcBooleanOperator::Class(),(size_t)v1_Operator)));set_attribute_value(1, v2_FirstOperand ? v2_FirstOperand->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_SecondOperand ? v3_SecondOperand->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcBooleanResult
::Ifc4x3_rc4::IfcBooleanOperator::Value Ifc4x3_rc4::IfcBooleanResult::Operator() const {  return ::Ifc4x3_rc4::IfcBooleanOperator::FromString(data_.get_attribute_value(0)); }
void Ifc4x3_rc4::IfcBooleanResult::setOperator(::Ifc4x3_rc4::IfcBooleanOperator::Value v) { set_attribute_value(0, EnumerationReference(&::Ifc4x3_rc4::IfcBooleanOperator::Class(), (size_t) v));if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcBooleanOperand* Ifc4x3_rc4::IfcBooleanResult::FirstOperand() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcBooleanOperand>(true); }
void Ifc4x3_rc4::IfcBooleanResult::setFirstOperand(::Ifc4x3_rc4::IfcBooleanOperand* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcBooleanOperand* Ifc4x3_rc4::IfcBooleanResult::SecondOperand() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcBooleanOperand>(true); }
void Ifc4x3_rc4::IfcBooleanResult::setSecondOperand(::Ifc4x3_rc4::IfcBooleanOperand* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcBooleanResult::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[92]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBooleanResult::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[92]); }
Ifc4x3_rc4::IfcBooleanResult::IfcBooleanResult(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcBooleanResult::IfcBooleanResult(::Ifc4x3_rc4::IfcBooleanOperator::Value v1_Operator, ::Ifc4x3_rc4::IfcBooleanOperand* v2_FirstOperand, ::Ifc4x3_rc4::IfcBooleanOperand* v3_SecondOperand) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcBooleanOperator::Class(),(size_t)v1_Operator)));set_attribute_value(1, v2_FirstOperand ? v2_FirstOperand->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_SecondOperand ? v3_SecondOperand->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcBorehole


const IfcParse::entity& Ifc4x3_rc4::IfcBorehole::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[93]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBorehole::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[93]); }
Ifc4x3_rc4::IfcBorehole::IfcBorehole(IfcEntityInstanceData&& e) : IfcGeotechnicalAssembly(std::move(e)) { }
Ifc4x3_rc4::IfcBorehole::IfcBorehole(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcGeotechnicalAssembly(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcBoundaryCondition
boost::optional< std::string > Ifc4x3_rc4::IfcBoundaryCondition::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcBoundaryCondition::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryCondition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[94]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryCondition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[94]); }
Ifc4x3_rc4::IfcBoundaryCondition::IfcBoundaryCondition(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcBoundaryCondition::IfcBoundaryCondition(boost::optional< std::string > v1_Name) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(1))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }; populate_derived(); }

// Function implementations for IfcBoundaryCurve


const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[95]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[95]); }
Ifc4x3_rc4::IfcBoundaryCurve::IfcBoundaryCurve(IfcEntityInstanceData&& e) : IfcCompositeCurveOnSurface(std::move(e)) { }
Ifc4x3_rc4::IfcBoundaryCurve::IfcBoundaryCurve(aggregate_of< ::Ifc4x3_rc4::IfcSegment >::ptr v1_Segments, boost::logic::tribool v2_SelfIntersect) : IfcCompositeCurveOnSurface(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_Segments)->generalize());set_attribute_value(1, (v2_SelfIntersect));; populate_derived(); }

// Function implementations for IfcBoundaryEdgeCondition
::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect* Ifc4x3_rc4::IfcBoundaryEdgeCondition::TranslationalStiffnessByLengthX() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryEdgeCondition::setTranslationalStiffnessByLengthX(::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect* Ifc4x3_rc4::IfcBoundaryEdgeCondition::TranslationalStiffnessByLengthY() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryEdgeCondition::setTranslationalStiffnessByLengthY(::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect* Ifc4x3_rc4::IfcBoundaryEdgeCondition::TranslationalStiffnessByLengthZ() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryEdgeCondition::setTranslationalStiffnessByLengthZ(::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect* Ifc4x3_rc4::IfcBoundaryEdgeCondition::RotationalStiffnessByLengthX() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryEdgeCondition::setRotationalStiffnessByLengthX(::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect* Ifc4x3_rc4::IfcBoundaryEdgeCondition::RotationalStiffnessByLengthY() const { if(data_.get_attribute_value(5).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryEdgeCondition::setRotationalStiffnessByLengthY(::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect* Ifc4x3_rc4::IfcBoundaryEdgeCondition::RotationalStiffnessByLengthZ() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryEdgeCondition::setRotationalStiffnessByLengthZ(::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryEdgeCondition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[96]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryEdgeCondition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[96]); }
Ifc4x3_rc4::IfcBoundaryEdgeCondition::IfcBoundaryEdgeCondition(IfcEntityInstanceData&& e) : IfcBoundaryCondition(std::move(e)) { }
Ifc4x3_rc4::IfcBoundaryEdgeCondition::IfcBoundaryEdgeCondition(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect* v2_TranslationalStiffnessByLengthX, ::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect* v3_TranslationalStiffnessByLengthY, ::Ifc4x3_rc4::IfcModulusOfTranslationalSubgradeReactionSelect* v4_TranslationalStiffnessByLengthZ, ::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect* v5_RotationalStiffnessByLengthX, ::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect* v6_RotationalStiffnessByLengthY, ::Ifc4x3_rc4::IfcModulusOfRotationalSubgradeReactionSelect* v7_RotationalStiffnessByLengthZ) : IfcBoundaryCondition(IfcEntityInstanceData(storage_t(7))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_TranslationalStiffnessByLengthX ? v2_TranslationalStiffnessByLengthX->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_TranslationalStiffnessByLengthY ? v3_TranslationalStiffnessByLengthY->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_TranslationalStiffnessByLengthZ ? v4_TranslationalStiffnessByLengthZ->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_RotationalStiffnessByLengthX ? v5_RotationalStiffnessByLengthX->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RotationalStiffnessByLengthY ? v6_RotationalStiffnessByLengthY->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_RotationalStiffnessByLengthZ ? v7_RotationalStiffnessByLengthZ->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcBoundaryFaceCondition
::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect* Ifc4x3_rc4::IfcBoundaryFaceCondition::TranslationalStiffnessByAreaX() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryFaceCondition::setTranslationalStiffnessByAreaX(::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect* Ifc4x3_rc4::IfcBoundaryFaceCondition::TranslationalStiffnessByAreaY() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryFaceCondition::setTranslationalStiffnessByAreaY(::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect* Ifc4x3_rc4::IfcBoundaryFaceCondition::TranslationalStiffnessByAreaZ() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryFaceCondition::setTranslationalStiffnessByAreaZ(::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryFaceCondition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[97]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryFaceCondition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[97]); }
Ifc4x3_rc4::IfcBoundaryFaceCondition::IfcBoundaryFaceCondition(IfcEntityInstanceData&& e) : IfcBoundaryCondition(std::move(e)) { }
Ifc4x3_rc4::IfcBoundaryFaceCondition::IfcBoundaryFaceCondition(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect* v2_TranslationalStiffnessByAreaX, ::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect* v3_TranslationalStiffnessByAreaY, ::Ifc4x3_rc4::IfcModulusOfSubgradeReactionSelect* v4_TranslationalStiffnessByAreaZ) : IfcBoundaryCondition(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_TranslationalStiffnessByAreaX ? v2_TranslationalStiffnessByAreaX->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_TranslationalStiffnessByAreaY ? v3_TranslationalStiffnessByAreaY->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_TranslationalStiffnessByAreaZ ? v4_TranslationalStiffnessByAreaZ->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcBoundaryNodeCondition
::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* Ifc4x3_rc4::IfcBoundaryNodeCondition::TranslationalStiffnessX() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcTranslationalStiffnessSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryNodeCondition::setTranslationalStiffnessX(::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* Ifc4x3_rc4::IfcBoundaryNodeCondition::TranslationalStiffnessY() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcTranslationalStiffnessSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryNodeCondition::setTranslationalStiffnessY(::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* Ifc4x3_rc4::IfcBoundaryNodeCondition::TranslationalStiffnessZ() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcTranslationalStiffnessSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryNodeCondition::setTranslationalStiffnessZ(::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcRotationalStiffnessSelect* Ifc4x3_rc4::IfcBoundaryNodeCondition::RotationalStiffnessX() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcRotationalStiffnessSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryNodeCondition::setRotationalStiffnessX(::Ifc4x3_rc4::IfcRotationalStiffnessSelect* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcRotationalStiffnessSelect* Ifc4x3_rc4::IfcBoundaryNodeCondition::RotationalStiffnessY() const { if(data_.get_attribute_value(5).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcRotationalStiffnessSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryNodeCondition::setRotationalStiffnessY(::Ifc4x3_rc4::IfcRotationalStiffnessSelect* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcRotationalStiffnessSelect* Ifc4x3_rc4::IfcBoundaryNodeCondition::RotationalStiffnessZ() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcRotationalStiffnessSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryNodeCondition::setRotationalStiffnessZ(::Ifc4x3_rc4::IfcRotationalStiffnessSelect* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryNodeCondition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[98]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryNodeCondition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[98]); }
Ifc4x3_rc4::IfcBoundaryNodeCondition::IfcBoundaryNodeCondition(IfcEntityInstanceData&& e) : IfcBoundaryCondition(std::move(e)) { }
Ifc4x3_rc4::IfcBoundaryNodeCondition::IfcBoundaryNodeCondition(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* v2_TranslationalStiffnessX, ::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* v3_TranslationalStiffnessY, ::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* v4_TranslationalStiffnessZ, ::Ifc4x3_rc4::IfcRotationalStiffnessSelect* v5_RotationalStiffnessX, ::Ifc4x3_rc4::IfcRotationalStiffnessSelect* v6_RotationalStiffnessY, ::Ifc4x3_rc4::IfcRotationalStiffnessSelect* v7_RotationalStiffnessZ) : IfcBoundaryCondition(IfcEntityInstanceData(storage_t(7))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_TranslationalStiffnessX ? v2_TranslationalStiffnessX->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_TranslationalStiffnessY ? v3_TranslationalStiffnessY->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_TranslationalStiffnessZ ? v4_TranslationalStiffnessZ->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_RotationalStiffnessX ? v5_RotationalStiffnessX->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RotationalStiffnessY ? v6_RotationalStiffnessY->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_RotationalStiffnessZ ? v7_RotationalStiffnessZ->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcBoundaryNodeConditionWarping
::Ifc4x3_rc4::IfcWarpingStiffnessSelect* Ifc4x3_rc4::IfcBoundaryNodeConditionWarping::WarpingStiffness() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcWarpingStiffnessSelect>(true); }
void Ifc4x3_rc4::IfcBoundaryNodeConditionWarping::setWarpingStiffness(::Ifc4x3_rc4::IfcWarpingStiffnessSelect* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }


const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryNodeConditionWarping::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[99]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoundaryNodeConditionWarping::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[99]); }
Ifc4x3_rc4::IfcBoundaryNodeConditionWarping::IfcBoundaryNodeConditionWarping(IfcEntityInstanceData&& e) : IfcBoundaryNodeCondition(std::move(e)) { }
Ifc4x3_rc4::IfcBoundaryNodeConditionWarping::IfcBoundaryNodeConditionWarping(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* v2_TranslationalStiffnessX, ::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* v3_TranslationalStiffnessY, ::Ifc4x3_rc4::IfcTranslationalStiffnessSelect* v4_TranslationalStiffnessZ, ::Ifc4x3_rc4::IfcRotationalStiffnessSelect* v5_RotationalStiffnessX, ::Ifc4x3_rc4::IfcRotationalStiffnessSelect* v6_RotationalStiffnessY, ::Ifc4x3_rc4::IfcRotationalStiffnessSelect* v7_RotationalStiffnessZ, ::Ifc4x3_rc4::IfcWarpingStiffnessSelect* v8_WarpingStiffness) : IfcBoundaryNodeCondition(IfcEntityInstanceData(storage_t(8))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_TranslationalStiffnessX ? v2_TranslationalStiffnessX->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_TranslationalStiffnessY ? v3_TranslationalStiffnessY->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_TranslationalStiffnessZ ? v4_TranslationalStiffnessZ->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_RotationalStiffnessX ? v5_RotationalStiffnessX->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RotationalStiffnessY ? v6_RotationalStiffnessY->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_RotationalStiffnessZ ? v7_RotationalStiffnessZ->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_WarpingStiffness ? v8_WarpingStiffness->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcBoundedCurve


const IfcParse::entity& Ifc4x3_rc4::IfcBoundedCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[100]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoundedCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[100]); }
Ifc4x3_rc4::IfcBoundedCurve::IfcBoundedCurve(IfcEntityInstanceData&& e) : IfcCurve(std::move(e)) { }
Ifc4x3_rc4::IfcBoundedCurve::IfcBoundedCurve() : IfcCurve(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcBoundedSurface


const IfcParse::entity& Ifc4x3_rc4::IfcBoundedSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[101]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoundedSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[101]); }
Ifc4x3_rc4::IfcBoundedSurface::IfcBoundedSurface(IfcEntityInstanceData&& e) : IfcSurface(std::move(e)) { }
Ifc4x3_rc4::IfcBoundedSurface::IfcBoundedSurface() : IfcSurface(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcBoundingBox
::Ifc4x3_rc4::IfcCartesianPoint* Ifc4x3_rc4::IfcBoundingBox::Corner() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCartesianPoint>(true); }
void Ifc4x3_rc4::IfcBoundingBox::setCorner(::Ifc4x3_rc4::IfcCartesianPoint* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
double Ifc4x3_rc4::IfcBoundingBox::XDim() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcBoundingBox::setXDim(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcBoundingBox::YDim() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcBoundingBox::setYDim(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcBoundingBox::ZDim() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcBoundingBox::setZDim(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcBoundingBox::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[102]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoundingBox::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[102]); }
Ifc4x3_rc4::IfcBoundingBox::IfcBoundingBox(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcBoundingBox::IfcBoundingBox(::Ifc4x3_rc4::IfcCartesianPoint* v1_Corner, double v2_XDim, double v3_YDim, double v4_ZDim) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Corner ? v1_Corner->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_XDim));set_attribute_value(2, (v3_YDim));set_attribute_value(3, (v4_ZDim));; populate_derived(); }

// Function implementations for IfcBoxedHalfSpace
::Ifc4x3_rc4::IfcBoundingBox* Ifc4x3_rc4::IfcBoxedHalfSpace::Enclosure() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcBoundingBox>(true); }
void Ifc4x3_rc4::IfcBoxedHalfSpace::setEnclosure(::Ifc4x3_rc4::IfcBoundingBox* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcBoxedHalfSpace::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[104]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBoxedHalfSpace::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[104]); }
Ifc4x3_rc4::IfcBoxedHalfSpace::IfcBoxedHalfSpace(IfcEntityInstanceData&& e) : IfcHalfSpaceSolid(std::move(e)) { }
Ifc4x3_rc4::IfcBoxedHalfSpace::IfcBoxedHalfSpace(::Ifc4x3_rc4::IfcSurface* v1_BaseSurface, bool v2_AgreementFlag, ::Ifc4x3_rc4::IfcBoundingBox* v3_Enclosure) : IfcHalfSpaceSolid(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_BaseSurface ? v1_BaseSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_AgreementFlag));set_attribute_value(2, v3_Enclosure ? v3_Enclosure->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcBridge
boost::optional< ::Ifc4x3_rc4::IfcBridgeTypeEnum::Value > Ifc4x3_rc4::IfcBridge::PredefinedType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcBridgeTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcBridge::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcBridgeTypeEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcBridgeTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBridge::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[105]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBridge::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[105]); }
Ifc4x3_rc4::IfcBridge::IfcBridge(IfcEntityInstanceData&& e) : IfcFacility(std::move(e)) { }
Ifc4x3_rc4::IfcBridge::IfcBridge(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType, boost::optional< ::Ifc4x3_rc4::IfcBridgeTypeEnum::Value > v10_PredefinedType) : IfcFacility(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); } if (v10_PredefinedType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcBridgeTypeEnum::Class(),(size_t)*v10_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcBuilding
boost::optional< double > Ifc4x3_rc4::IfcBuilding::ElevationOfRefHeight() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcBuilding::setElevationOfRefHeight(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< double > Ifc4x3_rc4::IfcBuilding::ElevationOfTerrain() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcBuilding::setElevationOfTerrain(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
::Ifc4x3_rc4::IfcPostalAddress* Ifc4x3_rc4::IfcBuilding::BuildingAddress() const { if(data_.get_attribute_value(11).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(11)))->as<::Ifc4x3_rc4::IfcPostalAddress>(true); }
void Ifc4x3_rc4::IfcBuilding::setBuildingAddress(::Ifc4x3_rc4::IfcPostalAddress* v) { set_attribute_value(11, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcBuilding::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[114]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBuilding::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[114]); }
Ifc4x3_rc4::IfcBuilding::IfcBuilding(IfcEntityInstanceData&& e) : IfcFacility(std::move(e)) { }
Ifc4x3_rc4::IfcBuilding::IfcBuilding(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType, boost::optional< double > v10_ElevationOfRefHeight, boost::optional< double > v11_ElevationOfTerrain, ::Ifc4x3_rc4::IfcPostalAddress* v12_BuildingAddress) : IfcFacility(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); } if (v10_ElevationOfRefHeight) {set_attribute_value(9, (*v10_ElevationOfRefHeight)); } if (v11_ElevationOfTerrain) {set_attribute_value(10, (*v11_ElevationOfTerrain)); }set_attribute_value(11, v12_BuildingAddress ? v12_BuildingAddress->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcBuildingElementPart
boost::optional< ::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Value > Ifc4x3_rc4::IfcBuildingElementPart::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcBuildingElementPart::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBuildingElementPart::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[115]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBuildingElementPart::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[115]); }
Ifc4x3_rc4::IfcBuildingElementPart::IfcBuildingElementPart(IfcEntityInstanceData&& e) : IfcElementComponent(std::move(e)) { }
Ifc4x3_rc4::IfcBuildingElementPart::IfcBuildingElementPart(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Value > v9_PredefinedType) : IfcElementComponent(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcBuildingElementPartType
::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Value Ifc4x3_rc4::IfcBuildingElementPartType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcBuildingElementPartType::setPredefinedType(::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcBuildingElementPartType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[116]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBuildingElementPartType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[116]); }
Ifc4x3_rc4::IfcBuildingElementPartType::IfcBuildingElementPartType(IfcEntityInstanceData&& e) : IfcElementComponentType(std::move(e)) { }
Ifc4x3_rc4::IfcBuildingElementPartType::IfcBuildingElementPartType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Value v10_PredefinedType) : IfcElementComponentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcBuildingElementPartTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcBuildingElementProxy
boost::optional< ::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Value > Ifc4x3_rc4::IfcBuildingElementProxy::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcBuildingElementProxy::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBuildingElementProxy::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[118]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBuildingElementProxy::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[118]); }
Ifc4x3_rc4::IfcBuildingElementProxy::IfcBuildingElementProxy(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcBuildingElementProxy::IfcBuildingElementProxy(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcBuildingElementProxyType
::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Value Ifc4x3_rc4::IfcBuildingElementProxyType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcBuildingElementProxyType::setPredefinedType(::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcBuildingElementProxyType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[119]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBuildingElementProxyType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[119]); }
Ifc4x3_rc4::IfcBuildingElementProxyType::IfcBuildingElementProxyType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcBuildingElementProxyType::IfcBuildingElementProxyType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcBuildingElementProxyTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcBuildingStorey
boost::optional< double > Ifc4x3_rc4::IfcBuildingStorey::Elevation() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcBuildingStorey::setElevation(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBuildingStorey::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[121]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBuildingStorey::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[121]); }
Ifc4x3_rc4::IfcBuildingStorey::IfcBuildingStorey(IfcEntityInstanceData&& e) : IfcSpatialStructureElement(std::move(e)) { }
Ifc4x3_rc4::IfcBuildingStorey::IfcBuildingStorey(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType, boost::optional< double > v10_Elevation) : IfcSpatialStructureElement(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); } if (v10_Elevation) {set_attribute_value(9, (*v10_Elevation)); }; populate_derived(); }

// Function implementations for IfcBuildingSystem
boost::optional< ::Ifc4x3_rc4::IfcBuildingSystemTypeEnum::Value > Ifc4x3_rc4::IfcBuildingSystem::PredefinedType() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcBuildingSystemTypeEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcBuildingSystem::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcBuildingSystemTypeEnum::Value > v) { if (v) {set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcBuildingSystemTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcBuildingSystem::LongName() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcBuildingSystem::setLongName(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBuildingSystem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[122]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBuildingSystem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[122]); }
Ifc4x3_rc4::IfcBuildingSystem::IfcBuildingSystem(IfcEntityInstanceData&& e) : IfcSystem(std::move(e)) { }
Ifc4x3_rc4::IfcBuildingSystem::IfcBuildingSystem(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< ::Ifc4x3_rc4::IfcBuildingSystemTypeEnum::Value > v6_PredefinedType, boost::optional< std::string > v7_LongName) : IfcSystem(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_PredefinedType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcBuildingSystemTypeEnum::Class(),(size_t)*v6_PredefinedType))); } if (v7_LongName) {set_attribute_value(6, (*v7_LongName)); }; populate_derived(); }

// Function implementations for IfcBuiltElement


const IfcParse::entity& Ifc4x3_rc4::IfcBuiltElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[124]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBuiltElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[124]); }
Ifc4x3_rc4::IfcBuiltElement::IfcBuiltElement(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcBuiltElement::IfcBuiltElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcBuiltElementType


const IfcParse::entity& Ifc4x3_rc4::IfcBuiltElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[125]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBuiltElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[125]); }
Ifc4x3_rc4::IfcBuiltElementType::IfcBuiltElementType(IfcEntityInstanceData&& e) : IfcElementType(std::move(e)) { }
Ifc4x3_rc4::IfcBuiltElementType::IfcBuiltElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcBuiltSystem
boost::optional< ::Ifc4x3_rc4::IfcBuiltSystemTypeEnum::Value > Ifc4x3_rc4::IfcBuiltSystem::PredefinedType() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcBuiltSystemTypeEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcBuiltSystem::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcBuiltSystemTypeEnum::Value > v) { if (v) {set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcBuiltSystemTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcBuiltSystem::LongName() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcBuiltSystem::setLongName(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBuiltSystem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[126]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBuiltSystem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[126]); }
Ifc4x3_rc4::IfcBuiltSystem::IfcBuiltSystem(IfcEntityInstanceData&& e) : IfcSystem(std::move(e)) { }
Ifc4x3_rc4::IfcBuiltSystem::IfcBuiltSystem(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< ::Ifc4x3_rc4::IfcBuiltSystemTypeEnum::Value > v6_PredefinedType, boost::optional< std::string > v7_LongName) : IfcSystem(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_PredefinedType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcBuiltSystemTypeEnum::Class(),(size_t)*v6_PredefinedType))); } if (v7_LongName) {set_attribute_value(6, (*v7_LongName)); }; populate_derived(); }

// Function implementations for IfcBurner
boost::optional< ::Ifc4x3_rc4::IfcBurnerTypeEnum::Value > Ifc4x3_rc4::IfcBurner::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcBurnerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcBurner::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcBurnerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcBurnerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcBurner::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[128]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBurner::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[128]); }
Ifc4x3_rc4::IfcBurner::IfcBurner(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcBurner::IfcBurner(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcBurnerTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcBurnerTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcBurnerType
::Ifc4x3_rc4::IfcBurnerTypeEnum::Value Ifc4x3_rc4::IfcBurnerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcBurnerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcBurnerType::setPredefinedType(::Ifc4x3_rc4::IfcBurnerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcBurnerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcBurnerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[129]); }
const IfcParse::entity& Ifc4x3_rc4::IfcBurnerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[129]); }
Ifc4x3_rc4::IfcBurnerType::IfcBurnerType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcBurnerType::IfcBurnerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcBurnerTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcBurnerTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCShapeProfileDef
double Ifc4x3_rc4::IfcCShapeProfileDef::Depth() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcCShapeProfileDef::setDepth(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcCShapeProfileDef::Width() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcCShapeProfileDef::setWidth(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
double Ifc4x3_rc4::IfcCShapeProfileDef::WallThickness() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcCShapeProfileDef::setWallThickness(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcCShapeProfileDef::Girth() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcCShapeProfileDef::setGirth(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< double > Ifc4x3_rc4::IfcCShapeProfileDef::InternalFilletRadius() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcCShapeProfileDef::setInternalFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCShapeProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[267]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCShapeProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[267]); }
Ifc4x3_rc4::IfcCShapeProfileDef::IfcCShapeProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcCShapeProfileDef::IfcCShapeProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_Depth, double v5_Width, double v6_WallThickness, double v7_Girth, boost::optional< double > v8_InternalFilletRadius) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Depth));set_attribute_value(4, (v5_Width));set_attribute_value(5, (v6_WallThickness));set_attribute_value(6, (v7_Girth)); if (v8_InternalFilletRadius) {set_attribute_value(7, (*v8_InternalFilletRadius)); }; populate_derived(); }

// Function implementations for IfcCableCarrierFitting
boost::optional< ::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Value > Ifc4x3_rc4::IfcCableCarrierFitting::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCableCarrierFitting::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCableCarrierFitting::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[131]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCableCarrierFitting::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[131]); }
Ifc4x3_rc4::IfcCableCarrierFitting::IfcCableCarrierFitting(IfcEntityInstanceData&& e) : IfcFlowFitting(std::move(e)) { }
Ifc4x3_rc4::IfcCableCarrierFitting::IfcCableCarrierFitting(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Value > v9_PredefinedType) : IfcFlowFitting(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCableCarrierFittingType
::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Value Ifc4x3_rc4::IfcCableCarrierFittingType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCableCarrierFittingType::setPredefinedType(::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCableCarrierFittingType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[132]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCableCarrierFittingType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[132]); }
Ifc4x3_rc4::IfcCableCarrierFittingType::IfcCableCarrierFittingType(IfcEntityInstanceData&& e) : IfcFlowFittingType(std::move(e)) { }
Ifc4x3_rc4::IfcCableCarrierFittingType::IfcCableCarrierFittingType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Value v10_PredefinedType) : IfcFlowFittingType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCableCarrierFittingTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCableCarrierSegment
boost::optional< ::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Value > Ifc4x3_rc4::IfcCableCarrierSegment::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCableCarrierSegment::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCableCarrierSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[134]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCableCarrierSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[134]); }
Ifc4x3_rc4::IfcCableCarrierSegment::IfcCableCarrierSegment(IfcEntityInstanceData&& e) : IfcFlowSegment(std::move(e)) { }
Ifc4x3_rc4::IfcCableCarrierSegment::IfcCableCarrierSegment(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Value > v9_PredefinedType) : IfcFlowSegment(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCableCarrierSegmentType
::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Value Ifc4x3_rc4::IfcCableCarrierSegmentType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCableCarrierSegmentType::setPredefinedType(::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCableCarrierSegmentType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[135]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCableCarrierSegmentType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[135]); }
Ifc4x3_rc4::IfcCableCarrierSegmentType::IfcCableCarrierSegmentType(IfcEntityInstanceData&& e) : IfcFlowSegmentType(std::move(e)) { }
Ifc4x3_rc4::IfcCableCarrierSegmentType::IfcCableCarrierSegmentType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Value v10_PredefinedType) : IfcFlowSegmentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCableCarrierSegmentTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCableFitting
boost::optional< ::Ifc4x3_rc4::IfcCableFittingTypeEnum::Value > Ifc4x3_rc4::IfcCableFitting::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCableFittingTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCableFitting::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCableFittingTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCableFittingTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCableFitting::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[137]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCableFitting::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[137]); }
Ifc4x3_rc4::IfcCableFitting::IfcCableFitting(IfcEntityInstanceData&& e) : IfcFlowFitting(std::move(e)) { }
Ifc4x3_rc4::IfcCableFitting::IfcCableFitting(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCableFittingTypeEnum::Value > v9_PredefinedType) : IfcFlowFitting(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCableFittingTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCableFittingType
::Ifc4x3_rc4::IfcCableFittingTypeEnum::Value Ifc4x3_rc4::IfcCableFittingType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCableFittingTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCableFittingType::setPredefinedType(::Ifc4x3_rc4::IfcCableFittingTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCableFittingTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCableFittingType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[138]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCableFittingType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[138]); }
Ifc4x3_rc4::IfcCableFittingType::IfcCableFittingType(IfcEntityInstanceData&& e) : IfcFlowFittingType(std::move(e)) { }
Ifc4x3_rc4::IfcCableFittingType::IfcCableFittingType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCableFittingTypeEnum::Value v10_PredefinedType) : IfcFlowFittingType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCableFittingTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCableSegment
boost::optional< ::Ifc4x3_rc4::IfcCableSegmentTypeEnum::Value > Ifc4x3_rc4::IfcCableSegment::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCableSegmentTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCableSegment::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCableSegmentTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCableSegmentTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCableSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[140]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCableSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[140]); }
Ifc4x3_rc4::IfcCableSegment::IfcCableSegment(IfcEntityInstanceData&& e) : IfcFlowSegment(std::move(e)) { }
Ifc4x3_rc4::IfcCableSegment::IfcCableSegment(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCableSegmentTypeEnum::Value > v9_PredefinedType) : IfcFlowSegment(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCableSegmentTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCableSegmentType
::Ifc4x3_rc4::IfcCableSegmentTypeEnum::Value Ifc4x3_rc4::IfcCableSegmentType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCableSegmentTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCableSegmentType::setPredefinedType(::Ifc4x3_rc4::IfcCableSegmentTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCableSegmentTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCableSegmentType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[141]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCableSegmentType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[141]); }
Ifc4x3_rc4::IfcCableSegmentType::IfcCableSegmentType(IfcEntityInstanceData&& e) : IfcFlowSegmentType(std::move(e)) { }
Ifc4x3_rc4::IfcCableSegmentType::IfcCableSegmentType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCableSegmentTypeEnum::Value v10_PredefinedType) : IfcFlowSegmentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCableSegmentTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCaissonFoundation
boost::optional< ::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Value > Ifc4x3_rc4::IfcCaissonFoundation::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCaissonFoundation::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCaissonFoundation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[143]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCaissonFoundation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[143]); }
Ifc4x3_rc4::IfcCaissonFoundation::IfcCaissonFoundation(IfcEntityInstanceData&& e) : IfcDeepFoundation(std::move(e)) { }
Ifc4x3_rc4::IfcCaissonFoundation::IfcCaissonFoundation(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Value > v9_PredefinedType) : IfcDeepFoundation(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCaissonFoundationType
::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Value Ifc4x3_rc4::IfcCaissonFoundationType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCaissonFoundationType::setPredefinedType(::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCaissonFoundationType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[144]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCaissonFoundationType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[144]); }
Ifc4x3_rc4::IfcCaissonFoundationType::IfcCaissonFoundationType(IfcEntityInstanceData&& e) : IfcDeepFoundationType(std::move(e)) { }
Ifc4x3_rc4::IfcCaissonFoundationType::IfcCaissonFoundationType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Value v10_PredefinedType) : IfcDeepFoundationType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCaissonFoundationTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCartesianPoint
std::vector< double > /*[1:3]*/ Ifc4x3_rc4::IfcCartesianPoint::Coordinates() const {  std::vector< double > /*[1:3]*/ v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcCartesianPoint::setCoordinates(std::vector< double > /*[1:3]*/ v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcCartesianPoint::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[147]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCartesianPoint::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[147]); }
Ifc4x3_rc4::IfcCartesianPoint::IfcCartesianPoint(IfcEntityInstanceData&& e) : IfcPoint(std::move(e)) { }
Ifc4x3_rc4::IfcCartesianPoint::IfcCartesianPoint(std::vector< double > /*[1:3]*/ v1_Coordinates) : IfcPoint(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Coordinates));; populate_derived(); }

// Function implementations for IfcCartesianPointList


const IfcParse::entity& Ifc4x3_rc4::IfcCartesianPointList::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[148]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCartesianPointList::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[148]); }
Ifc4x3_rc4::IfcCartesianPointList::IfcCartesianPointList(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcCartesianPointList::IfcCartesianPointList() : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcCartesianPointList2D
std::vector< std::vector< double > > Ifc4x3_rc4::IfcCartesianPointList2D::CoordList() const {  std::vector< std::vector< double > > v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcCartesianPointList2D::setCoordList(std::vector< std::vector< double > > v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcCartesianPointList2D::TagList() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcCartesianPointList2D::setTagList(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCartesianPointList2D::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[149]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCartesianPointList2D::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[149]); }
Ifc4x3_rc4::IfcCartesianPointList2D::IfcCartesianPointList2D(IfcEntityInstanceData&& e) : IfcCartesianPointList(std::move(e)) { }
Ifc4x3_rc4::IfcCartesianPointList2D::IfcCartesianPointList2D(std::vector< std::vector< double > > v1_CoordList, boost::optional< std::vector< std::string > /*[1:?]*/ > v2_TagList) : IfcCartesianPointList(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_CoordList)); if (v2_TagList) {set_attribute_value(1, (*v2_TagList)); }; populate_derived(); }

// Function implementations for IfcCartesianPointList3D
std::vector< std::vector< double > > Ifc4x3_rc4::IfcCartesianPointList3D::CoordList() const {  std::vector< std::vector< double > > v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcCartesianPointList3D::setCoordList(std::vector< std::vector< double > > v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcCartesianPointList3D::TagList() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcCartesianPointList3D::setTagList(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCartesianPointList3D::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[150]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCartesianPointList3D::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[150]); }
Ifc4x3_rc4::IfcCartesianPointList3D::IfcCartesianPointList3D(IfcEntityInstanceData&& e) : IfcCartesianPointList(std::move(e)) { }
Ifc4x3_rc4::IfcCartesianPointList3D::IfcCartesianPointList3D(std::vector< std::vector< double > > v1_CoordList, boost::optional< std::vector< std::string > /*[1:?]*/ > v2_TagList) : IfcCartesianPointList(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_CoordList)); if (v2_TagList) {set_attribute_value(1, (*v2_TagList)); }; populate_derived(); }

// Function implementations for IfcCartesianTransformationOperator
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcCartesianTransformationOperator::Axis1() const { if(data_.get_attribute_value(0).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcCartesianTransformationOperator::setAxis1(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcCartesianTransformationOperator::Axis2() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcCartesianTransformationOperator::setAxis2(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcCartesianPoint* Ifc4x3_rc4::IfcCartesianTransformationOperator::LocalOrigin() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcCartesianPoint>(true); }
void Ifc4x3_rc4::IfcCartesianTransformationOperator::setLocalOrigin(::Ifc4x3_rc4::IfcCartesianPoint* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
boost::optional< double > Ifc4x3_rc4::IfcCartesianTransformationOperator::Scale() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcCartesianTransformationOperator::setScale(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCartesianTransformationOperator::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[151]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCartesianTransformationOperator::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[151]); }
Ifc4x3_rc4::IfcCartesianTransformationOperator::IfcCartesianTransformationOperator(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcCartesianTransformationOperator::IfcCartesianTransformationOperator(::Ifc4x3_rc4::IfcDirection* v1_Axis1, ::Ifc4x3_rc4::IfcDirection* v2_Axis2, ::Ifc4x3_rc4::IfcCartesianPoint* v3_LocalOrigin, boost::optional< double > v4_Scale) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Axis1 ? v1_Axis1->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Axis2 ? v2_Axis2->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_LocalOrigin ? v3_LocalOrigin->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v4_Scale) {set_attribute_value(3, (*v4_Scale)); }; populate_derived(); }

// Function implementations for IfcCartesianTransformationOperator2D


const IfcParse::entity& Ifc4x3_rc4::IfcCartesianTransformationOperator2D::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[152]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCartesianTransformationOperator2D::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[152]); }
Ifc4x3_rc4::IfcCartesianTransformationOperator2D::IfcCartesianTransformationOperator2D(IfcEntityInstanceData&& e) : IfcCartesianTransformationOperator(std::move(e)) { }
Ifc4x3_rc4::IfcCartesianTransformationOperator2D::IfcCartesianTransformationOperator2D(::Ifc4x3_rc4::IfcDirection* v1_Axis1, ::Ifc4x3_rc4::IfcDirection* v2_Axis2, ::Ifc4x3_rc4::IfcCartesianPoint* v3_LocalOrigin, boost::optional< double > v4_Scale) : IfcCartesianTransformationOperator(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Axis1 ? v1_Axis1->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Axis2 ? v2_Axis2->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_LocalOrigin ? v3_LocalOrigin->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v4_Scale) {set_attribute_value(3, (*v4_Scale)); }; populate_derived(); }

// Function implementations for IfcCartesianTransformationOperator2DnonUniform
boost::optional< double > Ifc4x3_rc4::IfcCartesianTransformationOperator2DnonUniform::Scale2() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcCartesianTransformationOperator2DnonUniform::setScale2(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCartesianTransformationOperator2DnonUniform::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[153]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCartesianTransformationOperator2DnonUniform::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[153]); }
Ifc4x3_rc4::IfcCartesianTransformationOperator2DnonUniform::IfcCartesianTransformationOperator2DnonUniform(IfcEntityInstanceData&& e) : IfcCartesianTransformationOperator2D(std::move(e)) { }
Ifc4x3_rc4::IfcCartesianTransformationOperator2DnonUniform::IfcCartesianTransformationOperator2DnonUniform(::Ifc4x3_rc4::IfcDirection* v1_Axis1, ::Ifc4x3_rc4::IfcDirection* v2_Axis2, ::Ifc4x3_rc4::IfcCartesianPoint* v3_LocalOrigin, boost::optional< double > v4_Scale, boost::optional< double > v5_Scale2) : IfcCartesianTransformationOperator2D(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_Axis1 ? v1_Axis1->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Axis2 ? v2_Axis2->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_LocalOrigin ? v3_LocalOrigin->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v4_Scale) {set_attribute_value(3, (*v4_Scale)); } if (v5_Scale2) {set_attribute_value(4, (*v5_Scale2)); }; populate_derived(); }

// Function implementations for IfcCartesianTransformationOperator3D
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcCartesianTransformationOperator3D::Axis3() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcCartesianTransformationOperator3D::setAxis3(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcCartesianTransformationOperator3D::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[154]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCartesianTransformationOperator3D::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[154]); }
Ifc4x3_rc4::IfcCartesianTransformationOperator3D::IfcCartesianTransformationOperator3D(IfcEntityInstanceData&& e) : IfcCartesianTransformationOperator(std::move(e)) { }
Ifc4x3_rc4::IfcCartesianTransformationOperator3D::IfcCartesianTransformationOperator3D(::Ifc4x3_rc4::IfcDirection* v1_Axis1, ::Ifc4x3_rc4::IfcDirection* v2_Axis2, ::Ifc4x3_rc4::IfcCartesianPoint* v3_LocalOrigin, boost::optional< double > v4_Scale, ::Ifc4x3_rc4::IfcDirection* v5_Axis3) : IfcCartesianTransformationOperator(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_Axis1 ? v1_Axis1->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Axis2 ? v2_Axis2->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_LocalOrigin ? v3_LocalOrigin->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v4_Scale) {set_attribute_value(3, (*v4_Scale)); }set_attribute_value(4, v5_Axis3 ? v5_Axis3->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcCartesianTransformationOperator3DnonUniform
boost::optional< double > Ifc4x3_rc4::IfcCartesianTransformationOperator3DnonUniform::Scale2() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcCartesianTransformationOperator3DnonUniform::setScale2(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< double > Ifc4x3_rc4::IfcCartesianTransformationOperator3DnonUniform::Scale3() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcCartesianTransformationOperator3DnonUniform::setScale3(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCartesianTransformationOperator3DnonUniform::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[155]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCartesianTransformationOperator3DnonUniform::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[155]); }
Ifc4x3_rc4::IfcCartesianTransformationOperator3DnonUniform::IfcCartesianTransformationOperator3DnonUniform(IfcEntityInstanceData&& e) : IfcCartesianTransformationOperator3D(std::move(e)) { }
Ifc4x3_rc4::IfcCartesianTransformationOperator3DnonUniform::IfcCartesianTransformationOperator3DnonUniform(::Ifc4x3_rc4::IfcDirection* v1_Axis1, ::Ifc4x3_rc4::IfcDirection* v2_Axis2, ::Ifc4x3_rc4::IfcCartesianPoint* v3_LocalOrigin, boost::optional< double > v4_Scale, ::Ifc4x3_rc4::IfcDirection* v5_Axis3, boost::optional< double > v6_Scale2, boost::optional< double > v7_Scale3) : IfcCartesianTransformationOperator3D(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, v1_Axis1 ? v1_Axis1->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Axis2 ? v2_Axis2->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_LocalOrigin ? v3_LocalOrigin->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v4_Scale) {set_attribute_value(3, (*v4_Scale)); }set_attribute_value(4, v5_Axis3 ? v5_Axis3->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v6_Scale2) {set_attribute_value(5, (*v6_Scale2)); } if (v7_Scale3) {set_attribute_value(6, (*v7_Scale3)); }; populate_derived(); }

// Function implementations for IfcCenterLineProfileDef
double Ifc4x3_rc4::IfcCenterLineProfileDef::Thickness() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcCenterLineProfileDef::setThickness(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcCenterLineProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[156]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCenterLineProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[156]); }
Ifc4x3_rc4::IfcCenterLineProfileDef::IfcCenterLineProfileDef(IfcEntityInstanceData&& e) : IfcArbitraryOpenProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcCenterLineProfileDef::IfcCenterLineProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcBoundedCurve* v3_Curve, double v4_Thickness) : IfcArbitraryOpenProfileDef(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Curve ? v3_Curve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Thickness));; populate_derived(); }

// Function implementations for IfcChiller
boost::optional< ::Ifc4x3_rc4::IfcChillerTypeEnum::Value > Ifc4x3_rc4::IfcChiller::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcChillerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcChiller::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcChillerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcChillerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcChiller::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[158]); }
const IfcParse::entity& Ifc4x3_rc4::IfcChiller::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[158]); }
Ifc4x3_rc4::IfcChiller::IfcChiller(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcChiller::IfcChiller(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcChillerTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcChillerTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcChillerType
::Ifc4x3_rc4::IfcChillerTypeEnum::Value Ifc4x3_rc4::IfcChillerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcChillerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcChillerType::setPredefinedType(::Ifc4x3_rc4::IfcChillerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcChillerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcChillerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[159]); }
const IfcParse::entity& Ifc4x3_rc4::IfcChillerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[159]); }
Ifc4x3_rc4::IfcChillerType::IfcChillerType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcChillerType::IfcChillerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcChillerTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcChillerTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcChimney
boost::optional< ::Ifc4x3_rc4::IfcChimneyTypeEnum::Value > Ifc4x3_rc4::IfcChimney::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcChimneyTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcChimney::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcChimneyTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcChimneyTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcChimney::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[161]); }
const IfcParse::entity& Ifc4x3_rc4::IfcChimney::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[161]); }
Ifc4x3_rc4::IfcChimney::IfcChimney(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcChimney::IfcChimney(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcChimneyTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcChimneyTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcChimneyType
::Ifc4x3_rc4::IfcChimneyTypeEnum::Value Ifc4x3_rc4::IfcChimneyType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcChimneyTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcChimneyType::setPredefinedType(::Ifc4x3_rc4::IfcChimneyTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcChimneyTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcChimneyType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[162]); }
const IfcParse::entity& Ifc4x3_rc4::IfcChimneyType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[162]); }
Ifc4x3_rc4::IfcChimneyType::IfcChimneyType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcChimneyType::IfcChimneyType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcChimneyTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcChimneyTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCircle
double Ifc4x3_rc4::IfcCircle::Radius() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcCircle::setRadius(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcCircle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[164]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCircle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[164]); }
Ifc4x3_rc4::IfcCircle::IfcCircle(IfcEntityInstanceData&& e) : IfcConic(std::move(e)) { }
Ifc4x3_rc4::IfcCircle::IfcCircle(::Ifc4x3_rc4::IfcAxis2Placement* v1_Position, double v2_Radius) : IfcConic(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Radius));; populate_derived(); }

// Function implementations for IfcCircleHollowProfileDef
double Ifc4x3_rc4::IfcCircleHollowProfileDef::WallThickness() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcCircleHollowProfileDef::setWallThickness(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcCircleHollowProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[165]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCircleHollowProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[165]); }
Ifc4x3_rc4::IfcCircleHollowProfileDef::IfcCircleHollowProfileDef(IfcEntityInstanceData&& e) : IfcCircleProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcCircleHollowProfileDef::IfcCircleHollowProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_Radius, double v5_WallThickness) : IfcCircleProfileDef(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Radius));set_attribute_value(4, (v5_WallThickness));; populate_derived(); }

// Function implementations for IfcCircleProfileDef
double Ifc4x3_rc4::IfcCircleProfileDef::Radius() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcCircleProfileDef::setRadius(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcCircleProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[166]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCircleProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[166]); }
Ifc4x3_rc4::IfcCircleProfileDef::IfcCircleProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcCircleProfileDef::IfcCircleProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_Radius) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Radius));; populate_derived(); }

// Function implementations for IfcCivilElement


const IfcParse::entity& Ifc4x3_rc4::IfcCivilElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[167]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCivilElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[167]); }
Ifc4x3_rc4::IfcCivilElement::IfcCivilElement(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcCivilElement::IfcCivilElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcCivilElementType


const IfcParse::entity& Ifc4x3_rc4::IfcCivilElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[168]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCivilElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[168]); }
Ifc4x3_rc4::IfcCivilElementType::IfcCivilElementType(IfcEntityInstanceData&& e) : IfcElementType(std::move(e)) { }
Ifc4x3_rc4::IfcCivilElementType::IfcCivilElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcClassification
boost::optional< std::string > Ifc4x3_rc4::IfcClassification::Source() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcClassification::setSource(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcClassification::Edition() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcClassification::setEdition(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcClassification::EditionDate() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcClassification::setEditionDate(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
std::string Ifc4x3_rc4::IfcClassification::Name() const {  std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcClassification::setName(std::string v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcClassification::Description() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcClassification::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcClassification::Location() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcClassification::setLocation(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcClassification::ReferenceTokens() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcClassification::setReferenceTokens(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }

::Ifc4x3_rc4::IfcRelAssociatesClassification::list::ptr Ifc4x3_rc4::IfcClassification::ClassificationForObjects() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[915], 5)->as<IfcRelAssociatesClassification>(); }
::Ifc4x3_rc4::IfcClassificationReference::list::ptr Ifc4x3_rc4::IfcClassification::HasReferences() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[170], 3)->as<IfcClassificationReference>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcClassification::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[169]); }
const IfcParse::entity& Ifc4x3_rc4::IfcClassification::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[169]); }
Ifc4x3_rc4::IfcClassification::IfcClassification(IfcEntityInstanceData&& e) : IfcExternalInformation(std::move(e)) { }
Ifc4x3_rc4::IfcClassification::IfcClassification(boost::optional< std::string > v1_Source, boost::optional< std::string > v2_Edition, boost::optional< std::string > v3_EditionDate, std::string v4_Name, boost::optional< std::string > v5_Description, boost::optional< std::string > v6_Location, boost::optional< std::vector< std::string > /*[1:?]*/ > v7_ReferenceTokens) : IfcExternalInformation(IfcEntityInstanceData(storage_t(7))) {  if (v1_Source) {set_attribute_value(0, (*v1_Source)); } if (v2_Edition) {set_attribute_value(1, (*v2_Edition)); } if (v3_EditionDate) {set_attribute_value(2, (*v3_EditionDate)); }set_attribute_value(3, (v4_Name)); if (v5_Description) {set_attribute_value(4, (*v5_Description)); } if (v6_Location) {set_attribute_value(5, (*v6_Location)); } if (v7_ReferenceTokens) {set_attribute_value(6, (*v7_ReferenceTokens)); }; populate_derived(); }

// Function implementations for IfcClassificationReference
::Ifc4x3_rc4::IfcClassificationReferenceSelect* Ifc4x3_rc4::IfcClassificationReference::ReferencedSource() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcClassificationReferenceSelect>(true); }
void Ifc4x3_rc4::IfcClassificationReference::setReferencedSource(::Ifc4x3_rc4::IfcClassificationReferenceSelect* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcClassificationReference::Description() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcClassificationReference::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcClassificationReference::Sort() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcClassificationReference::setSort(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }

::Ifc4x3_rc4::IfcRelAssociatesClassification::list::ptr Ifc4x3_rc4::IfcClassificationReference::ClassificationRefForObjects() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[915], 5)->as<IfcRelAssociatesClassification>(); }
::Ifc4x3_rc4::IfcClassificationReference::list::ptr Ifc4x3_rc4::IfcClassificationReference::HasReferences() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[170], 3)->as<IfcClassificationReference>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcClassificationReference::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[170]); }
const IfcParse::entity& Ifc4x3_rc4::IfcClassificationReference::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[170]); }
Ifc4x3_rc4::IfcClassificationReference::IfcClassificationReference(IfcEntityInstanceData&& e) : IfcExternalReference(std::move(e)) { }
Ifc4x3_rc4::IfcClassificationReference::IfcClassificationReference(boost::optional< std::string > v1_Location, boost::optional< std::string > v2_Identification, boost::optional< std::string > v3_Name, ::Ifc4x3_rc4::IfcClassificationReferenceSelect* v4_ReferencedSource, boost::optional< std::string > v5_Description, boost::optional< std::string > v6_Sort) : IfcExternalReference(IfcEntityInstanceData(storage_t(6))) {  if (v1_Location) {set_attribute_value(0, (*v1_Location)); } if (v2_Identification) {set_attribute_value(1, (*v2_Identification)); } if (v3_Name) {set_attribute_value(2, (*v3_Name)); }set_attribute_value(3, v4_ReferencedSource ? v4_ReferencedSource->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Description) {set_attribute_value(4, (*v5_Description)); } if (v6_Sort) {set_attribute_value(5, (*v6_Sort)); }; populate_derived(); }

// Function implementations for IfcClosedShell


const IfcParse::entity& Ifc4x3_rc4::IfcClosedShell::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[173]); }
const IfcParse::entity& Ifc4x3_rc4::IfcClosedShell::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[173]); }
Ifc4x3_rc4::IfcClosedShell::IfcClosedShell(IfcEntityInstanceData&& e) : IfcConnectedFaceSet(std::move(e)) { }
Ifc4x3_rc4::IfcClosedShell::IfcClosedShell(aggregate_of< ::Ifc4x3_rc4::IfcFace >::ptr v1_CfsFaces) : IfcConnectedFaceSet(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_CfsFaces)->generalize());; populate_derived(); }

// Function implementations for IfcClothoid
double Ifc4x3_rc4::IfcClothoid::ClothoidConstant() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcClothoid::setClothoidConstant(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcClothoid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[174]); }
const IfcParse::entity& Ifc4x3_rc4::IfcClothoid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[174]); }
Ifc4x3_rc4::IfcClothoid::IfcClothoid(IfcEntityInstanceData&& e) : IfcSpiral(std::move(e)) { }
Ifc4x3_rc4::IfcClothoid::IfcClothoid(::Ifc4x3_rc4::IfcAxis2Placement* v1_Position, double v2_ClothoidConstant) : IfcSpiral(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_ClothoidConstant));; populate_derived(); }

// Function implementations for IfcCoil
boost::optional< ::Ifc4x3_rc4::IfcCoilTypeEnum::Value > Ifc4x3_rc4::IfcCoil::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCoilTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCoil::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCoilTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCoilTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCoil::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[175]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCoil::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[175]); }
Ifc4x3_rc4::IfcCoil::IfcCoil(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcCoil::IfcCoil(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCoilTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCoilTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCoilType
::Ifc4x3_rc4::IfcCoilTypeEnum::Value Ifc4x3_rc4::IfcCoilType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCoilTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCoilType::setPredefinedType(::Ifc4x3_rc4::IfcCoilTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCoilTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCoilType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[176]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCoilType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[176]); }
Ifc4x3_rc4::IfcCoilType::IfcCoilType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcCoilType::IfcCoilType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCoilTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCoilTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcColourRgb
double Ifc4x3_rc4::IfcColourRgb::Red() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcColourRgb::setRed(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcColourRgb::Green() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcColourRgb::setGreen(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcColourRgb::Blue() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcColourRgb::setBlue(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcColourRgb::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[180]); }
const IfcParse::entity& Ifc4x3_rc4::IfcColourRgb::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[180]); }
Ifc4x3_rc4::IfcColourRgb::IfcColourRgb(IfcEntityInstanceData&& e) : IfcColourSpecification(std::move(e)) { }
Ifc4x3_rc4::IfcColourRgb::IfcColourRgb(boost::optional< std::string > v1_Name, double v2_Red, double v3_Green, double v4_Blue) : IfcColourSpecification(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, (v2_Red));set_attribute_value(2, (v3_Green));set_attribute_value(3, (v4_Blue));; populate_derived(); }

// Function implementations for IfcColourRgbList
std::vector< std::vector< double > > Ifc4x3_rc4::IfcColourRgbList::ColourList() const {  std::vector< std::vector< double > > v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcColourRgbList::setColourList(std::vector< std::vector< double > > v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcColourRgbList::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[181]); }
const IfcParse::entity& Ifc4x3_rc4::IfcColourRgbList::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[181]); }
Ifc4x3_rc4::IfcColourRgbList::IfcColourRgbList(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcColourRgbList::IfcColourRgbList(std::vector< std::vector< double > > v1_ColourList) : IfcPresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_ColourList));; populate_derived(); }

// Function implementations for IfcColourSpecification
boost::optional< std::string > Ifc4x3_rc4::IfcColourSpecification::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcColourSpecification::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }


const IfcParse::entity& Ifc4x3_rc4::IfcColourSpecification::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[182]); }
const IfcParse::entity& Ifc4x3_rc4::IfcColourSpecification::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[182]); }
Ifc4x3_rc4::IfcColourSpecification::IfcColourSpecification(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcColourSpecification::IfcColourSpecification(boost::optional< std::string > v1_Name) : IfcPresentationItem(IfcEntityInstanceData(storage_t(1))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }; populate_derived(); }

// Function implementations for IfcColumn
boost::optional< ::Ifc4x3_rc4::IfcColumnTypeEnum::Value > Ifc4x3_rc4::IfcColumn::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcColumnTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcColumn::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcColumnTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcColumnTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcColumn::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[183]); }
const IfcParse::entity& Ifc4x3_rc4::IfcColumn::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[183]); }
Ifc4x3_rc4::IfcColumn::IfcColumn(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcColumn::IfcColumn(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcColumnTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcColumnTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcColumnStandardCase


const IfcParse::entity& Ifc4x3_rc4::IfcColumnStandardCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[184]); }
const IfcParse::entity& Ifc4x3_rc4::IfcColumnStandardCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[184]); }
Ifc4x3_rc4::IfcColumnStandardCase::IfcColumnStandardCase(IfcEntityInstanceData&& e) : IfcColumn(std::move(e)) { }
Ifc4x3_rc4::IfcColumnStandardCase::IfcColumnStandardCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcColumnTypeEnum::Value > v9_PredefinedType) : IfcColumn(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcColumnTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcColumnType
::Ifc4x3_rc4::IfcColumnTypeEnum::Value Ifc4x3_rc4::IfcColumnType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcColumnTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcColumnType::setPredefinedType(::Ifc4x3_rc4::IfcColumnTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcColumnTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcColumnType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[185]); }
const IfcParse::entity& Ifc4x3_rc4::IfcColumnType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[185]); }
Ifc4x3_rc4::IfcColumnType::IfcColumnType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcColumnType::IfcColumnType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcColumnTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcColumnTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCommunicationsAppliance
boost::optional< ::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Value > Ifc4x3_rc4::IfcCommunicationsAppliance::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCommunicationsAppliance::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCommunicationsAppliance::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[187]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCommunicationsAppliance::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[187]); }
Ifc4x3_rc4::IfcCommunicationsAppliance::IfcCommunicationsAppliance(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcCommunicationsAppliance::IfcCommunicationsAppliance(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCommunicationsApplianceType
::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Value Ifc4x3_rc4::IfcCommunicationsApplianceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCommunicationsApplianceType::setPredefinedType(::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCommunicationsApplianceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[188]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCommunicationsApplianceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[188]); }
Ifc4x3_rc4::IfcCommunicationsApplianceType::IfcCommunicationsApplianceType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcCommunicationsApplianceType::IfcCommunicationsApplianceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCommunicationsApplianceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcComplexProperty
std::string Ifc4x3_rc4::IfcComplexProperty::UsageName() const {  std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcComplexProperty::setUsageName(std::string v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr Ifc4x3_rc4::IfcComplexProperty::HasProperties() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcProperty >(); }
void Ifc4x3_rc4::IfcComplexProperty::setHasProperties(aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr v) { set_attribute_value(3, (v)->generalize());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcComplexProperty::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[191]); }
const IfcParse::entity& Ifc4x3_rc4::IfcComplexProperty::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[191]); }
Ifc4x3_rc4::IfcComplexProperty::IfcComplexProperty(IfcEntityInstanceData&& e) : IfcProperty(std::move(e)) { }
Ifc4x3_rc4::IfcComplexProperty::IfcComplexProperty(std::string v1_Name, boost::optional< std::string > v2_Description, std::string v3_UsageName, aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr v4_HasProperties) : IfcProperty(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_UsageName));set_attribute_value(3, (v4_HasProperties)->generalize());; populate_derived(); }

// Function implementations for IfcComplexPropertyTemplate
boost::optional< std::string > Ifc4x3_rc4::IfcComplexPropertyTemplate::UsageName() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcComplexPropertyTemplate::setUsageName(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< ::Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::Value > Ifc4x3_rc4::IfcComplexPropertyTemplate::TemplateType() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcComplexPropertyTemplate::setTemplateType(boost::optional< ::Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::Value > v) { if (v) {set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(5);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertyTemplate >::ptr > Ifc4x3_rc4::IfcComplexPropertyTemplate::HasPropertyTemplates() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(6); return es->as< ::Ifc4x3_rc4::IfcPropertyTemplate >(); }
void Ifc4x3_rc4::IfcComplexPropertyTemplate::setHasPropertyTemplates(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertyTemplate >::ptr > v) { if (v) {set_attribute_value(6, (*v)->generalize());} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcComplexPropertyTemplate::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[192]); }
const IfcParse::entity& Ifc4x3_rc4::IfcComplexPropertyTemplate::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[192]); }
Ifc4x3_rc4::IfcComplexPropertyTemplate::IfcComplexPropertyTemplate(IfcEntityInstanceData&& e) : IfcPropertyTemplate(std::move(e)) { }
Ifc4x3_rc4::IfcComplexPropertyTemplate::IfcComplexPropertyTemplate(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_UsageName, boost::optional< ::Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::Value > v6_TemplateType, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertyTemplate >::ptr > v7_HasPropertyTemplates) : IfcPropertyTemplate(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_UsageName) {set_attribute_value(4, (*v5_UsageName)); } if (v6_TemplateType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcComplexPropertyTemplateTypeEnum::Class(),(size_t)*v6_TemplateType))); } if (v7_HasPropertyTemplates) {set_attribute_value(6, (*v7_HasPropertyTemplates)->generalize()); }; populate_derived(); }

// Function implementations for IfcCompositeCurve
aggregate_of< ::Ifc4x3_rc4::IfcSegment >::ptr Ifc4x3_rc4::IfcCompositeCurve::Segments() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcSegment >(); }
void Ifc4x3_rc4::IfcCompositeCurve::setSegments(aggregate_of< ::Ifc4x3_rc4::IfcSegment >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }
boost::logic::tribool Ifc4x3_rc4::IfcCompositeCurve::SelfIntersect() const {  boost::logic::tribool v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcCompositeCurve::setSelfIntersect(boost::logic::tribool v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcCompositeCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[194]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCompositeCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[194]); }
Ifc4x3_rc4::IfcCompositeCurve::IfcCompositeCurve(IfcEntityInstanceData&& e) : IfcBoundedCurve(std::move(e)) { }
Ifc4x3_rc4::IfcCompositeCurve::IfcCompositeCurve(aggregate_of< ::Ifc4x3_rc4::IfcSegment >::ptr v1_Segments, boost::logic::tribool v2_SelfIntersect) : IfcBoundedCurve(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_Segments)->generalize());set_attribute_value(1, (v2_SelfIntersect));; populate_derived(); }

// Function implementations for IfcCompositeCurveOnSurface


const IfcParse::entity& Ifc4x3_rc4::IfcCompositeCurveOnSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[195]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCompositeCurveOnSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[195]); }
Ifc4x3_rc4::IfcCompositeCurveOnSurface::IfcCompositeCurveOnSurface(IfcEntityInstanceData&& e) : IfcCompositeCurve(std::move(e)) { }
Ifc4x3_rc4::IfcCompositeCurveOnSurface::IfcCompositeCurveOnSurface(aggregate_of< ::Ifc4x3_rc4::IfcSegment >::ptr v1_Segments, boost::logic::tribool v2_SelfIntersect) : IfcCompositeCurve(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_Segments)->generalize());set_attribute_value(1, (v2_SelfIntersect));; populate_derived(); }

// Function implementations for IfcCompositeCurveSegment
bool Ifc4x3_rc4::IfcCompositeCurveSegment::SameSense() const {  bool v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcCompositeCurveSegment::setSameSense(bool v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcCompositeCurveSegment::ParentCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcCompositeCurveSegment::setParentCurve(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcCompositeCurveSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[196]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCompositeCurveSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[196]); }
Ifc4x3_rc4::IfcCompositeCurveSegment::IfcCompositeCurveSegment(IfcEntityInstanceData&& e) : IfcSegment(std::move(e)) { }
Ifc4x3_rc4::IfcCompositeCurveSegment::IfcCompositeCurveSegment(::Ifc4x3_rc4::IfcTransitionCode::Value v1_Transition, bool v2_SameSense, ::Ifc4x3_rc4::IfcCurve* v3_ParentCurve) : IfcSegment(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcTransitionCode::Class(),(size_t)v1_Transition)));set_attribute_value(1, (v2_SameSense));set_attribute_value(2, v3_ParentCurve ? v3_ParentCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcCompositeProfileDef
aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr Ifc4x3_rc4::IfcCompositeProfileDef::Profiles() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcProfileDef >(); }
void Ifc4x3_rc4::IfcCompositeProfileDef::setProfiles(aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }
boost::optional< std::string > Ifc4x3_rc4::IfcCompositeProfileDef::Label() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcCompositeProfileDef::setLabel(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCompositeProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[197]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCompositeProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[197]); }
Ifc4x3_rc4::IfcCompositeProfileDef::IfcCompositeProfileDef(IfcEntityInstanceData&& e) : IfcProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcCompositeProfileDef::IfcCompositeProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr v3_Profiles, boost::optional< std::string > v4_Label) : IfcProfileDef(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, (v3_Profiles)->generalize()); if (v4_Label) {set_attribute_value(3, (*v4_Label)); }; populate_derived(); }

// Function implementations for IfcCompressor
boost::optional< ::Ifc4x3_rc4::IfcCompressorTypeEnum::Value > Ifc4x3_rc4::IfcCompressor::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCompressorTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCompressor::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCompressorTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCompressorTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCompressor::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[199]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCompressor::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[199]); }
Ifc4x3_rc4::IfcCompressor::IfcCompressor(IfcEntityInstanceData&& e) : IfcFlowMovingDevice(std::move(e)) { }
Ifc4x3_rc4::IfcCompressor::IfcCompressor(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCompressorTypeEnum::Value > v9_PredefinedType) : IfcFlowMovingDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCompressorTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCompressorType
::Ifc4x3_rc4::IfcCompressorTypeEnum::Value Ifc4x3_rc4::IfcCompressorType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCompressorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCompressorType::setPredefinedType(::Ifc4x3_rc4::IfcCompressorTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCompressorTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCompressorType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[200]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCompressorType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[200]); }
Ifc4x3_rc4::IfcCompressorType::IfcCompressorType(IfcEntityInstanceData&& e) : IfcFlowMovingDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcCompressorType::IfcCompressorType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCompressorTypeEnum::Value v10_PredefinedType) : IfcFlowMovingDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCompressorTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCondenser
boost::optional< ::Ifc4x3_rc4::IfcCondenserTypeEnum::Value > Ifc4x3_rc4::IfcCondenser::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCondenserTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCondenser::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCondenserTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCondenserTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCondenser::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[202]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCondenser::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[202]); }
Ifc4x3_rc4::IfcCondenser::IfcCondenser(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcCondenser::IfcCondenser(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCondenserTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCondenserTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCondenserType
::Ifc4x3_rc4::IfcCondenserTypeEnum::Value Ifc4x3_rc4::IfcCondenserType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCondenserTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCondenserType::setPredefinedType(::Ifc4x3_rc4::IfcCondenserTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCondenserTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCondenserType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[203]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCondenserType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[203]); }
Ifc4x3_rc4::IfcCondenserType::IfcCondenserType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcCondenserType::IfcCondenserType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCondenserTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCondenserTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcConic
::Ifc4x3_rc4::IfcAxis2Placement* Ifc4x3_rc4::IfcConic::Position() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcAxis2Placement>(true); }
void Ifc4x3_rc4::IfcConic::setPosition(::Ifc4x3_rc4::IfcAxis2Placement* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcConic::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[205]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConic::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[205]); }
Ifc4x3_rc4::IfcConic::IfcConic(IfcEntityInstanceData&& e) : IfcCurve(std::move(e)) { }
Ifc4x3_rc4::IfcConic::IfcConic(::Ifc4x3_rc4::IfcAxis2Placement* v1_Position) : IfcCurve(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcConnectedFaceSet
aggregate_of< ::Ifc4x3_rc4::IfcFace >::ptr Ifc4x3_rc4::IfcConnectedFaceSet::CfsFaces() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcFace >(); }
void Ifc4x3_rc4::IfcConnectedFaceSet::setCfsFaces(aggregate_of< ::Ifc4x3_rc4::IfcFace >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcConnectedFaceSet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[206]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConnectedFaceSet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[206]); }
Ifc4x3_rc4::IfcConnectedFaceSet::IfcConnectedFaceSet(IfcEntityInstanceData&& e) : IfcTopologicalRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcConnectedFaceSet::IfcConnectedFaceSet(aggregate_of< ::Ifc4x3_rc4::IfcFace >::ptr v1_CfsFaces) : IfcTopologicalRepresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_CfsFaces)->generalize());; populate_derived(); }

// Function implementations for IfcConnectionCurveGeometry
::Ifc4x3_rc4::IfcCurveOrEdgeCurve* Ifc4x3_rc4::IfcConnectionCurveGeometry::CurveOnRelatingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurveOrEdgeCurve>(true); }
void Ifc4x3_rc4::IfcConnectionCurveGeometry::setCurveOnRelatingElement(::Ifc4x3_rc4::IfcCurveOrEdgeCurve* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcCurveOrEdgeCurve* Ifc4x3_rc4::IfcConnectionCurveGeometry::CurveOnRelatedElement() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcCurveOrEdgeCurve>(true); }
void Ifc4x3_rc4::IfcConnectionCurveGeometry::setCurveOnRelatedElement(::Ifc4x3_rc4::IfcCurveOrEdgeCurve* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcConnectionCurveGeometry::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[207]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConnectionCurveGeometry::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[207]); }
Ifc4x3_rc4::IfcConnectionCurveGeometry::IfcConnectionCurveGeometry(IfcEntityInstanceData&& e) : IfcConnectionGeometry(std::move(e)) { }
Ifc4x3_rc4::IfcConnectionCurveGeometry::IfcConnectionCurveGeometry(::Ifc4x3_rc4::IfcCurveOrEdgeCurve* v1_CurveOnRelatingElement, ::Ifc4x3_rc4::IfcCurveOrEdgeCurve* v2_CurveOnRelatedElement) : IfcConnectionGeometry(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_CurveOnRelatingElement ? v1_CurveOnRelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_CurveOnRelatedElement ? v2_CurveOnRelatedElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcConnectionGeometry


const IfcParse::entity& Ifc4x3_rc4::IfcConnectionGeometry::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[208]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConnectionGeometry::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[208]); }
Ifc4x3_rc4::IfcConnectionGeometry::IfcConnectionGeometry(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcConnectionGeometry::IfcConnectionGeometry() : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcConnectionPointEccentricity
boost::optional< double > Ifc4x3_rc4::IfcConnectionPointEccentricity::EccentricityInX() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcConnectionPointEccentricity::setEccentricityInX(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcConnectionPointEccentricity::EccentricityInY() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcConnectionPointEccentricity::setEccentricityInY(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< double > Ifc4x3_rc4::IfcConnectionPointEccentricity::EccentricityInZ() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcConnectionPointEccentricity::setEccentricityInZ(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcConnectionPointEccentricity::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[209]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConnectionPointEccentricity::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[209]); }
Ifc4x3_rc4::IfcConnectionPointEccentricity::IfcConnectionPointEccentricity(IfcEntityInstanceData&& e) : IfcConnectionPointGeometry(std::move(e)) { }
Ifc4x3_rc4::IfcConnectionPointEccentricity::IfcConnectionPointEccentricity(::Ifc4x3_rc4::IfcPointOrVertexPoint* v1_PointOnRelatingElement, ::Ifc4x3_rc4::IfcPointOrVertexPoint* v2_PointOnRelatedElement, boost::optional< double > v3_EccentricityInX, boost::optional< double > v4_EccentricityInY, boost::optional< double > v5_EccentricityInZ) : IfcConnectionPointGeometry(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_PointOnRelatingElement ? v1_PointOnRelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_PointOnRelatedElement ? v2_PointOnRelatedElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_EccentricityInX) {set_attribute_value(2, (*v3_EccentricityInX)); } if (v4_EccentricityInY) {set_attribute_value(3, (*v4_EccentricityInY)); } if (v5_EccentricityInZ) {set_attribute_value(4, (*v5_EccentricityInZ)); }; populate_derived(); }

// Function implementations for IfcConnectionPointGeometry
::Ifc4x3_rc4::IfcPointOrVertexPoint* Ifc4x3_rc4::IfcConnectionPointGeometry::PointOnRelatingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcPointOrVertexPoint>(true); }
void Ifc4x3_rc4::IfcConnectionPointGeometry::setPointOnRelatingElement(::Ifc4x3_rc4::IfcPointOrVertexPoint* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcPointOrVertexPoint* Ifc4x3_rc4::IfcConnectionPointGeometry::PointOnRelatedElement() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcPointOrVertexPoint>(true); }
void Ifc4x3_rc4::IfcConnectionPointGeometry::setPointOnRelatedElement(::Ifc4x3_rc4::IfcPointOrVertexPoint* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcConnectionPointGeometry::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[210]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConnectionPointGeometry::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[210]); }
Ifc4x3_rc4::IfcConnectionPointGeometry::IfcConnectionPointGeometry(IfcEntityInstanceData&& e) : IfcConnectionGeometry(std::move(e)) { }
Ifc4x3_rc4::IfcConnectionPointGeometry::IfcConnectionPointGeometry(::Ifc4x3_rc4::IfcPointOrVertexPoint* v1_PointOnRelatingElement, ::Ifc4x3_rc4::IfcPointOrVertexPoint* v2_PointOnRelatedElement) : IfcConnectionGeometry(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_PointOnRelatingElement ? v1_PointOnRelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_PointOnRelatedElement ? v2_PointOnRelatedElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcConnectionSurfaceGeometry
::Ifc4x3_rc4::IfcSurfaceOrFaceSurface* Ifc4x3_rc4::IfcConnectionSurfaceGeometry::SurfaceOnRelatingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcSurfaceOrFaceSurface>(true); }
void Ifc4x3_rc4::IfcConnectionSurfaceGeometry::setSurfaceOnRelatingElement(::Ifc4x3_rc4::IfcSurfaceOrFaceSurface* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcSurfaceOrFaceSurface* Ifc4x3_rc4::IfcConnectionSurfaceGeometry::SurfaceOnRelatedElement() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcSurfaceOrFaceSurface>(true); }
void Ifc4x3_rc4::IfcConnectionSurfaceGeometry::setSurfaceOnRelatedElement(::Ifc4x3_rc4::IfcSurfaceOrFaceSurface* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcConnectionSurfaceGeometry::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[211]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConnectionSurfaceGeometry::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[211]); }
Ifc4x3_rc4::IfcConnectionSurfaceGeometry::IfcConnectionSurfaceGeometry(IfcEntityInstanceData&& e) : IfcConnectionGeometry(std::move(e)) { }
Ifc4x3_rc4::IfcConnectionSurfaceGeometry::IfcConnectionSurfaceGeometry(::Ifc4x3_rc4::IfcSurfaceOrFaceSurface* v1_SurfaceOnRelatingElement, ::Ifc4x3_rc4::IfcSurfaceOrFaceSurface* v2_SurfaceOnRelatedElement) : IfcConnectionGeometry(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_SurfaceOnRelatingElement ? v1_SurfaceOnRelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_SurfaceOnRelatedElement ? v2_SurfaceOnRelatedElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcConnectionVolumeGeometry
::Ifc4x3_rc4::IfcSolidOrShell* Ifc4x3_rc4::IfcConnectionVolumeGeometry::VolumeOnRelatingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcSolidOrShell>(true); }
void Ifc4x3_rc4::IfcConnectionVolumeGeometry::setVolumeOnRelatingElement(::Ifc4x3_rc4::IfcSolidOrShell* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcSolidOrShell* Ifc4x3_rc4::IfcConnectionVolumeGeometry::VolumeOnRelatedElement() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcSolidOrShell>(true); }
void Ifc4x3_rc4::IfcConnectionVolumeGeometry::setVolumeOnRelatedElement(::Ifc4x3_rc4::IfcSolidOrShell* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcConnectionVolumeGeometry::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[213]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConnectionVolumeGeometry::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[213]); }
Ifc4x3_rc4::IfcConnectionVolumeGeometry::IfcConnectionVolumeGeometry(IfcEntityInstanceData&& e) : IfcConnectionGeometry(std::move(e)) { }
Ifc4x3_rc4::IfcConnectionVolumeGeometry::IfcConnectionVolumeGeometry(::Ifc4x3_rc4::IfcSolidOrShell* v1_VolumeOnRelatingElement, ::Ifc4x3_rc4::IfcSolidOrShell* v2_VolumeOnRelatedElement) : IfcConnectionGeometry(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_VolumeOnRelatingElement ? v1_VolumeOnRelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_VolumeOnRelatedElement ? v2_VolumeOnRelatedElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcConstraint
std::string Ifc4x3_rc4::IfcConstraint::Name() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcConstraint::setName(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcConstraint::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcConstraint::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
::Ifc4x3_rc4::IfcConstraintEnum::Value Ifc4x3_rc4::IfcConstraint::ConstraintGrade() const {  return ::Ifc4x3_rc4::IfcConstraintEnum::FromString(data_.get_attribute_value(2)); }
void Ifc4x3_rc4::IfcConstraint::setConstraintGrade(::Ifc4x3_rc4::IfcConstraintEnum::Value v) { set_attribute_value(2, EnumerationReference(&::Ifc4x3_rc4::IfcConstraintEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(2); }
boost::optional< std::string > Ifc4x3_rc4::IfcConstraint::ConstraintSource() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcConstraint::setConstraintSource(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
::Ifc4x3_rc4::IfcActorSelect* Ifc4x3_rc4::IfcConstraint::CreatingActor() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcActorSelect>(true); }
void Ifc4x3_rc4::IfcConstraint::setCreatingActor(::Ifc4x3_rc4::IfcActorSelect* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
boost::optional< std::string > Ifc4x3_rc4::IfcConstraint::CreationTime() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcConstraint::setCreationTime(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcConstraint::UserDefinedGrade() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcConstraint::setUserDefinedGrade(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcConstraint::HasExternalReferences() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }
::Ifc4x3_rc4::IfcResourceConstraintRelationship::list::ptr Ifc4x3_rc4::IfcConstraint::PropertiesForConstraint() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[961], 2)->as<IfcResourceConstraintRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcConstraint::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[214]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConstraint::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[214]); }
Ifc4x3_rc4::IfcConstraint::IfcConstraint(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcConstraint::IfcConstraint(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcConstraintEnum::Value v3_ConstraintGrade, boost::optional< std::string > v4_ConstraintSource, ::Ifc4x3_rc4::IfcActorSelect* v5_CreatingActor, boost::optional< std::string > v6_CreationTime, boost::optional< std::string > v7_UserDefinedGrade) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcConstraintEnum::Class(),(size_t)v3_ConstraintGrade))); if (v4_ConstraintSource) {set_attribute_value(3, (*v4_ConstraintSource)); }set_attribute_value(4, v5_CreatingActor ? v5_CreatingActor->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v6_CreationTime) {set_attribute_value(5, (*v6_CreationTime)); } if (v7_UserDefinedGrade) {set_attribute_value(6, (*v7_UserDefinedGrade)); }; populate_derived(); }

// Function implementations for IfcConstructionEquipmentResource
boost::optional< ::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Value > Ifc4x3_rc4::IfcConstructionEquipmentResource::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcConstructionEquipmentResource::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcConstructionEquipmentResource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[216]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConstructionEquipmentResource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[216]); }
Ifc4x3_rc4::IfcConstructionEquipmentResource::IfcConstructionEquipmentResource(IfcEntityInstanceData&& e) : IfcConstructionResource(std::move(e)) { }
Ifc4x3_rc4::IfcConstructionEquipmentResource::IfcConstructionEquipmentResource(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription, ::Ifc4x3_rc4::IfcResourceTime* v8_Usage, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v9_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v10_BaseQuantity, boost::optional< ::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Value > v11_PredefinedType) : IfcConstructionResource(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); }set_attribute_value(7, v8_Usage ? v8_Usage->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v9_BaseCosts) {set_attribute_value(8, (*v9_BaseCosts)->generalize()); }set_attribute_value(9, v10_BaseQuantity ? v10_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Class(),(size_t)*v11_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcConstructionEquipmentResourceType
::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Value Ifc4x3_rc4::IfcConstructionEquipmentResourceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcConstructionEquipmentResourceType::setPredefinedType(::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Value v) { set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcConstructionEquipmentResourceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[217]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConstructionEquipmentResourceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[217]); }
Ifc4x3_rc4::IfcConstructionEquipmentResourceType::IfcConstructionEquipmentResourceType(IfcEntityInstanceData&& e) : IfcConstructionResourceType(std::move(e)) { }
Ifc4x3_rc4::IfcConstructionEquipmentResourceType::IfcConstructionEquipmentResourceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ResourceType, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v10_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v11_BaseQuantity, ::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Value v12_PredefinedType) : IfcConstructionResourceType(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ResourceType) {set_attribute_value(8, (*v9_ResourceType)); } if (v10_BaseCosts) {set_attribute_value(9, (*v10_BaseCosts)->generalize()); }set_attribute_value(10, v11_BaseQuantity ? v11_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcConstructionEquipmentResourceTypeEnum::Class(),(size_t)v12_PredefinedType)));; populate_derived(); }

// Function implementations for IfcConstructionMaterialResource
boost::optional< ::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Value > Ifc4x3_rc4::IfcConstructionMaterialResource::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcConstructionMaterialResource::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcConstructionMaterialResource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[219]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConstructionMaterialResource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[219]); }
Ifc4x3_rc4::IfcConstructionMaterialResource::IfcConstructionMaterialResource(IfcEntityInstanceData&& e) : IfcConstructionResource(std::move(e)) { }
Ifc4x3_rc4::IfcConstructionMaterialResource::IfcConstructionMaterialResource(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription, ::Ifc4x3_rc4::IfcResourceTime* v8_Usage, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v9_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v10_BaseQuantity, boost::optional< ::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Value > v11_PredefinedType) : IfcConstructionResource(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); }set_attribute_value(7, v8_Usage ? v8_Usage->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v9_BaseCosts) {set_attribute_value(8, (*v9_BaseCosts)->generalize()); }set_attribute_value(9, v10_BaseQuantity ? v10_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Class(),(size_t)*v11_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcConstructionMaterialResourceType
::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Value Ifc4x3_rc4::IfcConstructionMaterialResourceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcConstructionMaterialResourceType::setPredefinedType(::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Value v) { set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcConstructionMaterialResourceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[220]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConstructionMaterialResourceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[220]); }
Ifc4x3_rc4::IfcConstructionMaterialResourceType::IfcConstructionMaterialResourceType(IfcEntityInstanceData&& e) : IfcConstructionResourceType(std::move(e)) { }
Ifc4x3_rc4::IfcConstructionMaterialResourceType::IfcConstructionMaterialResourceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ResourceType, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v10_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v11_BaseQuantity, ::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Value v12_PredefinedType) : IfcConstructionResourceType(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ResourceType) {set_attribute_value(8, (*v9_ResourceType)); } if (v10_BaseCosts) {set_attribute_value(9, (*v10_BaseCosts)->generalize()); }set_attribute_value(10, v11_BaseQuantity ? v11_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcConstructionMaterialResourceTypeEnum::Class(),(size_t)v12_PredefinedType)));; populate_derived(); }

// Function implementations for IfcConstructionProductResource
boost::optional< ::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Value > Ifc4x3_rc4::IfcConstructionProductResource::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcConstructionProductResource::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcConstructionProductResource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[222]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConstructionProductResource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[222]); }
Ifc4x3_rc4::IfcConstructionProductResource::IfcConstructionProductResource(IfcEntityInstanceData&& e) : IfcConstructionResource(std::move(e)) { }
Ifc4x3_rc4::IfcConstructionProductResource::IfcConstructionProductResource(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription, ::Ifc4x3_rc4::IfcResourceTime* v8_Usage, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v9_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v10_BaseQuantity, boost::optional< ::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Value > v11_PredefinedType) : IfcConstructionResource(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); }set_attribute_value(7, v8_Usage ? v8_Usage->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v9_BaseCosts) {set_attribute_value(8, (*v9_BaseCosts)->generalize()); }set_attribute_value(9, v10_BaseQuantity ? v10_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Class(),(size_t)*v11_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcConstructionProductResourceType
::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Value Ifc4x3_rc4::IfcConstructionProductResourceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcConstructionProductResourceType::setPredefinedType(::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Value v) { set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcConstructionProductResourceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[223]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConstructionProductResourceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[223]); }
Ifc4x3_rc4::IfcConstructionProductResourceType::IfcConstructionProductResourceType(IfcEntityInstanceData&& e) : IfcConstructionResourceType(std::move(e)) { }
Ifc4x3_rc4::IfcConstructionProductResourceType::IfcConstructionProductResourceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ResourceType, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v10_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v11_BaseQuantity, ::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Value v12_PredefinedType) : IfcConstructionResourceType(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ResourceType) {set_attribute_value(8, (*v9_ResourceType)); } if (v10_BaseCosts) {set_attribute_value(9, (*v10_BaseCosts)->generalize()); }set_attribute_value(10, v11_BaseQuantity ? v11_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcConstructionProductResourceTypeEnum::Class(),(size_t)v12_PredefinedType)));; populate_derived(); }

// Function implementations for IfcConstructionResource
::Ifc4x3_rc4::IfcResourceTime* Ifc4x3_rc4::IfcConstructionResource::Usage() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcResourceTime>(true); }
void Ifc4x3_rc4::IfcConstructionResource::setUsage(::Ifc4x3_rc4::IfcResourceTime* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > Ifc4x3_rc4::IfcConstructionResource::BaseCosts() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(8); return es->as< ::Ifc4x3_rc4::IfcAppliedValue >(); }
void Ifc4x3_rc4::IfcConstructionResource::setBaseCosts(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v) { if (v) {set_attribute_value(8, (*v)->generalize());} else {unset_attribute_value(8);} }
::Ifc4x3_rc4::IfcPhysicalQuantity* Ifc4x3_rc4::IfcConstructionResource::BaseQuantity() const { if(data_.get_attribute_value(9).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcPhysicalQuantity>(true); }
void Ifc4x3_rc4::IfcConstructionResource::setBaseQuantity(::Ifc4x3_rc4::IfcPhysicalQuantity* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcConstructionResource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[225]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConstructionResource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[225]); }
Ifc4x3_rc4::IfcConstructionResource::IfcConstructionResource(IfcEntityInstanceData&& e) : IfcResource(std::move(e)) { }
Ifc4x3_rc4::IfcConstructionResource::IfcConstructionResource(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription, ::Ifc4x3_rc4::IfcResourceTime* v8_Usage, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v9_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v10_BaseQuantity) : IfcResource(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); }set_attribute_value(7, v8_Usage ? v8_Usage->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v9_BaseCosts) {set_attribute_value(8, (*v9_BaseCosts)->generalize()); }set_attribute_value(9, v10_BaseQuantity ? v10_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcConstructionResourceType
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > Ifc4x3_rc4::IfcConstructionResourceType::BaseCosts() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(9); return es->as< ::Ifc4x3_rc4::IfcAppliedValue >(); }
void Ifc4x3_rc4::IfcConstructionResourceType::setBaseCosts(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v) { if (v) {set_attribute_value(9, (*v)->generalize());} else {unset_attribute_value(9);} }
::Ifc4x3_rc4::IfcPhysicalQuantity* Ifc4x3_rc4::IfcConstructionResourceType::BaseQuantity() const { if(data_.get_attribute_value(10).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(10)))->as<::Ifc4x3_rc4::IfcPhysicalQuantity>(true); }
void Ifc4x3_rc4::IfcConstructionResourceType::setBaseQuantity(::Ifc4x3_rc4::IfcPhysicalQuantity* v) { set_attribute_value(10, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(10); }


const IfcParse::entity& Ifc4x3_rc4::IfcConstructionResourceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[226]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConstructionResourceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[226]); }
Ifc4x3_rc4::IfcConstructionResourceType::IfcConstructionResourceType(IfcEntityInstanceData&& e) : IfcTypeResource(std::move(e)) { }
Ifc4x3_rc4::IfcConstructionResourceType::IfcConstructionResourceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ResourceType, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v10_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v11_BaseQuantity) : IfcTypeResource(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ResourceType) {set_attribute_value(8, (*v9_ResourceType)); } if (v10_BaseCosts) {set_attribute_value(9, (*v10_BaseCosts)->generalize()); }set_attribute_value(10, v11_BaseQuantity ? v11_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcContext
boost::optional< std::string > Ifc4x3_rc4::IfcContext::ObjectType() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcContext::setObjectType(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcContext::LongName() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcContext::setLongName(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcContext::Phase() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcContext::setPhase(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationContext >::ptr > Ifc4x3_rc4::IfcContext::RepresentationContexts() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcRepresentationContext >(); }
void Ifc4x3_rc4::IfcContext::setRepresentationContexts(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationContext >::ptr > v) { if (v) {set_attribute_value(7, (*v)->generalize());} else {unset_attribute_value(7);} }
::Ifc4x3_rc4::IfcUnitAssignment* Ifc4x3_rc4::IfcContext::UnitsInContext() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcUnitAssignment>(true); }
void Ifc4x3_rc4::IfcContext::setUnitsInContext(::Ifc4x3_rc4::IfcUnitAssignment* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }

::Ifc4x3_rc4::IfcRelDefinesByProperties::list::ptr Ifc4x3_rc4::IfcContext::IsDefinedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[938], 4)->as<IfcRelDefinesByProperties>(); }
::Ifc4x3_rc4::IfcRelDeclares::list::ptr Ifc4x3_rc4::IfcContext::Declares() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[934], 4)->as<IfcRelDeclares>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcContext::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[227]); }
const IfcParse::entity& Ifc4x3_rc4::IfcContext::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[227]); }
Ifc4x3_rc4::IfcContext::IfcContext(IfcEntityInstanceData&& e) : IfcObjectDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcContext::IfcContext(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_LongName, boost::optional< std::string > v7_Phase, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationContext >::ptr > v8_RepresentationContexts, ::Ifc4x3_rc4::IfcUnitAssignment* v9_UnitsInContext) : IfcObjectDefinition(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_LongName) {set_attribute_value(5, (*v6_LongName)); } if (v7_Phase) {set_attribute_value(6, (*v7_Phase)); } if (v8_RepresentationContexts) {set_attribute_value(7, (*v8_RepresentationContexts)->generalize()); }set_attribute_value(8, v9_UnitsInContext ? v9_UnitsInContext->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcContextDependentUnit
std::string Ifc4x3_rc4::IfcContextDependentUnit::Name() const {  std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcContextDependentUnit::setName(std::string v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcContextDependentUnit::HasExternalReference() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcContextDependentUnit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[229]); }
const IfcParse::entity& Ifc4x3_rc4::IfcContextDependentUnit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[229]); }
Ifc4x3_rc4::IfcContextDependentUnit::IfcContextDependentUnit(IfcEntityInstanceData&& e) : IfcNamedUnit(std::move(e)) { }
Ifc4x3_rc4::IfcContextDependentUnit::IfcContextDependentUnit(::Ifc4x3_rc4::IfcDimensionalExponents* v1_Dimensions, ::Ifc4x3_rc4::IfcUnitEnum::Value v2_UnitType, std::string v3_Name) : IfcNamedUnit(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Dimensions ? v1_Dimensions->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcUnitEnum::Class(),(size_t)v2_UnitType)));set_attribute_value(2, (v3_Name));; populate_derived(); }

// Function implementations for IfcControl
boost::optional< std::string > Ifc4x3_rc4::IfcControl::Identification() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcControl::setIdentification(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }

::Ifc4x3_rc4::IfcRelAssignsToControl::list::ptr Ifc4x3_rc4::IfcControl::Controls() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[907], 6)->as<IfcRelAssignsToControl>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcControl::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[230]); }
const IfcParse::entity& Ifc4x3_rc4::IfcControl::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[230]); }
Ifc4x3_rc4::IfcControl::IfcControl(IfcEntityInstanceData&& e) : IfcObject(std::move(e)) { }
Ifc4x3_rc4::IfcControl::IfcControl(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification) : IfcObject(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); }; populate_derived(); }

// Function implementations for IfcController
boost::optional< ::Ifc4x3_rc4::IfcControllerTypeEnum::Value > Ifc4x3_rc4::IfcController::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcControllerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcController::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcControllerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcControllerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcController::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[231]); }
const IfcParse::entity& Ifc4x3_rc4::IfcController::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[231]); }
Ifc4x3_rc4::IfcController::IfcController(IfcEntityInstanceData&& e) : IfcDistributionControlElement(std::move(e)) { }
Ifc4x3_rc4::IfcController::IfcController(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcControllerTypeEnum::Value > v9_PredefinedType) : IfcDistributionControlElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcControllerTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcControllerType
::Ifc4x3_rc4::IfcControllerTypeEnum::Value Ifc4x3_rc4::IfcControllerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcControllerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcControllerType::setPredefinedType(::Ifc4x3_rc4::IfcControllerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcControllerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcControllerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[232]); }
const IfcParse::entity& Ifc4x3_rc4::IfcControllerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[232]); }
Ifc4x3_rc4::IfcControllerType::IfcControllerType(IfcEntityInstanceData&& e) : IfcDistributionControlElementType(std::move(e)) { }
Ifc4x3_rc4::IfcControllerType::IfcControllerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcControllerTypeEnum::Value v10_PredefinedType) : IfcDistributionControlElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcControllerTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcConversionBasedUnit
std::string Ifc4x3_rc4::IfcConversionBasedUnit::Name() const {  std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcConversionBasedUnit::setName(std::string v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcMeasureWithUnit* Ifc4x3_rc4::IfcConversionBasedUnit::ConversionFactor() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcMeasureWithUnit>(true); }
void Ifc4x3_rc4::IfcConversionBasedUnit::setConversionFactor(::Ifc4x3_rc4::IfcMeasureWithUnit* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcConversionBasedUnit::HasExternalReference() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcConversionBasedUnit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[234]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConversionBasedUnit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[234]); }
Ifc4x3_rc4::IfcConversionBasedUnit::IfcConversionBasedUnit(IfcEntityInstanceData&& e) : IfcNamedUnit(std::move(e)) { }
Ifc4x3_rc4::IfcConversionBasedUnit::IfcConversionBasedUnit(::Ifc4x3_rc4::IfcDimensionalExponents* v1_Dimensions, ::Ifc4x3_rc4::IfcUnitEnum::Value v2_UnitType, std::string v3_Name, ::Ifc4x3_rc4::IfcMeasureWithUnit* v4_ConversionFactor) : IfcNamedUnit(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Dimensions ? v1_Dimensions->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcUnitEnum::Class(),(size_t)v2_UnitType)));set_attribute_value(2, (v3_Name));set_attribute_value(3, v4_ConversionFactor ? v4_ConversionFactor->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcConversionBasedUnitWithOffset
double Ifc4x3_rc4::IfcConversionBasedUnitWithOffset::ConversionOffset() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcConversionBasedUnitWithOffset::setConversionOffset(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcConversionBasedUnitWithOffset::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[235]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConversionBasedUnitWithOffset::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[235]); }
Ifc4x3_rc4::IfcConversionBasedUnitWithOffset::IfcConversionBasedUnitWithOffset(IfcEntityInstanceData&& e) : IfcConversionBasedUnit(std::move(e)) { }
Ifc4x3_rc4::IfcConversionBasedUnitWithOffset::IfcConversionBasedUnitWithOffset(::Ifc4x3_rc4::IfcDimensionalExponents* v1_Dimensions, ::Ifc4x3_rc4::IfcUnitEnum::Value v2_UnitType, std::string v3_Name, ::Ifc4x3_rc4::IfcMeasureWithUnit* v4_ConversionFactor, double v5_ConversionOffset) : IfcConversionBasedUnit(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_Dimensions ? v1_Dimensions->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcUnitEnum::Class(),(size_t)v2_UnitType)));set_attribute_value(2, (v3_Name));set_attribute_value(3, v4_ConversionFactor ? v4_ConversionFactor->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, (v5_ConversionOffset));; populate_derived(); }

// Function implementations for IfcConveyorSegment
boost::optional< ::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Value > Ifc4x3_rc4::IfcConveyorSegment::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcConveyorSegment::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcConveyorSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[236]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConveyorSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[236]); }
Ifc4x3_rc4::IfcConveyorSegment::IfcConveyorSegment(IfcEntityInstanceData&& e) : IfcFlowSegment(std::move(e)) { }
Ifc4x3_rc4::IfcConveyorSegment::IfcConveyorSegment(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Value > v9_PredefinedType) : IfcFlowSegment(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcConveyorSegmentType
::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Value Ifc4x3_rc4::IfcConveyorSegmentType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcConveyorSegmentType::setPredefinedType(::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcConveyorSegmentType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[237]); }
const IfcParse::entity& Ifc4x3_rc4::IfcConveyorSegmentType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[237]); }
Ifc4x3_rc4::IfcConveyorSegmentType::IfcConveyorSegmentType(IfcEntityInstanceData&& e) : IfcFlowSegmentType(std::move(e)) { }
Ifc4x3_rc4::IfcConveyorSegmentType::IfcConveyorSegmentType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Value v10_PredefinedType) : IfcFlowSegmentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcConveyorSegmentTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCooledBeam
boost::optional< ::Ifc4x3_rc4::IfcCooledBeamTypeEnum::Value > Ifc4x3_rc4::IfcCooledBeam::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCooledBeamTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCooledBeam::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCooledBeamTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCooledBeamTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCooledBeam::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[239]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCooledBeam::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[239]); }
Ifc4x3_rc4::IfcCooledBeam::IfcCooledBeam(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcCooledBeam::IfcCooledBeam(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCooledBeamTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCooledBeamTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCooledBeamType
::Ifc4x3_rc4::IfcCooledBeamTypeEnum::Value Ifc4x3_rc4::IfcCooledBeamType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCooledBeamTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCooledBeamType::setPredefinedType(::Ifc4x3_rc4::IfcCooledBeamTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCooledBeamTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCooledBeamType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[240]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCooledBeamType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[240]); }
Ifc4x3_rc4::IfcCooledBeamType::IfcCooledBeamType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcCooledBeamType::IfcCooledBeamType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCooledBeamTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCooledBeamTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCoolingTower
boost::optional< ::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Value > Ifc4x3_rc4::IfcCoolingTower::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCoolingTower::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCoolingTower::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[242]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCoolingTower::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[242]); }
Ifc4x3_rc4::IfcCoolingTower::IfcCoolingTower(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcCoolingTower::IfcCoolingTower(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCoolingTowerType
::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Value Ifc4x3_rc4::IfcCoolingTowerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCoolingTowerType::setPredefinedType(::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCoolingTowerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[243]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCoolingTowerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[243]); }
Ifc4x3_rc4::IfcCoolingTowerType::IfcCoolingTowerType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcCoolingTowerType::IfcCoolingTowerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCoolingTowerTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCoordinateOperation
::Ifc4x3_rc4::IfcCoordinateReferenceSystemSelect* Ifc4x3_rc4::IfcCoordinateOperation::SourceCRS() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCoordinateReferenceSystemSelect>(true); }
void Ifc4x3_rc4::IfcCoordinateOperation::setSourceCRS(::Ifc4x3_rc4::IfcCoordinateReferenceSystemSelect* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcCoordinateReferenceSystem* Ifc4x3_rc4::IfcCoordinateOperation::TargetCRS() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcCoordinateReferenceSystem>(true); }
void Ifc4x3_rc4::IfcCoordinateOperation::setTargetCRS(::Ifc4x3_rc4::IfcCoordinateReferenceSystem* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcCoordinateOperation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[245]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCoordinateOperation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[245]); }
Ifc4x3_rc4::IfcCoordinateOperation::IfcCoordinateOperation(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcCoordinateOperation::IfcCoordinateOperation(::Ifc4x3_rc4::IfcCoordinateReferenceSystemSelect* v1_SourceCRS, ::Ifc4x3_rc4::IfcCoordinateReferenceSystem* v2_TargetCRS) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_SourceCRS ? v1_SourceCRS->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_TargetCRS ? v2_TargetCRS->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcCoordinateReferenceSystem
std::string Ifc4x3_rc4::IfcCoordinateReferenceSystem::Name() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcCoordinateReferenceSystem::setName(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcCoordinateReferenceSystem::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcCoordinateReferenceSystem::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcCoordinateReferenceSystem::GeodeticDatum() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcCoordinateReferenceSystem::setGeodeticDatum(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< std::string > Ifc4x3_rc4::IfcCoordinateReferenceSystem::VerticalDatum() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcCoordinateReferenceSystem::setVerticalDatum(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }

::Ifc4x3_rc4::IfcCoordinateOperation::list::ptr Ifc4x3_rc4::IfcCoordinateReferenceSystem::HasCoordinateOperation() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[245], 0)->as<IfcCoordinateOperation>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcCoordinateReferenceSystem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[246]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCoordinateReferenceSystem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[246]); }
Ifc4x3_rc4::IfcCoordinateReferenceSystem::IfcCoordinateReferenceSystem(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcCoordinateReferenceSystem::IfcCoordinateReferenceSystem(std::string v1_Name, boost::optional< std::string > v2_Description, boost::optional< std::string > v3_GeodeticDatum, boost::optional< std::string > v4_VerticalDatum) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_GeodeticDatum) {set_attribute_value(2, (*v3_GeodeticDatum)); } if (v4_VerticalDatum) {set_attribute_value(3, (*v4_VerticalDatum)); }; populate_derived(); }

// Function implementations for IfcCosine
double Ifc4x3_rc4::IfcCosine::CosineTerm() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcCosine::setCosineTerm(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< double > Ifc4x3_rc4::IfcCosine::ConstantTerm() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcCosine::setConstantTerm(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCosine::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[248]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCosine::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[248]); }
Ifc4x3_rc4::IfcCosine::IfcCosine(IfcEntityInstanceData&& e) : IfcSpiral(std::move(e)) { }
Ifc4x3_rc4::IfcCosine::IfcCosine(::Ifc4x3_rc4::IfcAxis2Placement* v1_Position, double v2_CosineTerm, boost::optional< double > v3_ConstantTerm) : IfcSpiral(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_CosineTerm)); if (v3_ConstantTerm) {set_attribute_value(2, (*v3_ConstantTerm)); }; populate_derived(); }

// Function implementations for IfcCostItem
boost::optional< ::Ifc4x3_rc4::IfcCostItemTypeEnum::Value > Ifc4x3_rc4::IfcCostItem::PredefinedType() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCostItemTypeEnum::FromString(data_.get_attribute_value(6)); }
void Ifc4x3_rc4::IfcCostItem::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCostItemTypeEnum::Value > v) { if (v) {set_attribute_value(6, EnumerationReference(&::Ifc4x3_rc4::IfcCostItemTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(6);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcCostValue >::ptr > Ifc4x3_rc4::IfcCostItem::CostValues() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcCostValue >(); }
void Ifc4x3_rc4::IfcCostItem::setCostValues(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcCostValue >::ptr > v) { if (v) {set_attribute_value(7, (*v)->generalize());} else {unset_attribute_value(7);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPhysicalQuantity >::ptr > Ifc4x3_rc4::IfcCostItem::CostQuantities() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(8); return es->as< ::Ifc4x3_rc4::IfcPhysicalQuantity >(); }
void Ifc4x3_rc4::IfcCostItem::setCostQuantities(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPhysicalQuantity >::ptr > v) { if (v) {set_attribute_value(8, (*v)->generalize());} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCostItem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[249]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCostItem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[249]); }
Ifc4x3_rc4::IfcCostItem::IfcCostItem(IfcEntityInstanceData&& e) : IfcControl(std::move(e)) { }
Ifc4x3_rc4::IfcCostItem::IfcCostItem(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< ::Ifc4x3_rc4::IfcCostItemTypeEnum::Value > v7_PredefinedType, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcCostValue >::ptr > v8_CostValues, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPhysicalQuantity >::ptr > v9_CostQuantities) : IfcControl(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_PredefinedType) {set_attribute_value(6, (EnumerationReference(&::Ifc4x3_rc4::IfcCostItemTypeEnum::Class(),(size_t)*v7_PredefinedType))); } if (v8_CostValues) {set_attribute_value(7, (*v8_CostValues)->generalize()); } if (v9_CostQuantities) {set_attribute_value(8, (*v9_CostQuantities)->generalize()); }; populate_derived(); }

// Function implementations for IfcCostSchedule
boost::optional< ::Ifc4x3_rc4::IfcCostScheduleTypeEnum::Value > Ifc4x3_rc4::IfcCostSchedule::PredefinedType() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCostScheduleTypeEnum::FromString(data_.get_attribute_value(6)); }
void Ifc4x3_rc4::IfcCostSchedule::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCostScheduleTypeEnum::Value > v) { if (v) {set_attribute_value(6, EnumerationReference(&::Ifc4x3_rc4::IfcCostScheduleTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcCostSchedule::Status() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcCostSchedule::setStatus(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcCostSchedule::SubmittedOn() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcCostSchedule::setSubmittedOn(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< std::string > Ifc4x3_rc4::IfcCostSchedule::UpdateDate() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcCostSchedule::setUpdateDate(boost::optional< std::string > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCostSchedule::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[251]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCostSchedule::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[251]); }
Ifc4x3_rc4::IfcCostSchedule::IfcCostSchedule(IfcEntityInstanceData&& e) : IfcControl(std::move(e)) { }
Ifc4x3_rc4::IfcCostSchedule::IfcCostSchedule(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< ::Ifc4x3_rc4::IfcCostScheduleTypeEnum::Value > v7_PredefinedType, boost::optional< std::string > v8_Status, boost::optional< std::string > v9_SubmittedOn, boost::optional< std::string > v10_UpdateDate) : IfcControl(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_PredefinedType) {set_attribute_value(6, (EnumerationReference(&::Ifc4x3_rc4::IfcCostScheduleTypeEnum::Class(),(size_t)*v7_PredefinedType))); } if (v8_Status) {set_attribute_value(7, (*v8_Status)); } if (v9_SubmittedOn) {set_attribute_value(8, (*v9_SubmittedOn)); } if (v10_UpdateDate) {set_attribute_value(9, (*v10_UpdateDate)); }; populate_derived(); }

// Function implementations for IfcCostValue


const IfcParse::entity& Ifc4x3_rc4::IfcCostValue::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[253]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCostValue::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[253]); }
Ifc4x3_rc4::IfcCostValue::IfcCostValue(IfcEntityInstanceData&& e) : IfcAppliedValue(std::move(e)) { }
Ifc4x3_rc4::IfcCostValue::IfcCostValue(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcAppliedValueSelect* v3_AppliedValue, ::Ifc4x3_rc4::IfcMeasureWithUnit* v4_UnitBasis, boost::optional< std::string > v5_ApplicableDate, boost::optional< std::string > v6_FixedUntilDate, boost::optional< std::string > v7_Category, boost::optional< std::string > v8_Condition, boost::optional< ::Ifc4x3_rc4::IfcArithmeticOperatorEnum::Value > v9_ArithmeticOperator, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v10_Components) : IfcAppliedValue(IfcEntityInstanceData(storage_t(10))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_AppliedValue ? v3_AppliedValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_UnitBasis ? v4_UnitBasis->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_ApplicableDate) {set_attribute_value(4, (*v5_ApplicableDate)); } if (v6_FixedUntilDate) {set_attribute_value(5, (*v6_FixedUntilDate)); } if (v7_Category) {set_attribute_value(6, (*v7_Category)); } if (v8_Condition) {set_attribute_value(7, (*v8_Condition)); } if (v9_ArithmeticOperator) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcArithmeticOperatorEnum::Class(),(size_t)*v9_ArithmeticOperator))); } if (v10_Components) {set_attribute_value(9, (*v10_Components)->generalize()); }; populate_derived(); }

// Function implementations for IfcCourse
boost::optional< ::Ifc4x3_rc4::IfcCourseTypeEnum::Value > Ifc4x3_rc4::IfcCourse::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCourseTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCourse::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCourseTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCourseTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCourse::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[255]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCourse::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[255]); }
Ifc4x3_rc4::IfcCourse::IfcCourse(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcCourse::IfcCourse(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCourseTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCourseTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCourseType
::Ifc4x3_rc4::IfcCourseTypeEnum::Value Ifc4x3_rc4::IfcCourseType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCourseTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCourseType::setPredefinedType(::Ifc4x3_rc4::IfcCourseTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCourseTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCourseType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[256]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCourseType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[256]); }
Ifc4x3_rc4::IfcCourseType::IfcCourseType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcCourseType::IfcCourseType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCourseTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCourseTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCovering
boost::optional< ::Ifc4x3_rc4::IfcCoveringTypeEnum::Value > Ifc4x3_rc4::IfcCovering::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCoveringTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCovering::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCoveringTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCoveringTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }

::Ifc4x3_rc4::IfcRelCoversSpaces::list::ptr Ifc4x3_rc4::IfcCovering::CoversSpaces() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[933], 5)->as<IfcRelCoversSpaces>(); }
::Ifc4x3_rc4::IfcRelCoversBldgElements::list::ptr Ifc4x3_rc4::IfcCovering::CoversElements() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[932], 5)->as<IfcRelCoversBldgElements>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcCovering::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[258]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCovering::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[258]); }
Ifc4x3_rc4::IfcCovering::IfcCovering(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcCovering::IfcCovering(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCoveringTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCoveringTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCoveringType
::Ifc4x3_rc4::IfcCoveringTypeEnum::Value Ifc4x3_rc4::IfcCoveringType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCoveringTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCoveringType::setPredefinedType(::Ifc4x3_rc4::IfcCoveringTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCoveringTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCoveringType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[259]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCoveringType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[259]); }
Ifc4x3_rc4::IfcCoveringType::IfcCoveringType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcCoveringType::IfcCoveringType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCoveringTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCoveringTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCrewResource
boost::optional< ::Ifc4x3_rc4::IfcCrewResourceTypeEnum::Value > Ifc4x3_rc4::IfcCrewResource::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCrewResourceTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcCrewResource::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCrewResourceTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcCrewResourceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCrewResource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[261]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCrewResource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[261]); }
Ifc4x3_rc4::IfcCrewResource::IfcCrewResource(IfcEntityInstanceData&& e) : IfcConstructionResource(std::move(e)) { }
Ifc4x3_rc4::IfcCrewResource::IfcCrewResource(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription, ::Ifc4x3_rc4::IfcResourceTime* v8_Usage, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v9_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v10_BaseQuantity, boost::optional< ::Ifc4x3_rc4::IfcCrewResourceTypeEnum::Value > v11_PredefinedType) : IfcConstructionResource(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); }set_attribute_value(7, v8_Usage ? v8_Usage->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v9_BaseCosts) {set_attribute_value(8, (*v9_BaseCosts)->generalize()); }set_attribute_value(9, v10_BaseQuantity ? v10_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcCrewResourceTypeEnum::Class(),(size_t)*v11_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCrewResourceType
::Ifc4x3_rc4::IfcCrewResourceTypeEnum::Value Ifc4x3_rc4::IfcCrewResourceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCrewResourceTypeEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcCrewResourceType::setPredefinedType(::Ifc4x3_rc4::IfcCrewResourceTypeEnum::Value v) { set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcCrewResourceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcCrewResourceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[262]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCrewResourceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[262]); }
Ifc4x3_rc4::IfcCrewResourceType::IfcCrewResourceType(IfcEntityInstanceData&& e) : IfcConstructionResourceType(std::move(e)) { }
Ifc4x3_rc4::IfcCrewResourceType::IfcCrewResourceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ResourceType, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v10_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v11_BaseQuantity, ::Ifc4x3_rc4::IfcCrewResourceTypeEnum::Value v12_PredefinedType) : IfcConstructionResourceType(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ResourceType) {set_attribute_value(8, (*v9_ResourceType)); } if (v10_BaseCosts) {set_attribute_value(9, (*v10_BaseCosts)->generalize()); }set_attribute_value(10, v11_BaseQuantity ? v11_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcCrewResourceTypeEnum::Class(),(size_t)v12_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCsgPrimitive3D
::Ifc4x3_rc4::IfcAxis2Placement3D* Ifc4x3_rc4::IfcCsgPrimitive3D::Position() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcAxis2Placement3D>(true); }
void Ifc4x3_rc4::IfcCsgPrimitive3D::setPosition(::Ifc4x3_rc4::IfcAxis2Placement3D* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcCsgPrimitive3D::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[264]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCsgPrimitive3D::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[264]); }
Ifc4x3_rc4::IfcCsgPrimitive3D::IfcCsgPrimitive3D(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcCsgPrimitive3D::IfcCsgPrimitive3D(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcCsgSolid
::Ifc4x3_rc4::IfcCsgSelect* Ifc4x3_rc4::IfcCsgSolid::TreeRootExpression() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCsgSelect>(true); }
void Ifc4x3_rc4::IfcCsgSolid::setTreeRootExpression(::Ifc4x3_rc4::IfcCsgSelect* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcCsgSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[266]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCsgSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[266]); }
Ifc4x3_rc4::IfcCsgSolid::IfcCsgSolid(IfcEntityInstanceData&& e) : IfcSolidModel(std::move(e)) { }
Ifc4x3_rc4::IfcCsgSolid::IfcCsgSolid(::Ifc4x3_rc4::IfcCsgSelect* v1_TreeRootExpression) : IfcSolidModel(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_TreeRootExpression ? v1_TreeRootExpression->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcCurrencyRelationship
::Ifc4x3_rc4::IfcMonetaryUnit* Ifc4x3_rc4::IfcCurrencyRelationship::RelatingMonetaryUnit() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcMonetaryUnit>(true); }
void Ifc4x3_rc4::IfcCurrencyRelationship::setRelatingMonetaryUnit(::Ifc4x3_rc4::IfcMonetaryUnit* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcMonetaryUnit* Ifc4x3_rc4::IfcCurrencyRelationship::RelatedMonetaryUnit() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcMonetaryUnit>(true); }
void Ifc4x3_rc4::IfcCurrencyRelationship::setRelatedMonetaryUnit(::Ifc4x3_rc4::IfcMonetaryUnit* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcCurrencyRelationship::ExchangeRate() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcCurrencyRelationship::setExchangeRate(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
boost::optional< std::string > Ifc4x3_rc4::IfcCurrencyRelationship::RateDateTime() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcCurrencyRelationship::setRateDateTime(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
::Ifc4x3_rc4::IfcLibraryInformation* Ifc4x3_rc4::IfcCurrencyRelationship::RateSource() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcLibraryInformation>(true); }
void Ifc4x3_rc4::IfcCurrencyRelationship::setRateSource(::Ifc4x3_rc4::IfcLibraryInformation* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcCurrencyRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[268]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurrencyRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[268]); }
Ifc4x3_rc4::IfcCurrencyRelationship::IfcCurrencyRelationship(IfcEntityInstanceData&& e) : IfcResourceLevelRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcCurrencyRelationship::IfcCurrencyRelationship(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcMonetaryUnit* v3_RelatingMonetaryUnit, ::Ifc4x3_rc4::IfcMonetaryUnit* v4_RelatedMonetaryUnit, double v5_ExchangeRate, boost::optional< std::string > v6_RateDateTime, ::Ifc4x3_rc4::IfcLibraryInformation* v7_RateSource) : IfcResourceLevelRelationship(IfcEntityInstanceData(storage_t(7))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_RelatingMonetaryUnit ? v3_RelatingMonetaryUnit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_RelatedMonetaryUnit ? v4_RelatedMonetaryUnit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, (v5_ExchangeRate)); if (v6_RateDateTime) {set_attribute_value(5, (*v6_RateDateTime)); }set_attribute_value(6, v7_RateSource ? v7_RateSource->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcCurtainWall
boost::optional< ::Ifc4x3_rc4::IfcCurtainWallTypeEnum::Value > Ifc4x3_rc4::IfcCurtainWall::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCurtainWallTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcCurtainWall::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcCurtainWallTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcCurtainWallTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCurtainWall::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[269]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurtainWall::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[269]); }
Ifc4x3_rc4::IfcCurtainWall::IfcCurtainWall(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcCurtainWall::IfcCurtainWall(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcCurtainWallTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcCurtainWallTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcCurtainWallType
::Ifc4x3_rc4::IfcCurtainWallTypeEnum::Value Ifc4x3_rc4::IfcCurtainWallType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcCurtainWallTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcCurtainWallType::setPredefinedType(::Ifc4x3_rc4::IfcCurtainWallTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcCurtainWallTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcCurtainWallType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[270]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurtainWallType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[270]); }
Ifc4x3_rc4::IfcCurtainWallType::IfcCurtainWallType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcCurtainWallType::IfcCurtainWallType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcCurtainWallTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcCurtainWallTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcCurve


const IfcParse::entity& Ifc4x3_rc4::IfcCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[273]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[273]); }
Ifc4x3_rc4::IfcCurve::IfcCurve(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcCurve::IfcCurve() : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcCurveBoundedPlane
::Ifc4x3_rc4::IfcPlane* Ifc4x3_rc4::IfcCurveBoundedPlane::BasisSurface() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcPlane>(true); }
void Ifc4x3_rc4::IfcCurveBoundedPlane::setBasisSurface(::Ifc4x3_rc4::IfcPlane* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcCurveBoundedPlane::OuterBoundary() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcCurveBoundedPlane::setOuterBoundary(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
aggregate_of< ::Ifc4x3_rc4::IfcCurve >::ptr Ifc4x3_rc4::IfcCurveBoundedPlane::InnerBoundaries() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcCurve >(); }
void Ifc4x3_rc4::IfcCurveBoundedPlane::setInnerBoundaries(aggregate_of< ::Ifc4x3_rc4::IfcCurve >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcCurveBoundedPlane::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[274]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurveBoundedPlane::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[274]); }
Ifc4x3_rc4::IfcCurveBoundedPlane::IfcCurveBoundedPlane(IfcEntityInstanceData&& e) : IfcBoundedSurface(std::move(e)) { }
Ifc4x3_rc4::IfcCurveBoundedPlane::IfcCurveBoundedPlane(::Ifc4x3_rc4::IfcPlane* v1_BasisSurface, ::Ifc4x3_rc4::IfcCurve* v2_OuterBoundary, aggregate_of< ::Ifc4x3_rc4::IfcCurve >::ptr v3_InnerBoundaries) : IfcBoundedSurface(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_BasisSurface ? v1_BasisSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_OuterBoundary ? v2_OuterBoundary->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, (v3_InnerBoundaries)->generalize());; populate_derived(); }

// Function implementations for IfcCurveBoundedSurface
::Ifc4x3_rc4::IfcSurface* Ifc4x3_rc4::IfcCurveBoundedSurface::BasisSurface() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcSurface>(true); }
void Ifc4x3_rc4::IfcCurveBoundedSurface::setBasisSurface(::Ifc4x3_rc4::IfcSurface* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcBoundaryCurve >::ptr Ifc4x3_rc4::IfcCurveBoundedSurface::Boundaries() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcBoundaryCurve >(); }
void Ifc4x3_rc4::IfcCurveBoundedSurface::setBoundaries(aggregate_of< ::Ifc4x3_rc4::IfcBoundaryCurve >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
bool Ifc4x3_rc4::IfcCurveBoundedSurface::ImplicitOuter() const {  bool v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcCurveBoundedSurface::setImplicitOuter(bool v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcCurveBoundedSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[275]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurveBoundedSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[275]); }
Ifc4x3_rc4::IfcCurveBoundedSurface::IfcCurveBoundedSurface(IfcEntityInstanceData&& e) : IfcBoundedSurface(std::move(e)) { }
Ifc4x3_rc4::IfcCurveBoundedSurface::IfcCurveBoundedSurface(::Ifc4x3_rc4::IfcSurface* v1_BasisSurface, aggregate_of< ::Ifc4x3_rc4::IfcBoundaryCurve >::ptr v2_Boundaries, bool v3_ImplicitOuter) : IfcBoundedSurface(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_BasisSurface ? v1_BasisSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Boundaries)->generalize());set_attribute_value(2, (v3_ImplicitOuter));; populate_derived(); }

// Function implementations for IfcCurveSegment
::Ifc4x3_rc4::IfcPlacement* Ifc4x3_rc4::IfcCurveSegment::Placement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcPlacement>(true); }
void Ifc4x3_rc4::IfcCurveSegment::setPlacement(::Ifc4x3_rc4::IfcPlacement* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcCurveMeasureSelect* Ifc4x3_rc4::IfcCurveSegment::SegmentStart() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcCurveMeasureSelect>(true); }
void Ifc4x3_rc4::IfcCurveSegment::setSegmentStart(::Ifc4x3_rc4::IfcCurveMeasureSelect* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcCurveMeasureSelect* Ifc4x3_rc4::IfcCurveSegment::SegmentLength() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcCurveMeasureSelect>(true); }
void Ifc4x3_rc4::IfcCurveSegment::setSegmentLength(::Ifc4x3_rc4::IfcCurveMeasureSelect* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcCurveSegment::ParentCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcCurveSegment::setParentCurve(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcCurveSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[281]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurveSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[281]); }
Ifc4x3_rc4::IfcCurveSegment::IfcCurveSegment(IfcEntityInstanceData&& e) : IfcSegment(std::move(e)) { }
Ifc4x3_rc4::IfcCurveSegment::IfcCurveSegment(::Ifc4x3_rc4::IfcTransitionCode::Value v1_Transition, ::Ifc4x3_rc4::IfcPlacement* v2_Placement, ::Ifc4x3_rc4::IfcCurveMeasureSelect* v3_SegmentStart, ::Ifc4x3_rc4::IfcCurveMeasureSelect* v4_SegmentLength, ::Ifc4x3_rc4::IfcCurve* v5_ParentCurve) : IfcSegment(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcTransitionCode::Class(),(size_t)v1_Transition)));set_attribute_value(1, v2_Placement ? v2_Placement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_SegmentStart ? v3_SegmentStart->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_SegmentLength ? v4_SegmentLength->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_ParentCurve ? v5_ParentCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcCurveStyle
::Ifc4x3_rc4::IfcCurveFontOrScaledCurveFontSelect* Ifc4x3_rc4::IfcCurveStyle::CurveFont() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcCurveFontOrScaledCurveFontSelect>(true); }
void Ifc4x3_rc4::IfcCurveStyle::setCurveFont(::Ifc4x3_rc4::IfcCurveFontOrScaledCurveFontSelect* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcSizeSelect* Ifc4x3_rc4::IfcCurveStyle::CurveWidth() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcSizeSelect>(true); }
void Ifc4x3_rc4::IfcCurveStyle::setCurveWidth(::Ifc4x3_rc4::IfcSizeSelect* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcColour* Ifc4x3_rc4::IfcCurveStyle::CurveColour() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcColour>(true); }
void Ifc4x3_rc4::IfcCurveStyle::setCurveColour(::Ifc4x3_rc4::IfcColour* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
boost::optional< bool > Ifc4x3_rc4::IfcCurveStyle::ModelOrDraughting() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } bool v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcCurveStyle::setModelOrDraughting(boost::optional< bool > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcCurveStyle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[282]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurveStyle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[282]); }
Ifc4x3_rc4::IfcCurveStyle::IfcCurveStyle(IfcEntityInstanceData&& e) : IfcPresentationStyle(std::move(e)) { }
Ifc4x3_rc4::IfcCurveStyle::IfcCurveStyle(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcCurveFontOrScaledCurveFontSelect* v2_CurveFont, ::Ifc4x3_rc4::IfcSizeSelect* v3_CurveWidth, ::Ifc4x3_rc4::IfcColour* v4_CurveColour, boost::optional< bool > v5_ModelOrDraughting) : IfcPresentationStyle(IfcEntityInstanceData(storage_t(5))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_CurveFont ? v2_CurveFont->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_CurveWidth ? v3_CurveWidth->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_CurveColour ? v4_CurveColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_ModelOrDraughting) {set_attribute_value(4, (*v5_ModelOrDraughting)); }; populate_derived(); }

// Function implementations for IfcCurveStyleFont
boost::optional< std::string > Ifc4x3_rc4::IfcCurveStyleFont::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcCurveStyleFont::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
aggregate_of< ::Ifc4x3_rc4::IfcCurveStyleFontPattern >::ptr Ifc4x3_rc4::IfcCurveStyleFont::PatternList() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcCurveStyleFontPattern >(); }
void Ifc4x3_rc4::IfcCurveStyleFont::setPatternList(aggregate_of< ::Ifc4x3_rc4::IfcCurveStyleFontPattern >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcCurveStyleFont::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[283]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurveStyleFont::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[283]); }
Ifc4x3_rc4::IfcCurveStyleFont::IfcCurveStyleFont(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcCurveStyleFont::IfcCurveStyleFont(boost::optional< std::string > v1_Name, aggregate_of< ::Ifc4x3_rc4::IfcCurveStyleFontPattern >::ptr v2_PatternList) : IfcPresentationItem(IfcEntityInstanceData(storage_t(2))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, (v2_PatternList)->generalize());; populate_derived(); }

// Function implementations for IfcCurveStyleFontAndScaling
boost::optional< std::string > Ifc4x3_rc4::IfcCurveStyleFontAndScaling::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcCurveStyleFontAndScaling::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
::Ifc4x3_rc4::IfcCurveStyleFontSelect* Ifc4x3_rc4::IfcCurveStyleFontAndScaling::CurveFont() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcCurveStyleFontSelect>(true); }
void Ifc4x3_rc4::IfcCurveStyleFontAndScaling::setCurveFont(::Ifc4x3_rc4::IfcCurveStyleFontSelect* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcCurveStyleFontAndScaling::CurveFontScaling() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcCurveStyleFontAndScaling::setCurveFontScaling(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcCurveStyleFontAndScaling::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[284]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurveStyleFontAndScaling::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[284]); }
Ifc4x3_rc4::IfcCurveStyleFontAndScaling::IfcCurveStyleFontAndScaling(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcCurveStyleFontAndScaling::IfcCurveStyleFontAndScaling(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcCurveStyleFontSelect* v2_CurveFont, double v3_CurveFontScaling) : IfcPresentationItem(IfcEntityInstanceData(storage_t(3))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_CurveFont ? v2_CurveFont->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, (v3_CurveFontScaling));; populate_derived(); }

// Function implementations for IfcCurveStyleFontPattern
double Ifc4x3_rc4::IfcCurveStyleFontPattern::VisibleSegmentLength() const {  double v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcCurveStyleFontPattern::setVisibleSegmentLength(double v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
double Ifc4x3_rc4::IfcCurveStyleFontPattern::InvisibleSegmentLength() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcCurveStyleFontPattern::setInvisibleSegmentLength(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcCurveStyleFontPattern::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[285]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCurveStyleFontPattern::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[285]); }
Ifc4x3_rc4::IfcCurveStyleFontPattern::IfcCurveStyleFontPattern(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcCurveStyleFontPattern::IfcCurveStyleFontPattern(double v1_VisibleSegmentLength, double v2_InvisibleSegmentLength) : IfcPresentationItem(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_VisibleSegmentLength));set_attribute_value(1, (v2_InvisibleSegmentLength));; populate_derived(); }

// Function implementations for IfcCylindricalSurface
double Ifc4x3_rc4::IfcCylindricalSurface::Radius() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcCylindricalSurface::setRadius(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcCylindricalSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[287]); }
const IfcParse::entity& Ifc4x3_rc4::IfcCylindricalSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[287]); }
Ifc4x3_rc4::IfcCylindricalSurface::IfcCylindricalSurface(IfcEntityInstanceData&& e) : IfcElementarySurface(std::move(e)) { }
Ifc4x3_rc4::IfcCylindricalSurface::IfcCylindricalSurface(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position, double v2_Radius) : IfcElementarySurface(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Radius));; populate_derived(); }

// Function implementations for IfcDamper
boost::optional< ::Ifc4x3_rc4::IfcDamperTypeEnum::Value > Ifc4x3_rc4::IfcDamper::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDamperTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcDamper::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcDamperTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcDamperTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDamper::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[288]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDamper::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[288]); }
Ifc4x3_rc4::IfcDamper::IfcDamper(IfcEntityInstanceData&& e) : IfcFlowController(std::move(e)) { }
Ifc4x3_rc4::IfcDamper::IfcDamper(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcDamperTypeEnum::Value > v9_PredefinedType) : IfcFlowController(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcDamperTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcDamperType
::Ifc4x3_rc4::IfcDamperTypeEnum::Value Ifc4x3_rc4::IfcDamperType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcDamperTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcDamperType::setPredefinedType(::Ifc4x3_rc4::IfcDamperTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcDamperTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcDamperType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[289]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDamperType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[289]); }
Ifc4x3_rc4::IfcDamperType::IfcDamperType(IfcEntityInstanceData&& e) : IfcFlowControllerType(std::move(e)) { }
Ifc4x3_rc4::IfcDamperType::IfcDamperType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcDamperTypeEnum::Value v10_PredefinedType) : IfcFlowControllerType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcDamperTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcDeepFoundation


const IfcParse::entity& Ifc4x3_rc4::IfcDeepFoundation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[296]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDeepFoundation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[296]); }
Ifc4x3_rc4::IfcDeepFoundation::IfcDeepFoundation(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcDeepFoundation::IfcDeepFoundation(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcBuiltElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcDeepFoundationType


const IfcParse::entity& Ifc4x3_rc4::IfcDeepFoundationType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[297]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDeepFoundationType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[297]); }
Ifc4x3_rc4::IfcDeepFoundationType::IfcDeepFoundationType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcDeepFoundationType::IfcDeepFoundationType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcDerivedProfileDef
::Ifc4x3_rc4::IfcProfileDef* Ifc4x3_rc4::IfcDerivedProfileDef::ParentProfile() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcProfileDef>(true); }
void Ifc4x3_rc4::IfcDerivedProfileDef::setParentProfile(::Ifc4x3_rc4::IfcProfileDef* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcCartesianTransformationOperator2D* Ifc4x3_rc4::IfcDerivedProfileDef::Operator() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcCartesianTransformationOperator2D>(true); }
void Ifc4x3_rc4::IfcDerivedProfileDef::setOperator(::Ifc4x3_rc4::IfcCartesianTransformationOperator2D* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcDerivedProfileDef::Label() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcDerivedProfileDef::setLabel(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDerivedProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[300]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDerivedProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[300]); }
Ifc4x3_rc4::IfcDerivedProfileDef::IfcDerivedProfileDef(IfcEntityInstanceData&& e) : IfcProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcDerivedProfileDef::IfcDerivedProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcProfileDef* v3_ParentProfile, ::Ifc4x3_rc4::IfcCartesianTransformationOperator2D* v4_Operator, boost::optional< std::string > v5_Label) : IfcProfileDef(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_ParentProfile ? v3_ParentProfile->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_Operator ? v4_Operator->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Label) {set_attribute_value(4, (*v5_Label)); }; populate_derived(); }

// Function implementations for IfcDerivedUnit
aggregate_of< ::Ifc4x3_rc4::IfcDerivedUnitElement >::ptr Ifc4x3_rc4::IfcDerivedUnit::Elements() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcDerivedUnitElement >(); }
void Ifc4x3_rc4::IfcDerivedUnit::setElements(aggregate_of< ::Ifc4x3_rc4::IfcDerivedUnitElement >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcDerivedUnitEnum::Value Ifc4x3_rc4::IfcDerivedUnit::UnitType() const {  return ::Ifc4x3_rc4::IfcDerivedUnitEnum::FromString(data_.get_attribute_value(1)); }
void Ifc4x3_rc4::IfcDerivedUnit::setUnitType(::Ifc4x3_rc4::IfcDerivedUnitEnum::Value v) { set_attribute_value(1, EnumerationReference(&::Ifc4x3_rc4::IfcDerivedUnitEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(1); }
boost::optional< std::string > Ifc4x3_rc4::IfcDerivedUnit::UserDefinedType() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcDerivedUnit::setUserDefinedType(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDerivedUnit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[301]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDerivedUnit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[301]); }
Ifc4x3_rc4::IfcDerivedUnit::IfcDerivedUnit(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcDerivedUnit::IfcDerivedUnit(aggregate_of< ::Ifc4x3_rc4::IfcDerivedUnitElement >::ptr v1_Elements, ::Ifc4x3_rc4::IfcDerivedUnitEnum::Value v2_UnitType, boost::optional< std::string > v3_UserDefinedType) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_Elements)->generalize());set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcDerivedUnitEnum::Class(),(size_t)v2_UnitType))); if (v3_UserDefinedType) {set_attribute_value(2, (*v3_UserDefinedType)); }; populate_derived(); }

// Function implementations for IfcDerivedUnitElement
::Ifc4x3_rc4::IfcNamedUnit* Ifc4x3_rc4::IfcDerivedUnitElement::Unit() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcNamedUnit>(true); }
void Ifc4x3_rc4::IfcDerivedUnitElement::setUnit(::Ifc4x3_rc4::IfcNamedUnit* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
int Ifc4x3_rc4::IfcDerivedUnitElement::Exponent() const {  int v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcDerivedUnitElement::setExponent(int v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcDerivedUnitElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[302]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDerivedUnitElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[302]); }
Ifc4x3_rc4::IfcDerivedUnitElement::IfcDerivedUnitElement(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcDerivedUnitElement::IfcDerivedUnitElement(::Ifc4x3_rc4::IfcNamedUnit* v1_Unit, int v2_Exponent) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Unit ? v1_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Exponent));; populate_derived(); }

// Function implementations for IfcDimensionalExponents
int Ifc4x3_rc4::IfcDimensionalExponents::LengthExponent() const {  int v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcDimensionalExponents::setLengthExponent(int v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
int Ifc4x3_rc4::IfcDimensionalExponents::MassExponent() const {  int v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcDimensionalExponents::setMassExponent(int v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
int Ifc4x3_rc4::IfcDimensionalExponents::TimeExponent() const {  int v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcDimensionalExponents::setTimeExponent(int v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
int Ifc4x3_rc4::IfcDimensionalExponents::ElectricCurrentExponent() const {  int v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcDimensionalExponents::setElectricCurrentExponent(int v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
int Ifc4x3_rc4::IfcDimensionalExponents::ThermodynamicTemperatureExponent() const {  int v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcDimensionalExponents::setThermodynamicTemperatureExponent(int v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
int Ifc4x3_rc4::IfcDimensionalExponents::AmountOfSubstanceExponent() const {  int v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcDimensionalExponents::setAmountOfSubstanceExponent(int v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
int Ifc4x3_rc4::IfcDimensionalExponents::LuminousIntensityExponent() const {  int v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcDimensionalExponents::setLuminousIntensityExponent(int v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcDimensionalExponents::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[305]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDimensionalExponents::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[305]); }
Ifc4x3_rc4::IfcDimensionalExponents::IfcDimensionalExponents(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcDimensionalExponents::IfcDimensionalExponents(int v1_LengthExponent, int v2_MassExponent, int v3_TimeExponent, int v4_ElectricCurrentExponent, int v5_ThermodynamicTemperatureExponent, int v6_AmountOfSubstanceExponent, int v7_LuminousIntensityExponent) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_LengthExponent));set_attribute_value(1, (v2_MassExponent));set_attribute_value(2, (v3_TimeExponent));set_attribute_value(3, (v4_ElectricCurrentExponent));set_attribute_value(4, (v5_ThermodynamicTemperatureExponent));set_attribute_value(5, (v6_AmountOfSubstanceExponent));set_attribute_value(6, (v7_LuminousIntensityExponent));; populate_derived(); }

// Function implementations for IfcDirection
std::vector< double > /*[2:3]*/ Ifc4x3_rc4::IfcDirection::DirectionRatios() const {  std::vector< double > /*[2:3]*/ v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcDirection::setDirectionRatios(std::vector< double > /*[2:3]*/ v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcDirection::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[307]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDirection::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[307]); }
Ifc4x3_rc4::IfcDirection::IfcDirection(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcDirection::IfcDirection(std::vector< double > /*[2:3]*/ v1_DirectionRatios) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_DirectionRatios));; populate_derived(); }

// Function implementations for IfcDirectrixCurveSweptAreaSolid
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcDirectrixCurveSweptAreaSolid::Directrix() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcDirectrixCurveSweptAreaSolid::setDirectrix(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcCurveMeasureSelect* Ifc4x3_rc4::IfcDirectrixCurveSweptAreaSolid::StartParam() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcCurveMeasureSelect>(true); }
void Ifc4x3_rc4::IfcDirectrixCurveSweptAreaSolid::setStartParam(::Ifc4x3_rc4::IfcCurveMeasureSelect* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcCurveMeasureSelect* Ifc4x3_rc4::IfcDirectrixCurveSweptAreaSolid::EndParam() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcCurveMeasureSelect>(true); }
void Ifc4x3_rc4::IfcDirectrixCurveSweptAreaSolid::setEndParam(::Ifc4x3_rc4::IfcCurveMeasureSelect* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcDirectrixCurveSweptAreaSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[309]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDirectrixCurveSweptAreaSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[309]); }
Ifc4x3_rc4::IfcDirectrixCurveSweptAreaSolid::IfcDirectrixCurveSweptAreaSolid(IfcEntityInstanceData&& e) : IfcSweptAreaSolid(std::move(e)) { }
Ifc4x3_rc4::IfcDirectrixCurveSweptAreaSolid::IfcDirectrixCurveSweptAreaSolid(::Ifc4x3_rc4::IfcProfileDef* v1_SweptArea, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position, ::Ifc4x3_rc4::IfcCurve* v3_Directrix, ::Ifc4x3_rc4::IfcCurveMeasureSelect* v4_StartParam, ::Ifc4x3_rc4::IfcCurveMeasureSelect* v5_EndParam) : IfcSweptAreaSolid(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_SweptArea ? v1_SweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_Directrix ? v3_Directrix->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_StartParam ? v4_StartParam->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_EndParam ? v5_EndParam->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcDirectrixDerivedReferenceSweptAreaSolid


const IfcParse::entity& Ifc4x3_rc4::IfcDirectrixDerivedReferenceSweptAreaSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[310]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDirectrixDerivedReferenceSweptAreaSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[310]); }
Ifc4x3_rc4::IfcDirectrixDerivedReferenceSweptAreaSolid::IfcDirectrixDerivedReferenceSweptAreaSolid(IfcEntityInstanceData&& e) : IfcFixedReferenceSweptAreaSolid(std::move(e)) { }
Ifc4x3_rc4::IfcDirectrixDerivedReferenceSweptAreaSolid::IfcDirectrixDerivedReferenceSweptAreaSolid(::Ifc4x3_rc4::IfcProfileDef* v1_SweptArea, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position, ::Ifc4x3_rc4::IfcCurve* v3_Directrix, ::Ifc4x3_rc4::IfcCurveMeasureSelect* v4_StartParam, ::Ifc4x3_rc4::IfcCurveMeasureSelect* v5_EndParam, ::Ifc4x3_rc4::IfcDirection* v6_FixedReference) : IfcFixedReferenceSweptAreaSolid(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, v1_SweptArea ? v1_SweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_Directrix ? v3_Directrix->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_StartParam ? v4_StartParam->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_EndParam ? v5_EndParam->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_FixedReference ? v6_FixedReference->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcDiscreteAccessory
boost::optional< ::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Value > Ifc4x3_rc4::IfcDiscreteAccessory::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcDiscreteAccessory::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDiscreteAccessory::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[311]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDiscreteAccessory::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[311]); }
Ifc4x3_rc4::IfcDiscreteAccessory::IfcDiscreteAccessory(IfcEntityInstanceData&& e) : IfcElementComponent(std::move(e)) { }
Ifc4x3_rc4::IfcDiscreteAccessory::IfcDiscreteAccessory(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Value > v9_PredefinedType) : IfcElementComponent(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcDiscreteAccessoryType
::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Value Ifc4x3_rc4::IfcDiscreteAccessoryType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcDiscreteAccessoryType::setPredefinedType(::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcDiscreteAccessoryType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[312]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDiscreteAccessoryType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[312]); }
Ifc4x3_rc4::IfcDiscreteAccessoryType::IfcDiscreteAccessoryType(IfcEntityInstanceData&& e) : IfcElementComponentType(std::move(e)) { }
Ifc4x3_rc4::IfcDiscreteAccessoryType::IfcDiscreteAccessoryType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Value v10_PredefinedType) : IfcElementComponentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcDiscreteAccessoryTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcDistributionBoard
boost::optional< ::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Value > Ifc4x3_rc4::IfcDistributionBoard::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcDistributionBoard::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDistributionBoard::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[314]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionBoard::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[314]); }
Ifc4x3_rc4::IfcDistributionBoard::IfcDistributionBoard(IfcEntityInstanceData&& e) : IfcFlowController(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionBoard::IfcDistributionBoard(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Value > v9_PredefinedType) : IfcFlowController(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcDistributionBoardType
::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Value Ifc4x3_rc4::IfcDistributionBoardType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcDistributionBoardType::setPredefinedType(::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcDistributionBoardType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[315]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionBoardType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[315]); }
Ifc4x3_rc4::IfcDistributionBoardType::IfcDistributionBoardType(IfcEntityInstanceData&& e) : IfcFlowControllerType(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionBoardType::IfcDistributionBoardType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Value v10_PredefinedType) : IfcFlowControllerType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcDistributionBoardTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcDistributionChamberElement
boost::optional< ::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Value > Ifc4x3_rc4::IfcDistributionChamberElement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcDistributionChamberElement::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDistributionChamberElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[317]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionChamberElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[317]); }
Ifc4x3_rc4::IfcDistributionChamberElement::IfcDistributionChamberElement(IfcEntityInstanceData&& e) : IfcDistributionFlowElement(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionChamberElement::IfcDistributionChamberElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Value > v9_PredefinedType) : IfcDistributionFlowElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcDistributionChamberElementType
::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Value Ifc4x3_rc4::IfcDistributionChamberElementType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcDistributionChamberElementType::setPredefinedType(::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcDistributionChamberElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[318]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionChamberElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[318]); }
Ifc4x3_rc4::IfcDistributionChamberElementType::IfcDistributionChamberElementType(IfcEntityInstanceData&& e) : IfcDistributionFlowElementType(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionChamberElementType::IfcDistributionChamberElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Value v10_PredefinedType) : IfcDistributionFlowElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcDistributionChamberElementTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcDistributionCircuit


const IfcParse::entity& Ifc4x3_rc4::IfcDistributionCircuit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[320]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionCircuit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[320]); }
Ifc4x3_rc4::IfcDistributionCircuit::IfcDistributionCircuit(IfcEntityInstanceData&& e) : IfcDistributionSystem(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionCircuit::IfcDistributionCircuit(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_LongName, boost::optional< ::Ifc4x3_rc4::IfcDistributionSystemEnum::Value > v7_PredefinedType) : IfcDistributionSystem(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_LongName) {set_attribute_value(5, (*v6_LongName)); } if (v7_PredefinedType) {set_attribute_value(6, (EnumerationReference(&::Ifc4x3_rc4::IfcDistributionSystemEnum::Class(),(size_t)*v7_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcDistributionControlElement

::Ifc4x3_rc4::IfcRelFlowControlElements::list::ptr Ifc4x3_rc4::IfcDistributionControlElement::AssignedToFlowElement() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[942], 4)->as<IfcRelFlowControlElements>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcDistributionControlElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[321]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionControlElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[321]); }
Ifc4x3_rc4::IfcDistributionControlElement::IfcDistributionControlElement(IfcEntityInstanceData&& e) : IfcDistributionElement(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionControlElement::IfcDistributionControlElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcDistributionElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcDistributionControlElementType


const IfcParse::entity& Ifc4x3_rc4::IfcDistributionControlElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[322]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionControlElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[322]); }
Ifc4x3_rc4::IfcDistributionControlElementType::IfcDistributionControlElementType(IfcEntityInstanceData&& e) : IfcDistributionElementType(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionControlElementType::IfcDistributionControlElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcDistributionElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcDistributionElement

::Ifc4x3_rc4::IfcRelConnectsPortToElement::list::ptr Ifc4x3_rc4::IfcDistributionElement::HasPorts() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[926], 5)->as<IfcRelConnectsPortToElement>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcDistributionElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[323]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[323]); }
Ifc4x3_rc4::IfcDistributionElement::IfcDistributionElement(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionElement::IfcDistributionElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcDistributionElementType


const IfcParse::entity& Ifc4x3_rc4::IfcDistributionElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[324]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[324]); }
Ifc4x3_rc4::IfcDistributionElementType::IfcDistributionElementType(IfcEntityInstanceData&& e) : IfcElementType(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionElementType::IfcDistributionElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcDistributionFlowElement

::Ifc4x3_rc4::IfcRelFlowControlElements::list::ptr Ifc4x3_rc4::IfcDistributionFlowElement::HasControlElements() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[942], 5)->as<IfcRelFlowControlElements>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcDistributionFlowElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[325]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionFlowElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[325]); }
Ifc4x3_rc4::IfcDistributionFlowElement::IfcDistributionFlowElement(IfcEntityInstanceData&& e) : IfcDistributionElement(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionFlowElement::IfcDistributionFlowElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcDistributionElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcDistributionFlowElementType


const IfcParse::entity& Ifc4x3_rc4::IfcDistributionFlowElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[326]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionFlowElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[326]); }
Ifc4x3_rc4::IfcDistributionFlowElementType::IfcDistributionFlowElementType(IfcEntityInstanceData&& e) : IfcDistributionElementType(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionFlowElementType::IfcDistributionFlowElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcDistributionElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcDistributionPort
boost::optional< ::Ifc4x3_rc4::IfcFlowDirectionEnum::Value > Ifc4x3_rc4::IfcDistributionPort::FlowDirection() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcFlowDirectionEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcDistributionPort::setFlowDirection(boost::optional< ::Ifc4x3_rc4::IfcFlowDirectionEnum::Value > v) { if (v) {set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcFlowDirectionEnum::Class(), (size_t) *v));} else {unset_attribute_value(7);} }
boost::optional< ::Ifc4x3_rc4::IfcDistributionPortTypeEnum::Value > Ifc4x3_rc4::IfcDistributionPort::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDistributionPortTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcDistributionPort::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcDistributionPortTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcDistributionPortTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }
boost::optional< ::Ifc4x3_rc4::IfcDistributionSystemEnum::Value > Ifc4x3_rc4::IfcDistributionPort::SystemType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDistributionSystemEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcDistributionPort::setSystemType(boost::optional< ::Ifc4x3_rc4::IfcDistributionSystemEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcDistributionSystemEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDistributionPort::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[327]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionPort::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[327]); }
Ifc4x3_rc4::IfcDistributionPort::IfcDistributionPort(IfcEntityInstanceData&& e) : IfcPort(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionPort::IfcDistributionPort(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< ::Ifc4x3_rc4::IfcFlowDirectionEnum::Value > v8_FlowDirection, boost::optional< ::Ifc4x3_rc4::IfcDistributionPortTypeEnum::Value > v9_PredefinedType, boost::optional< ::Ifc4x3_rc4::IfcDistributionSystemEnum::Value > v10_SystemType) : IfcPort(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_FlowDirection) {set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcFlowDirectionEnum::Class(),(size_t)*v8_FlowDirection))); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcDistributionPortTypeEnum::Class(),(size_t)*v9_PredefinedType))); } if (v10_SystemType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcDistributionSystemEnum::Class(),(size_t)*v10_SystemType))); }; populate_derived(); }

// Function implementations for IfcDistributionSystem
boost::optional< std::string > Ifc4x3_rc4::IfcDistributionSystem::LongName() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcDistributionSystem::setLongName(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< ::Ifc4x3_rc4::IfcDistributionSystemEnum::Value > Ifc4x3_rc4::IfcDistributionSystem::PredefinedType() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDistributionSystemEnum::FromString(data_.get_attribute_value(6)); }
void Ifc4x3_rc4::IfcDistributionSystem::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcDistributionSystemEnum::Value > v) { if (v) {set_attribute_value(6, EnumerationReference(&::Ifc4x3_rc4::IfcDistributionSystemEnum::Class(), (size_t) *v));} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDistributionSystem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[329]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDistributionSystem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[329]); }
Ifc4x3_rc4::IfcDistributionSystem::IfcDistributionSystem(IfcEntityInstanceData&& e) : IfcSystem(std::move(e)) { }
Ifc4x3_rc4::IfcDistributionSystem::IfcDistributionSystem(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_LongName, boost::optional< ::Ifc4x3_rc4::IfcDistributionSystemEnum::Value > v7_PredefinedType) : IfcSystem(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_LongName) {set_attribute_value(5, (*v6_LongName)); } if (v7_PredefinedType) {set_attribute_value(6, (EnumerationReference(&::Ifc4x3_rc4::IfcDistributionSystemEnum::Class(),(size_t)*v7_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcDocumentInformation
std::string Ifc4x3_rc4::IfcDocumentInformation::Identification() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setIdentification(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
std::string Ifc4x3_rc4::IfcDocumentInformation::Name() const {  std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setName(std::string v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::Description() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::Location() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setLocation(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::Purpose() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setPurpose(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::IntendedUse() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setIntendedUse(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::Scope() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setScope(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::Revision() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setRevision(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
::Ifc4x3_rc4::IfcActorSelect* Ifc4x3_rc4::IfcDocumentInformation::DocumentOwner() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcActorSelect>(true); }
void Ifc4x3_rc4::IfcDocumentInformation::setDocumentOwner(::Ifc4x3_rc4::IfcActorSelect* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorSelect >::ptr > Ifc4x3_rc4::IfcDocumentInformation::Editors() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(9); return es->as< ::Ifc4x3_rc4::IfcActorSelect >(); }
void Ifc4x3_rc4::IfcDocumentInformation::setEditors(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorSelect >::ptr > v) { if (v) {set_attribute_value(9, (*v)->generalize());} else {unset_attribute_value(9);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::CreationTime() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setCreationTime(boost::optional< std::string > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::LastRevisionTime() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setLastRevisionTime(boost::optional< std::string > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::ElectronicFormat() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setElectronicFormat(boost::optional< std::string > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::ValidFrom() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(13); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setValidFrom(boost::optional< std::string > v) { if (v) {set_attribute_value(13, *v);} else {unset_attribute_value(13);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformation::ValidUntil() const { if(data_.get_attribute_value(14).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(14); return v; }
void Ifc4x3_rc4::IfcDocumentInformation::setValidUntil(boost::optional< std::string > v) { if (v) {set_attribute_value(14, *v);} else {unset_attribute_value(14);} }
boost::optional< ::Ifc4x3_rc4::IfcDocumentConfidentialityEnum::Value > Ifc4x3_rc4::IfcDocumentInformation::Confidentiality() const { if(data_.get_attribute_value(15).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDocumentConfidentialityEnum::FromString(data_.get_attribute_value(15)); }
void Ifc4x3_rc4::IfcDocumentInformation::setConfidentiality(boost::optional< ::Ifc4x3_rc4::IfcDocumentConfidentialityEnum::Value > v) { if (v) {set_attribute_value(15, EnumerationReference(&::Ifc4x3_rc4::IfcDocumentConfidentialityEnum::Class(), (size_t) *v));} else {unset_attribute_value(15);} }
boost::optional< ::Ifc4x3_rc4::IfcDocumentStatusEnum::Value > Ifc4x3_rc4::IfcDocumentInformation::Status() const { if(data_.get_attribute_value(16).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDocumentStatusEnum::FromString(data_.get_attribute_value(16)); }
void Ifc4x3_rc4::IfcDocumentInformation::setStatus(boost::optional< ::Ifc4x3_rc4::IfcDocumentStatusEnum::Value > v) { if (v) {set_attribute_value(16, EnumerationReference(&::Ifc4x3_rc4::IfcDocumentStatusEnum::Class(), (size_t) *v));} else {unset_attribute_value(16);} }

::Ifc4x3_rc4::IfcRelAssociatesDocument::list::ptr Ifc4x3_rc4::IfcDocumentInformation::DocumentInfoForObjects() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[917], 5)->as<IfcRelAssociatesDocument>(); }
::Ifc4x3_rc4::IfcDocumentReference::list::ptr Ifc4x3_rc4::IfcDocumentInformation::HasDocumentReferences() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[334], 4)->as<IfcDocumentReference>(); }
::Ifc4x3_rc4::IfcDocumentInformationRelationship::list::ptr Ifc4x3_rc4::IfcDocumentInformation::IsPointedTo() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[333], 3)->as<IfcDocumentInformationRelationship>(); }
::Ifc4x3_rc4::IfcDocumentInformationRelationship::list::ptr Ifc4x3_rc4::IfcDocumentInformation::IsPointer() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[333], 2)->as<IfcDocumentInformationRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcDocumentInformation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[332]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDocumentInformation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[332]); }
Ifc4x3_rc4::IfcDocumentInformation::IfcDocumentInformation(IfcEntityInstanceData&& e) : IfcExternalInformation(std::move(e)) { }
Ifc4x3_rc4::IfcDocumentInformation::IfcDocumentInformation(std::string v1_Identification, std::string v2_Name, boost::optional< std::string > v3_Description, boost::optional< std::string > v4_Location, boost::optional< std::string > v5_Purpose, boost::optional< std::string > v6_IntendedUse, boost::optional< std::string > v7_Scope, boost::optional< std::string > v8_Revision, ::Ifc4x3_rc4::IfcActorSelect* v9_DocumentOwner, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorSelect >::ptr > v10_Editors, boost::optional< std::string > v11_CreationTime, boost::optional< std::string > v12_LastRevisionTime, boost::optional< std::string > v13_ElectronicFormat, boost::optional< std::string > v14_ValidFrom, boost::optional< std::string > v15_ValidUntil, boost::optional< ::Ifc4x3_rc4::IfcDocumentConfidentialityEnum::Value > v16_Confidentiality, boost::optional< ::Ifc4x3_rc4::IfcDocumentStatusEnum::Value > v17_Status) : IfcExternalInformation(IfcEntityInstanceData(storage_t(17))) { set_attribute_value(0, (v1_Identification));set_attribute_value(1, (v2_Name)); if (v3_Description) {set_attribute_value(2, (*v3_Description)); } if (v4_Location) {set_attribute_value(3, (*v4_Location)); } if (v5_Purpose) {set_attribute_value(4, (*v5_Purpose)); } if (v6_IntendedUse) {set_attribute_value(5, (*v6_IntendedUse)); } if (v7_Scope) {set_attribute_value(6, (*v7_Scope)); } if (v8_Revision) {set_attribute_value(7, (*v8_Revision)); }set_attribute_value(8, v9_DocumentOwner ? v9_DocumentOwner->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v10_Editors) {set_attribute_value(9, (*v10_Editors)->generalize()); } if (v11_CreationTime) {set_attribute_value(10, (*v11_CreationTime)); } if (v12_LastRevisionTime) {set_attribute_value(11, (*v12_LastRevisionTime)); } if (v13_ElectronicFormat) {set_attribute_value(12, (*v13_ElectronicFormat)); } if (v14_ValidFrom) {set_attribute_value(13, (*v14_ValidFrom)); } if (v15_ValidUntil) {set_attribute_value(14, (*v15_ValidUntil)); } if (v16_Confidentiality) {set_attribute_value(15, (EnumerationReference(&::Ifc4x3_rc4::IfcDocumentConfidentialityEnum::Class(),(size_t)*v16_Confidentiality))); } if (v17_Status) {set_attribute_value(16, (EnumerationReference(&::Ifc4x3_rc4::IfcDocumentStatusEnum::Class(),(size_t)*v17_Status))); }; populate_derived(); }

// Function implementations for IfcDocumentInformationRelationship
::Ifc4x3_rc4::IfcDocumentInformation* Ifc4x3_rc4::IfcDocumentInformationRelationship::RelatingDocument() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcDocumentInformation>(true); }
void Ifc4x3_rc4::IfcDocumentInformationRelationship::setRelatingDocument(::Ifc4x3_rc4::IfcDocumentInformation* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
aggregate_of< ::Ifc4x3_rc4::IfcDocumentInformation >::ptr Ifc4x3_rc4::IfcDocumentInformationRelationship::RelatedDocuments() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcDocumentInformation >(); }
void Ifc4x3_rc4::IfcDocumentInformationRelationship::setRelatedDocuments(aggregate_of< ::Ifc4x3_rc4::IfcDocumentInformation >::ptr v) { set_attribute_value(3, (v)->generalize());if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentInformationRelationship::RelationshipType() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcDocumentInformationRelationship::setRelationshipType(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDocumentInformationRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[333]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDocumentInformationRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[333]); }
Ifc4x3_rc4::IfcDocumentInformationRelationship::IfcDocumentInformationRelationship(IfcEntityInstanceData&& e) : IfcResourceLevelRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcDocumentInformationRelationship::IfcDocumentInformationRelationship(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcDocumentInformation* v3_RelatingDocument, aggregate_of< ::Ifc4x3_rc4::IfcDocumentInformation >::ptr v4_RelatedDocuments, boost::optional< std::string > v5_RelationshipType) : IfcResourceLevelRelationship(IfcEntityInstanceData(storage_t(5))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_RelatingDocument ? v3_RelatingDocument->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_RelatedDocuments)->generalize()); if (v5_RelationshipType) {set_attribute_value(4, (*v5_RelationshipType)); }; populate_derived(); }

// Function implementations for IfcDocumentReference
boost::optional< std::string > Ifc4x3_rc4::IfcDocumentReference::Description() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcDocumentReference::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
::Ifc4x3_rc4::IfcDocumentInformation* Ifc4x3_rc4::IfcDocumentReference::ReferencedDocument() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcDocumentInformation>(true); }
void Ifc4x3_rc4::IfcDocumentReference::setReferencedDocument(::Ifc4x3_rc4::IfcDocumentInformation* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }

::Ifc4x3_rc4::IfcRelAssociatesDocument::list::ptr Ifc4x3_rc4::IfcDocumentReference::DocumentRefForObjects() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[917], 5)->as<IfcRelAssociatesDocument>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcDocumentReference::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[334]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDocumentReference::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[334]); }
Ifc4x3_rc4::IfcDocumentReference::IfcDocumentReference(IfcEntityInstanceData&& e) : IfcExternalReference(std::move(e)) { }
Ifc4x3_rc4::IfcDocumentReference::IfcDocumentReference(boost::optional< std::string > v1_Location, boost::optional< std::string > v2_Identification, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcDocumentInformation* v5_ReferencedDocument) : IfcExternalReference(IfcEntityInstanceData(storage_t(5))) {  if (v1_Location) {set_attribute_value(0, (*v1_Location)); } if (v2_Identification) {set_attribute_value(1, (*v2_Identification)); } if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_ReferencedDocument ? v5_ReferencedDocument->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcDoor
boost::optional< double > Ifc4x3_rc4::IfcDoor::OverallHeight() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcDoor::setOverallHeight(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< double > Ifc4x3_rc4::IfcDoor::OverallWidth() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcDoor::setOverallWidth(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< ::Ifc4x3_rc4::IfcDoorTypeEnum::Value > Ifc4x3_rc4::IfcDoor::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDoorTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcDoor::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcDoorTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcDoorTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }
boost::optional< ::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value > Ifc4x3_rc4::IfcDoor::OperationType() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDoorTypeOperationEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcDoor::setOperationType(boost::optional< ::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value > v) { if (v) {set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Class(), (size_t) *v));} else {unset_attribute_value(11);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDoor::UserDefinedOperationType() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcDoor::setUserDefinedOperationType(boost::optional< std::string > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDoor::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[337]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDoor::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[337]); }
Ifc4x3_rc4::IfcDoor::IfcDoor(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcDoor::IfcDoor(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< double > v9_OverallHeight, boost::optional< double > v10_OverallWidth, boost::optional< ::Ifc4x3_rc4::IfcDoorTypeEnum::Value > v11_PredefinedType, boost::optional< ::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value > v12_OperationType, boost::optional< std::string > v13_UserDefinedOperationType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_OverallHeight) {set_attribute_value(8, (*v9_OverallHeight)); } if (v10_OverallWidth) {set_attribute_value(9, (*v10_OverallWidth)); } if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcDoorTypeEnum::Class(),(size_t)*v11_PredefinedType))); } if (v12_OperationType) {set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Class(),(size_t)*v12_OperationType))); } if (v13_UserDefinedOperationType) {set_attribute_value(12, (*v13_UserDefinedOperationType)); }; populate_derived(); }

// Function implementations for IfcDoorLiningProperties
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::LiningDepth() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setLiningDepth(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::LiningThickness() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setLiningThickness(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::ThresholdDepth() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setThresholdDepth(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::ThresholdThickness() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setThresholdThickness(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::TransomThickness() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setTransomThickness(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::TransomOffset() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setTransomOffset(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::LiningOffset() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setLiningOffset(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::ThresholdOffset() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setThresholdOffset(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::CasingThickness() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } double v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setCasingThickness(boost::optional< double > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::CasingDepth() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } double v = data_.get_attribute_value(13); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setCasingDepth(boost::optional< double > v) { if (v) {set_attribute_value(13, *v);} else {unset_attribute_value(13);} }
::Ifc4x3_rc4::IfcShapeAspect* Ifc4x3_rc4::IfcDoorLiningProperties::ShapeAspectStyle() const { if(data_.get_attribute_value(14).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(14)))->as<::Ifc4x3_rc4::IfcShapeAspect>(true); }
void Ifc4x3_rc4::IfcDoorLiningProperties::setShapeAspectStyle(::Ifc4x3_rc4::IfcShapeAspect* v) { set_attribute_value(14, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(14); }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::LiningToPanelOffsetX() const { if(data_.get_attribute_value(15).isNull()) { return boost::none; } double v = data_.get_attribute_value(15); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setLiningToPanelOffsetX(boost::optional< double > v) { if (v) {set_attribute_value(15, *v);} else {unset_attribute_value(15);} }
boost::optional< double > Ifc4x3_rc4::IfcDoorLiningProperties::LiningToPanelOffsetY() const { if(data_.get_attribute_value(16).isNull()) { return boost::none; } double v = data_.get_attribute_value(16); return v; }
void Ifc4x3_rc4::IfcDoorLiningProperties::setLiningToPanelOffsetY(boost::optional< double > v) { if (v) {set_attribute_value(16, *v);} else {unset_attribute_value(16);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDoorLiningProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[338]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDoorLiningProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[338]); }
Ifc4x3_rc4::IfcDoorLiningProperties::IfcDoorLiningProperties(IfcEntityInstanceData&& e) : IfcPreDefinedPropertySet(std::move(e)) { }
Ifc4x3_rc4::IfcDoorLiningProperties::IfcDoorLiningProperties(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< double > v5_LiningDepth, boost::optional< double > v6_LiningThickness, boost::optional< double > v7_ThresholdDepth, boost::optional< double > v8_ThresholdThickness, boost::optional< double > v9_TransomThickness, boost::optional< double > v10_TransomOffset, boost::optional< double > v11_LiningOffset, boost::optional< double > v12_ThresholdOffset, boost::optional< double > v13_CasingThickness, boost::optional< double > v14_CasingDepth, ::Ifc4x3_rc4::IfcShapeAspect* v15_ShapeAspectStyle, boost::optional< double > v16_LiningToPanelOffsetX, boost::optional< double > v17_LiningToPanelOffsetY) : IfcPreDefinedPropertySet(IfcEntityInstanceData(storage_t(17))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_LiningDepth) {set_attribute_value(4, (*v5_LiningDepth)); } if (v6_LiningThickness) {set_attribute_value(5, (*v6_LiningThickness)); } if (v7_ThresholdDepth) {set_attribute_value(6, (*v7_ThresholdDepth)); } if (v8_ThresholdThickness) {set_attribute_value(7, (*v8_ThresholdThickness)); } if (v9_TransomThickness) {set_attribute_value(8, (*v9_TransomThickness)); } if (v10_TransomOffset) {set_attribute_value(9, (*v10_TransomOffset)); } if (v11_LiningOffset) {set_attribute_value(10, (*v11_LiningOffset)); } if (v12_ThresholdOffset) {set_attribute_value(11, (*v12_ThresholdOffset)); } if (v13_CasingThickness) {set_attribute_value(12, (*v13_CasingThickness)); } if (v14_CasingDepth) {set_attribute_value(13, (*v14_CasingDepth)); }set_attribute_value(14, v15_ShapeAspectStyle ? v15_ShapeAspectStyle->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v16_LiningToPanelOffsetX) {set_attribute_value(15, (*v16_LiningToPanelOffsetX)); } if (v17_LiningToPanelOffsetY) {set_attribute_value(16, (*v17_LiningToPanelOffsetY)); }; populate_derived(); }

// Function implementations for IfcDoorPanelProperties
boost::optional< double > Ifc4x3_rc4::IfcDoorPanelProperties::PanelDepth() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcDoorPanelProperties::setPanelDepth(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
::Ifc4x3_rc4::IfcDoorPanelOperationEnum::Value Ifc4x3_rc4::IfcDoorPanelProperties::PanelOperation() const {  return ::Ifc4x3_rc4::IfcDoorPanelOperationEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcDoorPanelProperties::setPanelOperation(::Ifc4x3_rc4::IfcDoorPanelOperationEnum::Value v) { set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcDoorPanelOperationEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(5); }
boost::optional< double > Ifc4x3_rc4::IfcDoorPanelProperties::PanelWidth() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcDoorPanelProperties::setPanelWidth(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
::Ifc4x3_rc4::IfcDoorPanelPositionEnum::Value Ifc4x3_rc4::IfcDoorPanelProperties::PanelPosition() const {  return ::Ifc4x3_rc4::IfcDoorPanelPositionEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcDoorPanelProperties::setPanelPosition(::Ifc4x3_rc4::IfcDoorPanelPositionEnum::Value v) { set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcDoorPanelPositionEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(7); }
::Ifc4x3_rc4::IfcShapeAspect* Ifc4x3_rc4::IfcDoorPanelProperties::ShapeAspectStyle() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcShapeAspect>(true); }
void Ifc4x3_rc4::IfcDoorPanelProperties::setShapeAspectStyle(::Ifc4x3_rc4::IfcShapeAspect* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcDoorPanelProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[341]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDoorPanelProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[341]); }
Ifc4x3_rc4::IfcDoorPanelProperties::IfcDoorPanelProperties(IfcEntityInstanceData&& e) : IfcPreDefinedPropertySet(std::move(e)) { }
Ifc4x3_rc4::IfcDoorPanelProperties::IfcDoorPanelProperties(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< double > v5_PanelDepth, ::Ifc4x3_rc4::IfcDoorPanelOperationEnum::Value v6_PanelOperation, boost::optional< double > v7_PanelWidth, ::Ifc4x3_rc4::IfcDoorPanelPositionEnum::Value v8_PanelPosition, ::Ifc4x3_rc4::IfcShapeAspect* v9_ShapeAspectStyle) : IfcPreDefinedPropertySet(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_PanelDepth) {set_attribute_value(4, (*v5_PanelDepth)); }set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcDoorPanelOperationEnum::Class(),(size_t)v6_PanelOperation))); if (v7_PanelWidth) {set_attribute_value(6, (*v7_PanelWidth)); }set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcDoorPanelPositionEnum::Class(),(size_t)v8_PanelPosition)));set_attribute_value(8, v9_ShapeAspectStyle ? v9_ShapeAspectStyle->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcDoorStandardCase


const IfcParse::entity& Ifc4x3_rc4::IfcDoorStandardCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[342]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDoorStandardCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[342]); }
Ifc4x3_rc4::IfcDoorStandardCase::IfcDoorStandardCase(IfcEntityInstanceData&& e) : IfcDoor(std::move(e)) { }
Ifc4x3_rc4::IfcDoorStandardCase::IfcDoorStandardCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< double > v9_OverallHeight, boost::optional< double > v10_OverallWidth, boost::optional< ::Ifc4x3_rc4::IfcDoorTypeEnum::Value > v11_PredefinedType, boost::optional< ::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value > v12_OperationType, boost::optional< std::string > v13_UserDefinedOperationType) : IfcDoor(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_OverallHeight) {set_attribute_value(8, (*v9_OverallHeight)); } if (v10_OverallWidth) {set_attribute_value(9, (*v10_OverallWidth)); } if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcDoorTypeEnum::Class(),(size_t)*v11_PredefinedType))); } if (v12_OperationType) {set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Class(),(size_t)*v12_OperationType))); } if (v13_UserDefinedOperationType) {set_attribute_value(12, (*v13_UserDefinedOperationType)); }; populate_derived(); }

// Function implementations for IfcDoorStyle
::Ifc4x3_rc4::IfcDoorStyleOperationEnum::Value Ifc4x3_rc4::IfcDoorStyle::OperationType() const {  return ::Ifc4x3_rc4::IfcDoorStyleOperationEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcDoorStyle::setOperationType(::Ifc4x3_rc4::IfcDoorStyleOperationEnum::Value v) { set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcDoorStyleOperationEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(8); }
::Ifc4x3_rc4::IfcDoorStyleConstructionEnum::Value Ifc4x3_rc4::IfcDoorStyle::ConstructionType() const {  return ::Ifc4x3_rc4::IfcDoorStyleConstructionEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcDoorStyle::setConstructionType(::Ifc4x3_rc4::IfcDoorStyleConstructionEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcDoorStyleConstructionEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
bool Ifc4x3_rc4::IfcDoorStyle::ParameterTakesPrecedence() const {  bool v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcDoorStyle::setParameterTakesPrecedence(bool v) { set_attribute_value(10, v);if constexpr (false)unset_attribute_value(10); }
bool Ifc4x3_rc4::IfcDoorStyle::Sizeable() const {  bool v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcDoorStyle::setSizeable(bool v) { set_attribute_value(11, v);if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcDoorStyle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[343]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDoorStyle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[343]); }
Ifc4x3_rc4::IfcDoorStyle::IfcDoorStyle(IfcEntityInstanceData&& e) : IfcTypeProduct(std::move(e)) { }
Ifc4x3_rc4::IfcDoorStyle::IfcDoorStyle(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, ::Ifc4x3_rc4::IfcDoorStyleOperationEnum::Value v9_OperationType, ::Ifc4x3_rc4::IfcDoorStyleConstructionEnum::Value v10_ConstructionType, bool v11_ParameterTakesPrecedence, bool v12_Sizeable) : IfcTypeProduct(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcDoorStyleOperationEnum::Class(),(size_t)v9_OperationType)));set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcDoorStyleConstructionEnum::Class(),(size_t)v10_ConstructionType)));set_attribute_value(10, (v11_ParameterTakesPrecedence));set_attribute_value(11, (v12_Sizeable));; populate_derived(); }

// Function implementations for IfcDoorType
::Ifc4x3_rc4::IfcDoorTypeEnum::Value Ifc4x3_rc4::IfcDoorType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcDoorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcDoorType::setPredefinedType(::Ifc4x3_rc4::IfcDoorTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcDoorTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value Ifc4x3_rc4::IfcDoorType::OperationType() const {  return ::Ifc4x3_rc4::IfcDoorTypeOperationEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcDoorType::setOperationType(::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value v) { set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(10); }
boost::optional< bool > Ifc4x3_rc4::IfcDoorType::ParameterTakesPrecedence() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } bool v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcDoorType::setParameterTakesPrecedence(boost::optional< bool > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< std::string > Ifc4x3_rc4::IfcDoorType::UserDefinedOperationType() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcDoorType::setUserDefinedOperationType(boost::optional< std::string > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDoorType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[346]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDoorType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[346]); }
Ifc4x3_rc4::IfcDoorType::IfcDoorType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcDoorType::IfcDoorType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcDoorTypeEnum::Value v10_PredefinedType, ::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Value v11_OperationType, boost::optional< bool > v12_ParameterTakesPrecedence, boost::optional< std::string > v13_UserDefinedOperationType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcDoorTypeEnum::Class(),(size_t)v10_PredefinedType)));set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcDoorTypeOperationEnum::Class(),(size_t)v11_OperationType))); if (v12_ParameterTakesPrecedence) {set_attribute_value(11, (*v12_ParameterTakesPrecedence)); } if (v13_UserDefinedOperationType) {set_attribute_value(12, (*v13_UserDefinedOperationType)); }; populate_derived(); }

// Function implementations for IfcDraughtingPreDefinedColour


const IfcParse::entity& Ifc4x3_rc4::IfcDraughtingPreDefinedColour::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[350]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDraughtingPreDefinedColour::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[350]); }
Ifc4x3_rc4::IfcDraughtingPreDefinedColour::IfcDraughtingPreDefinedColour(IfcEntityInstanceData&& e) : IfcPreDefinedColour(std::move(e)) { }
Ifc4x3_rc4::IfcDraughtingPreDefinedColour::IfcDraughtingPreDefinedColour(std::string v1_Name) : IfcPreDefinedColour(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Name));; populate_derived(); }

// Function implementations for IfcDraughtingPreDefinedCurveFont


const IfcParse::entity& Ifc4x3_rc4::IfcDraughtingPreDefinedCurveFont::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[351]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDraughtingPreDefinedCurveFont::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[351]); }
Ifc4x3_rc4::IfcDraughtingPreDefinedCurveFont::IfcDraughtingPreDefinedCurveFont(IfcEntityInstanceData&& e) : IfcPreDefinedCurveFont(std::move(e)) { }
Ifc4x3_rc4::IfcDraughtingPreDefinedCurveFont::IfcDraughtingPreDefinedCurveFont(std::string v1_Name) : IfcPreDefinedCurveFont(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Name));; populate_derived(); }

// Function implementations for IfcDuctFitting
boost::optional< ::Ifc4x3_rc4::IfcDuctFittingTypeEnum::Value > Ifc4x3_rc4::IfcDuctFitting::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDuctFittingTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcDuctFitting::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcDuctFittingTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcDuctFittingTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDuctFitting::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[352]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDuctFitting::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[352]); }
Ifc4x3_rc4::IfcDuctFitting::IfcDuctFitting(IfcEntityInstanceData&& e) : IfcFlowFitting(std::move(e)) { }
Ifc4x3_rc4::IfcDuctFitting::IfcDuctFitting(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcDuctFittingTypeEnum::Value > v9_PredefinedType) : IfcFlowFitting(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcDuctFittingTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcDuctFittingType
::Ifc4x3_rc4::IfcDuctFittingTypeEnum::Value Ifc4x3_rc4::IfcDuctFittingType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcDuctFittingTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcDuctFittingType::setPredefinedType(::Ifc4x3_rc4::IfcDuctFittingTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcDuctFittingTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcDuctFittingType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[353]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDuctFittingType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[353]); }
Ifc4x3_rc4::IfcDuctFittingType::IfcDuctFittingType(IfcEntityInstanceData&& e) : IfcFlowFittingType(std::move(e)) { }
Ifc4x3_rc4::IfcDuctFittingType::IfcDuctFittingType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcDuctFittingTypeEnum::Value v10_PredefinedType) : IfcFlowFittingType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcDuctFittingTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcDuctSegment
boost::optional< ::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Value > Ifc4x3_rc4::IfcDuctSegment::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcDuctSegment::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDuctSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[355]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDuctSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[355]); }
Ifc4x3_rc4::IfcDuctSegment::IfcDuctSegment(IfcEntityInstanceData&& e) : IfcFlowSegment(std::move(e)) { }
Ifc4x3_rc4::IfcDuctSegment::IfcDuctSegment(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Value > v9_PredefinedType) : IfcFlowSegment(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcDuctSegmentType
::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Value Ifc4x3_rc4::IfcDuctSegmentType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcDuctSegmentType::setPredefinedType(::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcDuctSegmentType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[356]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDuctSegmentType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[356]); }
Ifc4x3_rc4::IfcDuctSegmentType::IfcDuctSegmentType(IfcEntityInstanceData&& e) : IfcFlowSegmentType(std::move(e)) { }
Ifc4x3_rc4::IfcDuctSegmentType::IfcDuctSegmentType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Value v10_PredefinedType) : IfcFlowSegmentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcDuctSegmentTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcDuctSilencer
boost::optional< ::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Value > Ifc4x3_rc4::IfcDuctSilencer::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcDuctSilencer::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcDuctSilencer::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[358]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDuctSilencer::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[358]); }
Ifc4x3_rc4::IfcDuctSilencer::IfcDuctSilencer(IfcEntityInstanceData&& e) : IfcFlowTreatmentDevice(std::move(e)) { }
Ifc4x3_rc4::IfcDuctSilencer::IfcDuctSilencer(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Value > v9_PredefinedType) : IfcFlowTreatmentDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcDuctSilencerType
::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Value Ifc4x3_rc4::IfcDuctSilencerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcDuctSilencerType::setPredefinedType(::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcDuctSilencerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[359]); }
const IfcParse::entity& Ifc4x3_rc4::IfcDuctSilencerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[359]); }
Ifc4x3_rc4::IfcDuctSilencerType::IfcDuctSilencerType(IfcEntityInstanceData&& e) : IfcFlowTreatmentDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcDuctSilencerType::IfcDuctSilencerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Value v10_PredefinedType) : IfcFlowTreatmentDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcDuctSilencerTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcEarthworksCut
boost::optional< ::Ifc4x3_rc4::IfcEarthworksCutTypeEnum::Value > Ifc4x3_rc4::IfcEarthworksCut::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcEarthworksCutTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcEarthworksCut::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcEarthworksCutTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcEarthworksCutTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcEarthworksCut::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[363]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEarthworksCut::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[363]); }
Ifc4x3_rc4::IfcEarthworksCut::IfcEarthworksCut(IfcEntityInstanceData&& e) : IfcFeatureElementSubtraction(std::move(e)) { }
Ifc4x3_rc4::IfcEarthworksCut::IfcEarthworksCut(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcEarthworksCutTypeEnum::Value > v9_PredefinedType) : IfcFeatureElementSubtraction(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcEarthworksCutTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcEarthworksElement


const IfcParse::entity& Ifc4x3_rc4::IfcEarthworksElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[365]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEarthworksElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[365]); }
Ifc4x3_rc4::IfcEarthworksElement::IfcEarthworksElement(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcEarthworksElement::IfcEarthworksElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcBuiltElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcEarthworksFill
boost::optional< ::Ifc4x3_rc4::IfcEarthworksFillTypeEnum::Value > Ifc4x3_rc4::IfcEarthworksFill::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcEarthworksFillTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcEarthworksFill::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcEarthworksFillTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcEarthworksFillTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcEarthworksFill::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[366]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEarthworksFill::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[366]); }
Ifc4x3_rc4::IfcEarthworksFill::IfcEarthworksFill(IfcEntityInstanceData&& e) : IfcEarthworksElement(std::move(e)) { }
Ifc4x3_rc4::IfcEarthworksFill::IfcEarthworksFill(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcEarthworksFillTypeEnum::Value > v9_PredefinedType) : IfcEarthworksElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcEarthworksFillTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcEdge
::Ifc4x3_rc4::IfcVertex* Ifc4x3_rc4::IfcEdge::EdgeStart() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcVertex>(true); }
void Ifc4x3_rc4::IfcEdge::setEdgeStart(::Ifc4x3_rc4::IfcVertex* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcVertex* Ifc4x3_rc4::IfcEdge::EdgeEnd() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcVertex>(true); }
void Ifc4x3_rc4::IfcEdge::setEdgeEnd(::Ifc4x3_rc4::IfcVertex* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcEdge::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[368]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEdge::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[368]); }
Ifc4x3_rc4::IfcEdge::IfcEdge(IfcEntityInstanceData&& e) : IfcTopologicalRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcEdge::IfcEdge(::Ifc4x3_rc4::IfcVertex* v1_EdgeStart, ::Ifc4x3_rc4::IfcVertex* v2_EdgeEnd) : IfcTopologicalRepresentationItem(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_EdgeStart ? v1_EdgeStart->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_EdgeEnd ? v2_EdgeEnd->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcEdgeCurve
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcEdgeCurve::EdgeGeometry() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcEdgeCurve::setEdgeGeometry(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
bool Ifc4x3_rc4::IfcEdgeCurve::SameSense() const {  bool v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcEdgeCurve::setSameSense(bool v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcEdgeCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[369]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEdgeCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[369]); }
Ifc4x3_rc4::IfcEdgeCurve::IfcEdgeCurve(IfcEntityInstanceData&& e) : IfcEdge(std::move(e)) { }
Ifc4x3_rc4::IfcEdgeCurve::IfcEdgeCurve(::Ifc4x3_rc4::IfcVertex* v1_EdgeStart, ::Ifc4x3_rc4::IfcVertex* v2_EdgeEnd, ::Ifc4x3_rc4::IfcCurve* v3_EdgeGeometry, bool v4_SameSense) : IfcEdge(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_EdgeStart ? v1_EdgeStart->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_EdgeEnd ? v2_EdgeEnd->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_EdgeGeometry ? v3_EdgeGeometry->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_SameSense));; populate_derived(); }

// Function implementations for IfcEdgeLoop
aggregate_of< ::Ifc4x3_rc4::IfcOrientedEdge >::ptr Ifc4x3_rc4::IfcEdgeLoop::EdgeList() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcOrientedEdge >(); }
void Ifc4x3_rc4::IfcEdgeLoop::setEdgeList(aggregate_of< ::Ifc4x3_rc4::IfcOrientedEdge >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcEdgeLoop::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[370]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEdgeLoop::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[370]); }
Ifc4x3_rc4::IfcEdgeLoop::IfcEdgeLoop(IfcEntityInstanceData&& e) : IfcLoop(std::move(e)) { }
Ifc4x3_rc4::IfcEdgeLoop::IfcEdgeLoop(aggregate_of< ::Ifc4x3_rc4::IfcOrientedEdge >::ptr v1_EdgeList) : IfcLoop(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_EdgeList)->generalize());; populate_derived(); }

// Function implementations for IfcElectricAppliance
boost::optional< ::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Value > Ifc4x3_rc4::IfcElectricAppliance::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcElectricAppliance::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricAppliance::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[371]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricAppliance::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[371]); }
Ifc4x3_rc4::IfcElectricAppliance::IfcElectricAppliance(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcElectricAppliance::IfcElectricAppliance(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcElectricApplianceType
::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Value Ifc4x3_rc4::IfcElectricApplianceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcElectricApplianceType::setPredefinedType(::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricApplianceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[372]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricApplianceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[372]); }
Ifc4x3_rc4::IfcElectricApplianceType::IfcElectricApplianceType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcElectricApplianceType::IfcElectricApplianceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricApplianceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcElectricDistributionBoard
boost::optional< ::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Value > Ifc4x3_rc4::IfcElectricDistributionBoard::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcElectricDistributionBoard::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricDistributionBoard::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[378]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricDistributionBoard::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[378]); }
Ifc4x3_rc4::IfcElectricDistributionBoard::IfcElectricDistributionBoard(IfcEntityInstanceData&& e) : IfcFlowController(std::move(e)) { }
Ifc4x3_rc4::IfcElectricDistributionBoard::IfcElectricDistributionBoard(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Value > v9_PredefinedType) : IfcFlowController(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcElectricDistributionBoardType
::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Value Ifc4x3_rc4::IfcElectricDistributionBoardType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcElectricDistributionBoardType::setPredefinedType(::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricDistributionBoardType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[379]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricDistributionBoardType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[379]); }
Ifc4x3_rc4::IfcElectricDistributionBoardType::IfcElectricDistributionBoardType(IfcEntityInstanceData&& e) : IfcFlowControllerType(std::move(e)) { }
Ifc4x3_rc4::IfcElectricDistributionBoardType::IfcElectricDistributionBoardType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Value v10_PredefinedType) : IfcFlowControllerType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricDistributionBoardTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcElectricFlowStorageDevice
boost::optional< ::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Value > Ifc4x3_rc4::IfcElectricFlowStorageDevice::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcElectricFlowStorageDevice::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricFlowStorageDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[381]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricFlowStorageDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[381]); }
Ifc4x3_rc4::IfcElectricFlowStorageDevice::IfcElectricFlowStorageDevice(IfcEntityInstanceData&& e) : IfcFlowStorageDevice(std::move(e)) { }
Ifc4x3_rc4::IfcElectricFlowStorageDevice::IfcElectricFlowStorageDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Value > v9_PredefinedType) : IfcFlowStorageDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcElectricFlowStorageDeviceType
::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Value Ifc4x3_rc4::IfcElectricFlowStorageDeviceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcElectricFlowStorageDeviceType::setPredefinedType(::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricFlowStorageDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[382]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricFlowStorageDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[382]); }
Ifc4x3_rc4::IfcElectricFlowStorageDeviceType::IfcElectricFlowStorageDeviceType(IfcEntityInstanceData&& e) : IfcFlowStorageDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcElectricFlowStorageDeviceType::IfcElectricFlowStorageDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Value v10_PredefinedType) : IfcFlowStorageDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricFlowStorageDeviceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcElectricFlowTreatmentDevice
boost::optional< ::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Value > Ifc4x3_rc4::IfcElectricFlowTreatmentDevice::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcElectricFlowTreatmentDevice::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricFlowTreatmentDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[384]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricFlowTreatmentDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[384]); }
Ifc4x3_rc4::IfcElectricFlowTreatmentDevice::IfcElectricFlowTreatmentDevice(IfcEntityInstanceData&& e) : IfcFlowTreatmentDevice(std::move(e)) { }
Ifc4x3_rc4::IfcElectricFlowTreatmentDevice::IfcElectricFlowTreatmentDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Value > v9_PredefinedType) : IfcFlowTreatmentDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcElectricFlowTreatmentDeviceType
::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Value Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceType::setPredefinedType(::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[385]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[385]); }
Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceType::IfcElectricFlowTreatmentDeviceType(IfcEntityInstanceData&& e) : IfcFlowTreatmentDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceType::IfcElectricFlowTreatmentDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Value v10_PredefinedType) : IfcFlowTreatmentDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricFlowTreatmentDeviceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcElectricGenerator
boost::optional< ::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Value > Ifc4x3_rc4::IfcElectricGenerator::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcElectricGenerator::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricGenerator::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[387]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricGenerator::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[387]); }
Ifc4x3_rc4::IfcElectricGenerator::IfcElectricGenerator(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcElectricGenerator::IfcElectricGenerator(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcElectricGeneratorType
::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Value Ifc4x3_rc4::IfcElectricGeneratorType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcElectricGeneratorType::setPredefinedType(::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricGeneratorType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[388]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricGeneratorType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[388]); }
Ifc4x3_rc4::IfcElectricGeneratorType::IfcElectricGeneratorType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcElectricGeneratorType::IfcElectricGeneratorType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricGeneratorTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcElectricMotor
boost::optional< ::Ifc4x3_rc4::IfcElectricMotorTypeEnum::Value > Ifc4x3_rc4::IfcElectricMotor::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcElectricMotorTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcElectricMotor::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcElectricMotorTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcElectricMotorTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricMotor::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[390]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricMotor::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[390]); }
Ifc4x3_rc4::IfcElectricMotor::IfcElectricMotor(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcElectricMotor::IfcElectricMotor(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcElectricMotorTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricMotorTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcElectricMotorType
::Ifc4x3_rc4::IfcElectricMotorTypeEnum::Value Ifc4x3_rc4::IfcElectricMotorType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcElectricMotorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcElectricMotorType::setPredefinedType(::Ifc4x3_rc4::IfcElectricMotorTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcElectricMotorTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricMotorType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[391]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricMotorType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[391]); }
Ifc4x3_rc4::IfcElectricMotorType::IfcElectricMotorType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcElectricMotorType::IfcElectricMotorType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcElectricMotorTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricMotorTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcElectricTimeControl
boost::optional< ::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Value > Ifc4x3_rc4::IfcElectricTimeControl::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcElectricTimeControl::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricTimeControl::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[394]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricTimeControl::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[394]); }
Ifc4x3_rc4::IfcElectricTimeControl::IfcElectricTimeControl(IfcEntityInstanceData&& e) : IfcFlowController(std::move(e)) { }
Ifc4x3_rc4::IfcElectricTimeControl::IfcElectricTimeControl(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Value > v9_PredefinedType) : IfcFlowController(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcElectricTimeControlType
::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Value Ifc4x3_rc4::IfcElectricTimeControlType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcElectricTimeControlType::setPredefinedType(::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcElectricTimeControlType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[395]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElectricTimeControlType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[395]); }
Ifc4x3_rc4::IfcElectricTimeControlType::IfcElectricTimeControlType(IfcEntityInstanceData&& e) : IfcFlowControllerType(std::move(e)) { }
Ifc4x3_rc4::IfcElectricTimeControlType::IfcElectricTimeControlType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Value v10_PredefinedType) : IfcFlowControllerType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcElectricTimeControlTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcElement
boost::optional< std::string > Ifc4x3_rc4::IfcElement::Tag() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcElement::setTag(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }

::Ifc4x3_rc4::IfcRelFillsElement::list::ptr Ifc4x3_rc4::IfcElement::FillsVoids() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[941], 5)->as<IfcRelFillsElement>(); }
::Ifc4x3_rc4::IfcRelConnectsElements::list::ptr Ifc4x3_rc4::IfcElement::ConnectedTo() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[923], 5)->as<IfcRelConnectsElements>(); }
::Ifc4x3_rc4::IfcRelInterferesElements::list::ptr Ifc4x3_rc4::IfcElement::IsInterferedByElements() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[943], 5)->as<IfcRelInterferesElements>(); }
::Ifc4x3_rc4::IfcRelInterferesElements::list::ptr Ifc4x3_rc4::IfcElement::InterferesElements() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[943], 4)->as<IfcRelInterferesElements>(); }
::Ifc4x3_rc4::IfcRelProjectsElement::list::ptr Ifc4x3_rc4::IfcElement::HasProjections() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[946], 4)->as<IfcRelProjectsElement>(); }
::Ifc4x3_rc4::IfcRelVoidsElement::list::ptr Ifc4x3_rc4::IfcElement::HasOpenings() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[953], 4)->as<IfcRelVoidsElement>(); }
::Ifc4x3_rc4::IfcRelConnectsWithRealizingElements::list::ptr Ifc4x3_rc4::IfcElement::IsConnectionRealization() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[930], 7)->as<IfcRelConnectsWithRealizingElements>(); }
::Ifc4x3_rc4::IfcRelSpaceBoundary::list::ptr Ifc4x3_rc4::IfcElement::ProvidesBoundaries() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[950], 5)->as<IfcRelSpaceBoundary>(); }
::Ifc4x3_rc4::IfcRelConnectsElements::list::ptr Ifc4x3_rc4::IfcElement::ConnectedFrom() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[923], 6)->as<IfcRelConnectsElements>(); }
::Ifc4x3_rc4::IfcRelContainedInSpatialStructure::list::ptr Ifc4x3_rc4::IfcElement::ContainedInStructure() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[931], 4)->as<IfcRelContainedInSpatialStructure>(); }
::Ifc4x3_rc4::IfcRelCoversBldgElements::list::ptr Ifc4x3_rc4::IfcElement::HasCoverings() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[932], 4)->as<IfcRelCoversBldgElements>(); }
::Ifc4x3_rc4::IfcRelAdheresToElement::list::ptr Ifc4x3_rc4::IfcElement::HasSurfaceFeatures() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[903], 4)->as<IfcRelAdheresToElement>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[398]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[398]); }
Ifc4x3_rc4::IfcElement::IfcElement(IfcEntityInstanceData&& e) : IfcProduct(std::move(e)) { }
Ifc4x3_rc4::IfcElement::IfcElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcProduct(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcElementAssembly
boost::optional< ::Ifc4x3_rc4::IfcAssemblyPlaceEnum::Value > Ifc4x3_rc4::IfcElementAssembly::AssemblyPlace() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcAssemblyPlaceEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcElementAssembly::setAssemblyPlace(boost::optional< ::Ifc4x3_rc4::IfcAssemblyPlaceEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcAssemblyPlaceEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }
boost::optional< ::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Value > Ifc4x3_rc4::IfcElementAssembly::PredefinedType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcElementAssembly::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcElementAssembly::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[400]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElementAssembly::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[400]); }
Ifc4x3_rc4::IfcElementAssembly::IfcElementAssembly(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcElementAssembly::IfcElementAssembly(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcAssemblyPlaceEnum::Value > v9_AssemblyPlace, boost::optional< ::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Value > v10_PredefinedType) : IfcElement(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_AssemblyPlace) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcAssemblyPlaceEnum::Class(),(size_t)*v9_AssemblyPlace))); } if (v10_PredefinedType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Class(),(size_t)*v10_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcElementAssemblyType
::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Value Ifc4x3_rc4::IfcElementAssemblyType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcElementAssemblyType::setPredefinedType(::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcElementAssemblyType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[401]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElementAssemblyType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[401]); }
Ifc4x3_rc4::IfcElementAssemblyType::IfcElementAssemblyType(IfcEntityInstanceData&& e) : IfcElementType(std::move(e)) { }
Ifc4x3_rc4::IfcElementAssemblyType::IfcElementAssemblyType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Value v10_PredefinedType) : IfcElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcElementAssemblyTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcElementComponent


const IfcParse::entity& Ifc4x3_rc4::IfcElementComponent::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[403]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElementComponent::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[403]); }
Ifc4x3_rc4::IfcElementComponent::IfcElementComponent(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcElementComponent::IfcElementComponent(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcElementComponentType


const IfcParse::entity& Ifc4x3_rc4::IfcElementComponentType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[404]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElementComponentType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[404]); }
Ifc4x3_rc4::IfcElementComponentType::IfcElementComponentType(IfcEntityInstanceData&& e) : IfcElementType(std::move(e)) { }
Ifc4x3_rc4::IfcElementComponentType::IfcElementComponentType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcElementQuantity
boost::optional< std::string > Ifc4x3_rc4::IfcElementQuantity::MethodOfMeasurement() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcElementQuantity::setMethodOfMeasurement(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
aggregate_of< ::Ifc4x3_rc4::IfcPhysicalQuantity >::ptr Ifc4x3_rc4::IfcElementQuantity::Quantities() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcPhysicalQuantity >(); }
void Ifc4x3_rc4::IfcElementQuantity::setQuantities(aggregate_of< ::Ifc4x3_rc4::IfcPhysicalQuantity >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcElementQuantity::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[406]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElementQuantity::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[406]); }
Ifc4x3_rc4::IfcElementQuantity::IfcElementQuantity(IfcEntityInstanceData&& e) : IfcQuantitySet(std::move(e)) { }
Ifc4x3_rc4::IfcElementQuantity::IfcElementQuantity(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_MethodOfMeasurement, aggregate_of< ::Ifc4x3_rc4::IfcPhysicalQuantity >::ptr v6_Quantities) : IfcQuantitySet(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_MethodOfMeasurement) {set_attribute_value(4, (*v5_MethodOfMeasurement)); }set_attribute_value(5, (v6_Quantities)->generalize());; populate_derived(); }

// Function implementations for IfcElementType
boost::optional< std::string > Ifc4x3_rc4::IfcElementType::ElementType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcElementType::setElementType(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[407]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[407]); }
Ifc4x3_rc4::IfcElementType::IfcElementType(IfcEntityInstanceData&& e) : IfcTypeProduct(std::move(e)) { }
Ifc4x3_rc4::IfcElementType::IfcElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcTypeProduct(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcElementarySurface
::Ifc4x3_rc4::IfcAxis2Placement3D* Ifc4x3_rc4::IfcElementarySurface::Position() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcAxis2Placement3D>(true); }
void Ifc4x3_rc4::IfcElementarySurface::setPosition(::Ifc4x3_rc4::IfcAxis2Placement3D* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcElementarySurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[399]); }
const IfcParse::entity& Ifc4x3_rc4::IfcElementarySurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[399]); }
Ifc4x3_rc4::IfcElementarySurface::IfcElementarySurface(IfcEntityInstanceData&& e) : IfcSurface(std::move(e)) { }
Ifc4x3_rc4::IfcElementarySurface::IfcElementarySurface(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position) : IfcSurface(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcEllipse
double Ifc4x3_rc4::IfcEllipse::SemiAxis1() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcEllipse::setSemiAxis1(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcEllipse::SemiAxis2() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcEllipse::setSemiAxis2(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcEllipse::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[408]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEllipse::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[408]); }
Ifc4x3_rc4::IfcEllipse::IfcEllipse(IfcEntityInstanceData&& e) : IfcConic(std::move(e)) { }
Ifc4x3_rc4::IfcEllipse::IfcEllipse(::Ifc4x3_rc4::IfcAxis2Placement* v1_Position, double v2_SemiAxis1, double v3_SemiAxis2) : IfcConic(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_SemiAxis1));set_attribute_value(2, (v3_SemiAxis2));; populate_derived(); }

// Function implementations for IfcEllipseProfileDef
double Ifc4x3_rc4::IfcEllipseProfileDef::SemiAxis1() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcEllipseProfileDef::setSemiAxis1(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcEllipseProfileDef::SemiAxis2() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcEllipseProfileDef::setSemiAxis2(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcEllipseProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[409]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEllipseProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[409]); }
Ifc4x3_rc4::IfcEllipseProfileDef::IfcEllipseProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcEllipseProfileDef::IfcEllipseProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_SemiAxis1, double v5_SemiAxis2) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_SemiAxis1));set_attribute_value(4, (v5_SemiAxis2));; populate_derived(); }

// Function implementations for IfcEnergyConversionDevice


const IfcParse::entity& Ifc4x3_rc4::IfcEnergyConversionDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[410]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEnergyConversionDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[410]); }
Ifc4x3_rc4::IfcEnergyConversionDevice::IfcEnergyConversionDevice(IfcEntityInstanceData&& e) : IfcDistributionFlowElement(std::move(e)) { }
Ifc4x3_rc4::IfcEnergyConversionDevice::IfcEnergyConversionDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcDistributionFlowElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcEnergyConversionDeviceType


const IfcParse::entity& Ifc4x3_rc4::IfcEnergyConversionDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[411]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEnergyConversionDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[411]); }
Ifc4x3_rc4::IfcEnergyConversionDeviceType::IfcEnergyConversionDeviceType(IfcEntityInstanceData&& e) : IfcDistributionFlowElementType(std::move(e)) { }
Ifc4x3_rc4::IfcEnergyConversionDeviceType::IfcEnergyConversionDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcDistributionFlowElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcEngine
boost::optional< ::Ifc4x3_rc4::IfcEngineTypeEnum::Value > Ifc4x3_rc4::IfcEngine::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcEngineTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcEngine::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcEngineTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcEngineTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcEngine::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[413]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEngine::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[413]); }
Ifc4x3_rc4::IfcEngine::IfcEngine(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcEngine::IfcEngine(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcEngineTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcEngineTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcEngineType
::Ifc4x3_rc4::IfcEngineTypeEnum::Value Ifc4x3_rc4::IfcEngineType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcEngineTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcEngineType::setPredefinedType(::Ifc4x3_rc4::IfcEngineTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcEngineTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcEngineType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[414]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEngineType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[414]); }
Ifc4x3_rc4::IfcEngineType::IfcEngineType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcEngineType::IfcEngineType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcEngineTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcEngineTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcEvaporativeCooler
boost::optional< ::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Value > Ifc4x3_rc4::IfcEvaporativeCooler::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcEvaporativeCooler::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcEvaporativeCooler::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[416]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEvaporativeCooler::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[416]); }
Ifc4x3_rc4::IfcEvaporativeCooler::IfcEvaporativeCooler(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcEvaporativeCooler::IfcEvaporativeCooler(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcEvaporativeCoolerType
::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Value Ifc4x3_rc4::IfcEvaporativeCoolerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcEvaporativeCoolerType::setPredefinedType(::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcEvaporativeCoolerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[417]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEvaporativeCoolerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[417]); }
Ifc4x3_rc4::IfcEvaporativeCoolerType::IfcEvaporativeCoolerType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcEvaporativeCoolerType::IfcEvaporativeCoolerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcEvaporativeCoolerTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcEvaporator
boost::optional< ::Ifc4x3_rc4::IfcEvaporatorTypeEnum::Value > Ifc4x3_rc4::IfcEvaporator::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcEvaporatorTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcEvaporator::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcEvaporatorTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcEvaporatorTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcEvaporator::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[419]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEvaporator::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[419]); }
Ifc4x3_rc4::IfcEvaporator::IfcEvaporator(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcEvaporator::IfcEvaporator(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcEvaporatorTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcEvaporatorTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcEvaporatorType
::Ifc4x3_rc4::IfcEvaporatorTypeEnum::Value Ifc4x3_rc4::IfcEvaporatorType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcEvaporatorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcEvaporatorType::setPredefinedType(::Ifc4x3_rc4::IfcEvaporatorTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcEvaporatorTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcEvaporatorType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[420]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEvaporatorType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[420]); }
Ifc4x3_rc4::IfcEvaporatorType::IfcEvaporatorType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcEvaporatorType::IfcEvaporatorType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcEvaporatorTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcEvaporatorTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcEvent
boost::optional< ::Ifc4x3_rc4::IfcEventTypeEnum::Value > Ifc4x3_rc4::IfcEvent::PredefinedType() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcEventTypeEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcEvent::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcEventTypeEnum::Value > v) { if (v) {set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcEventTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(7);} }
boost::optional< ::Ifc4x3_rc4::IfcEventTriggerTypeEnum::Value > Ifc4x3_rc4::IfcEvent::EventTriggerType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcEventTriggerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcEvent::setEventTriggerType(boost::optional< ::Ifc4x3_rc4::IfcEventTriggerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcEventTriggerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }
boost::optional< std::string > Ifc4x3_rc4::IfcEvent::UserDefinedEventTriggerType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcEvent::setUserDefinedEventTriggerType(boost::optional< std::string > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
::Ifc4x3_rc4::IfcEventTime* Ifc4x3_rc4::IfcEvent::EventOccurenceTime() const { if(data_.get_attribute_value(10).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(10)))->as<::Ifc4x3_rc4::IfcEventTime>(true); }
void Ifc4x3_rc4::IfcEvent::setEventOccurenceTime(::Ifc4x3_rc4::IfcEventTime* v) { set_attribute_value(10, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(10); }


const IfcParse::entity& Ifc4x3_rc4::IfcEvent::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[422]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEvent::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[422]); }
Ifc4x3_rc4::IfcEvent::IfcEvent(IfcEntityInstanceData&& e) : IfcProcess(std::move(e)) { }
Ifc4x3_rc4::IfcEvent::IfcEvent(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription, boost::optional< ::Ifc4x3_rc4::IfcEventTypeEnum::Value > v8_PredefinedType, boost::optional< ::Ifc4x3_rc4::IfcEventTriggerTypeEnum::Value > v9_EventTriggerType, boost::optional< std::string > v10_UserDefinedEventTriggerType, ::Ifc4x3_rc4::IfcEventTime* v11_EventOccurenceTime) : IfcProcess(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); } if (v8_PredefinedType) {set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcEventTypeEnum::Class(),(size_t)*v8_PredefinedType))); } if (v9_EventTriggerType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcEventTriggerTypeEnum::Class(),(size_t)*v9_EventTriggerType))); } if (v10_UserDefinedEventTriggerType) {set_attribute_value(9, (*v10_UserDefinedEventTriggerType)); }set_attribute_value(10, v11_EventOccurenceTime ? v11_EventOccurenceTime->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcEventTime
boost::optional< std::string > Ifc4x3_rc4::IfcEventTime::ActualDate() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcEventTime::setActualDate(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::string > Ifc4x3_rc4::IfcEventTime::EarlyDate() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcEventTime::setEarlyDate(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcEventTime::LateDate() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcEventTime::setLateDate(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcEventTime::ScheduleDate() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcEventTime::setScheduleDate(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcEventTime::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[423]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEventTime::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[423]); }
Ifc4x3_rc4::IfcEventTime::IfcEventTime(IfcEntityInstanceData&& e) : IfcSchedulingTime(std::move(e)) { }
Ifc4x3_rc4::IfcEventTime::IfcEventTime(boost::optional< std::string > v1_Name, boost::optional< ::Ifc4x3_rc4::IfcDataOriginEnum::Value > v2_DataOrigin, boost::optional< std::string > v3_UserDefinedDataOrigin, boost::optional< std::string > v4_ActualDate, boost::optional< std::string > v5_EarlyDate, boost::optional< std::string > v6_LateDate, boost::optional< std::string > v7_ScheduleDate) : IfcSchedulingTime(IfcEntityInstanceData(storage_t(7))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_DataOrigin) {set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(),(size_t)*v2_DataOrigin))); } if (v3_UserDefinedDataOrigin) {set_attribute_value(2, (*v3_UserDefinedDataOrigin)); } if (v4_ActualDate) {set_attribute_value(3, (*v4_ActualDate)); } if (v5_EarlyDate) {set_attribute_value(4, (*v5_EarlyDate)); } if (v6_LateDate) {set_attribute_value(5, (*v6_LateDate)); } if (v7_ScheduleDate) {set_attribute_value(6, (*v7_ScheduleDate)); }; populate_derived(); }

// Function implementations for IfcEventType
::Ifc4x3_rc4::IfcEventTypeEnum::Value Ifc4x3_rc4::IfcEventType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcEventTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcEventType::setPredefinedType(::Ifc4x3_rc4::IfcEventTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcEventTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
::Ifc4x3_rc4::IfcEventTriggerTypeEnum::Value Ifc4x3_rc4::IfcEventType::EventTriggerType() const {  return ::Ifc4x3_rc4::IfcEventTriggerTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcEventType::setEventTriggerType(::Ifc4x3_rc4::IfcEventTriggerTypeEnum::Value v) { set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcEventTriggerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(10); }
boost::optional< std::string > Ifc4x3_rc4::IfcEventType::UserDefinedEventTriggerType() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcEventType::setUserDefinedEventTriggerType(boost::optional< std::string > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }


const IfcParse::entity& Ifc4x3_rc4::IfcEventType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[425]); }
const IfcParse::entity& Ifc4x3_rc4::IfcEventType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[425]); }
Ifc4x3_rc4::IfcEventType::IfcEventType(IfcEntityInstanceData&& e) : IfcTypeProcess(std::move(e)) { }
Ifc4x3_rc4::IfcEventType::IfcEventType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ProcessType, ::Ifc4x3_rc4::IfcEventTypeEnum::Value v10_PredefinedType, ::Ifc4x3_rc4::IfcEventTriggerTypeEnum::Value v11_EventTriggerType, boost::optional< std::string > v12_UserDefinedEventTriggerType) : IfcTypeProcess(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ProcessType) {set_attribute_value(8, (*v9_ProcessType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcEventTypeEnum::Class(),(size_t)v10_PredefinedType)));set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcEventTriggerTypeEnum::Class(),(size_t)v11_EventTriggerType))); if (v12_UserDefinedEventTriggerType) {set_attribute_value(11, (*v12_UserDefinedEventTriggerType)); }; populate_derived(); }

// Function implementations for IfcExtendedProperties
boost::optional< std::string > Ifc4x3_rc4::IfcExtendedProperties::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcExtendedProperties::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcExtendedProperties::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcExtendedProperties::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr Ifc4x3_rc4::IfcExtendedProperties::Properties() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcProperty >(); }
void Ifc4x3_rc4::IfcExtendedProperties::setProperties(aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcExtendedProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[427]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExtendedProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[427]); }
Ifc4x3_rc4::IfcExtendedProperties::IfcExtendedProperties(IfcEntityInstanceData&& e) : IfcPropertyAbstraction(std::move(e)) { }
Ifc4x3_rc4::IfcExtendedProperties::IfcExtendedProperties(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr v3_Properties) : IfcPropertyAbstraction(IfcEntityInstanceData(storage_t(3))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_Properties)->generalize());; populate_derived(); }

// Function implementations for IfcExternalInformation


const IfcParse::entity& Ifc4x3_rc4::IfcExternalInformation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[428]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExternalInformation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[428]); }
Ifc4x3_rc4::IfcExternalInformation::IfcExternalInformation(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcExternalInformation::IfcExternalInformation() : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcExternalReference
boost::optional< std::string > Ifc4x3_rc4::IfcExternalReference::Location() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcExternalReference::setLocation(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcExternalReference::Identification() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcExternalReference::setIdentification(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcExternalReference::Name() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcExternalReference::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcExternalReference::ExternalReferenceForResources() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 2)->as<IfcExternalReferenceRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcExternalReference::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[432]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExternalReference::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[432]); }
Ifc4x3_rc4::IfcExternalReference::IfcExternalReference(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcExternalReference::IfcExternalReference(boost::optional< std::string > v1_Location, boost::optional< std::string > v2_Identification, boost::optional< std::string > v3_Name) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(3))) {  if (v1_Location) {set_attribute_value(0, (*v1_Location)); } if (v2_Identification) {set_attribute_value(1, (*v2_Identification)); } if (v3_Name) {set_attribute_value(2, (*v3_Name)); }; populate_derived(); }

// Function implementations for IfcExternalReferenceRelationship
::Ifc4x3_rc4::IfcExternalReference* Ifc4x3_rc4::IfcExternalReferenceRelationship::RelatingReference() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcExternalReference>(true); }
void Ifc4x3_rc4::IfcExternalReferenceRelationship::setRelatingReference(::Ifc4x3_rc4::IfcExternalReference* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
aggregate_of< ::Ifc4x3_rc4::IfcResourceObjectSelect >::ptr Ifc4x3_rc4::IfcExternalReferenceRelationship::RelatedResourceObjects() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcResourceObjectSelect >(); }
void Ifc4x3_rc4::IfcExternalReferenceRelationship::setRelatedResourceObjects(aggregate_of< ::Ifc4x3_rc4::IfcResourceObjectSelect >::ptr v) { set_attribute_value(3, (v)->generalize());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcExternalReferenceRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[433]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExternalReferenceRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[433]); }
Ifc4x3_rc4::IfcExternalReferenceRelationship::IfcExternalReferenceRelationship(IfcEntityInstanceData&& e) : IfcResourceLevelRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcExternalReferenceRelationship::IfcExternalReferenceRelationship(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcExternalReference* v3_RelatingReference, aggregate_of< ::Ifc4x3_rc4::IfcResourceObjectSelect >::ptr v4_RelatedResourceObjects) : IfcResourceLevelRelationship(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_RelatingReference ? v3_RelatingReference->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_RelatedResourceObjects)->generalize());; populate_derived(); }

// Function implementations for IfcExternalSpatialElement
boost::optional< ::Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::Value > Ifc4x3_rc4::IfcExternalSpatialElement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcExternalSpatialElement::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }

::Ifc4x3_rc4::IfcRelSpaceBoundary::list::ptr Ifc4x3_rc4::IfcExternalSpatialElement::BoundedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[950], 4)->as<IfcRelSpaceBoundary>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcExternalSpatialElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[434]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExternalSpatialElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[434]); }
Ifc4x3_rc4::IfcExternalSpatialElement::IfcExternalSpatialElement(IfcEntityInstanceData&& e) : IfcExternalSpatialStructureElement(std::move(e)) { }
Ifc4x3_rc4::IfcExternalSpatialElement::IfcExternalSpatialElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::Value > v9_PredefinedType) : IfcExternalSpatialStructureElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcExternalSpatialElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcExternalSpatialStructureElement


const IfcParse::entity& Ifc4x3_rc4::IfcExternalSpatialStructureElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[436]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExternalSpatialStructureElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[436]); }
Ifc4x3_rc4::IfcExternalSpatialStructureElement::IfcExternalSpatialStructureElement(IfcEntityInstanceData&& e) : IfcSpatialElement(std::move(e)) { }
Ifc4x3_rc4::IfcExternalSpatialStructureElement::IfcExternalSpatialStructureElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName) : IfcSpatialElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); }; populate_derived(); }

// Function implementations for IfcExternallyDefinedHatchStyle


const IfcParse::entity& Ifc4x3_rc4::IfcExternallyDefinedHatchStyle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[429]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExternallyDefinedHatchStyle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[429]); }
Ifc4x3_rc4::IfcExternallyDefinedHatchStyle::IfcExternallyDefinedHatchStyle(IfcEntityInstanceData&& e) : IfcExternalReference(std::move(e)) { }
Ifc4x3_rc4::IfcExternallyDefinedHatchStyle::IfcExternallyDefinedHatchStyle(boost::optional< std::string > v1_Location, boost::optional< std::string > v2_Identification, boost::optional< std::string > v3_Name) : IfcExternalReference(IfcEntityInstanceData(storage_t(3))) {  if (v1_Location) {set_attribute_value(0, (*v1_Location)); } if (v2_Identification) {set_attribute_value(1, (*v2_Identification)); } if (v3_Name) {set_attribute_value(2, (*v3_Name)); }; populate_derived(); }

// Function implementations for IfcExternallyDefinedSurfaceStyle


const IfcParse::entity& Ifc4x3_rc4::IfcExternallyDefinedSurfaceStyle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[430]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExternallyDefinedSurfaceStyle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[430]); }
Ifc4x3_rc4::IfcExternallyDefinedSurfaceStyle::IfcExternallyDefinedSurfaceStyle(IfcEntityInstanceData&& e) : IfcExternalReference(std::move(e)) { }
Ifc4x3_rc4::IfcExternallyDefinedSurfaceStyle::IfcExternallyDefinedSurfaceStyle(boost::optional< std::string > v1_Location, boost::optional< std::string > v2_Identification, boost::optional< std::string > v3_Name) : IfcExternalReference(IfcEntityInstanceData(storage_t(3))) {  if (v1_Location) {set_attribute_value(0, (*v1_Location)); } if (v2_Identification) {set_attribute_value(1, (*v2_Identification)); } if (v3_Name) {set_attribute_value(2, (*v3_Name)); }; populate_derived(); }

// Function implementations for IfcExternallyDefinedTextFont


const IfcParse::entity& Ifc4x3_rc4::IfcExternallyDefinedTextFont::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[431]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExternallyDefinedTextFont::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[431]); }
Ifc4x3_rc4::IfcExternallyDefinedTextFont::IfcExternallyDefinedTextFont(IfcEntityInstanceData&& e) : IfcExternalReference(std::move(e)) { }
Ifc4x3_rc4::IfcExternallyDefinedTextFont::IfcExternallyDefinedTextFont(boost::optional< std::string > v1_Location, boost::optional< std::string > v2_Identification, boost::optional< std::string > v3_Name) : IfcExternalReference(IfcEntityInstanceData(storage_t(3))) {  if (v1_Location) {set_attribute_value(0, (*v1_Location)); } if (v2_Identification) {set_attribute_value(1, (*v2_Identification)); } if (v3_Name) {set_attribute_value(2, (*v3_Name)); }; populate_derived(); }

// Function implementations for IfcExtrudedAreaSolid
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcExtrudedAreaSolid::ExtrudedDirection() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcExtrudedAreaSolid::setExtrudedDirection(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcExtrudedAreaSolid::Depth() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcExtrudedAreaSolid::setDepth(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcExtrudedAreaSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[437]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExtrudedAreaSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[437]); }
Ifc4x3_rc4::IfcExtrudedAreaSolid::IfcExtrudedAreaSolid(IfcEntityInstanceData&& e) : IfcSweptAreaSolid(std::move(e)) { }
Ifc4x3_rc4::IfcExtrudedAreaSolid::IfcExtrudedAreaSolid(::Ifc4x3_rc4::IfcProfileDef* v1_SweptArea, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position, ::Ifc4x3_rc4::IfcDirection* v3_ExtrudedDirection, double v4_Depth) : IfcSweptAreaSolid(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_SweptArea ? v1_SweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_ExtrudedDirection ? v3_ExtrudedDirection->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Depth));; populate_derived(); }

// Function implementations for IfcExtrudedAreaSolidTapered
::Ifc4x3_rc4::IfcProfileDef* Ifc4x3_rc4::IfcExtrudedAreaSolidTapered::EndSweptArea() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcProfileDef>(true); }
void Ifc4x3_rc4::IfcExtrudedAreaSolidTapered::setEndSweptArea(::Ifc4x3_rc4::IfcProfileDef* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcExtrudedAreaSolidTapered::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[438]); }
const IfcParse::entity& Ifc4x3_rc4::IfcExtrudedAreaSolidTapered::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[438]); }
Ifc4x3_rc4::IfcExtrudedAreaSolidTapered::IfcExtrudedAreaSolidTapered(IfcEntityInstanceData&& e) : IfcExtrudedAreaSolid(std::move(e)) { }
Ifc4x3_rc4::IfcExtrudedAreaSolidTapered::IfcExtrudedAreaSolidTapered(::Ifc4x3_rc4::IfcProfileDef* v1_SweptArea, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position, ::Ifc4x3_rc4::IfcDirection* v3_ExtrudedDirection, double v4_Depth, ::Ifc4x3_rc4::IfcProfileDef* v5_EndSweptArea) : IfcExtrudedAreaSolid(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_SweptArea ? v1_SweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_ExtrudedDirection ? v3_ExtrudedDirection->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Depth));set_attribute_value(4, v5_EndSweptArea ? v5_EndSweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcFace
aggregate_of< ::Ifc4x3_rc4::IfcFaceBound >::ptr Ifc4x3_rc4::IfcFace::Bounds() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcFaceBound >(); }
void Ifc4x3_rc4::IfcFace::setBounds(aggregate_of< ::Ifc4x3_rc4::IfcFaceBound >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }

::Ifc4x3_rc4::IfcTextureMap::list::ptr Ifc4x3_rc4::IfcFace::HasTextureMaps() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1199], 2)->as<IfcTextureMap>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcFace::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[439]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFace::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[439]); }
Ifc4x3_rc4::IfcFace::IfcFace(IfcEntityInstanceData&& e) : IfcTopologicalRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcFace::IfcFace(aggregate_of< ::Ifc4x3_rc4::IfcFaceBound >::ptr v1_Bounds) : IfcTopologicalRepresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Bounds)->generalize());; populate_derived(); }

// Function implementations for IfcFaceBasedSurfaceModel
aggregate_of< ::Ifc4x3_rc4::IfcConnectedFaceSet >::ptr Ifc4x3_rc4::IfcFaceBasedSurfaceModel::FbsmFaces() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcConnectedFaceSet >(); }
void Ifc4x3_rc4::IfcFaceBasedSurfaceModel::setFbsmFaces(aggregate_of< ::Ifc4x3_rc4::IfcConnectedFaceSet >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcFaceBasedSurfaceModel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[440]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFaceBasedSurfaceModel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[440]); }
Ifc4x3_rc4::IfcFaceBasedSurfaceModel::IfcFaceBasedSurfaceModel(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcFaceBasedSurfaceModel::IfcFaceBasedSurfaceModel(aggregate_of< ::Ifc4x3_rc4::IfcConnectedFaceSet >::ptr v1_FbsmFaces) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_FbsmFaces)->generalize());; populate_derived(); }

// Function implementations for IfcFaceBound
::Ifc4x3_rc4::IfcLoop* Ifc4x3_rc4::IfcFaceBound::Bound() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcLoop>(true); }
void Ifc4x3_rc4::IfcFaceBound::setBound(::Ifc4x3_rc4::IfcLoop* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
bool Ifc4x3_rc4::IfcFaceBound::Orientation() const {  bool v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcFaceBound::setOrientation(bool v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcFaceBound::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[441]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFaceBound::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[441]); }
Ifc4x3_rc4::IfcFaceBound::IfcFaceBound(IfcEntityInstanceData&& e) : IfcTopologicalRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcFaceBound::IfcFaceBound(::Ifc4x3_rc4::IfcLoop* v1_Bound, bool v2_Orientation) : IfcTopologicalRepresentationItem(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Bound ? v1_Bound->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Orientation));; populate_derived(); }

// Function implementations for IfcFaceOuterBound


const IfcParse::entity& Ifc4x3_rc4::IfcFaceOuterBound::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[442]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFaceOuterBound::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[442]); }
Ifc4x3_rc4::IfcFaceOuterBound::IfcFaceOuterBound(IfcEntityInstanceData&& e) : IfcFaceBound(std::move(e)) { }
Ifc4x3_rc4::IfcFaceOuterBound::IfcFaceOuterBound(::Ifc4x3_rc4::IfcLoop* v1_Bound, bool v2_Orientation) : IfcFaceBound(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Bound ? v1_Bound->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Orientation));; populate_derived(); }

// Function implementations for IfcFaceSurface
::Ifc4x3_rc4::IfcSurface* Ifc4x3_rc4::IfcFaceSurface::FaceSurface() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcSurface>(true); }
void Ifc4x3_rc4::IfcFaceSurface::setFaceSurface(::Ifc4x3_rc4::IfcSurface* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
bool Ifc4x3_rc4::IfcFaceSurface::SameSense() const {  bool v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcFaceSurface::setSameSense(bool v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcFaceSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[443]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFaceSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[443]); }
Ifc4x3_rc4::IfcFaceSurface::IfcFaceSurface(IfcEntityInstanceData&& e) : IfcFace(std::move(e)) { }
Ifc4x3_rc4::IfcFaceSurface::IfcFaceSurface(aggregate_of< ::Ifc4x3_rc4::IfcFaceBound >::ptr v1_Bounds, ::Ifc4x3_rc4::IfcSurface* v2_FaceSurface, bool v3_SameSense) : IfcFace(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_Bounds)->generalize());set_attribute_value(1, v2_FaceSurface ? v2_FaceSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, (v3_SameSense));; populate_derived(); }

// Function implementations for IfcFacetedBrep


const IfcParse::entity& Ifc4x3_rc4::IfcFacetedBrep::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[444]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFacetedBrep::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[444]); }
Ifc4x3_rc4::IfcFacetedBrep::IfcFacetedBrep(IfcEntityInstanceData&& e) : IfcManifoldSolidBrep(std::move(e)) { }
Ifc4x3_rc4::IfcFacetedBrep::IfcFacetedBrep(::Ifc4x3_rc4::IfcClosedShell* v1_Outer) : IfcManifoldSolidBrep(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_Outer ? v1_Outer->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcFacetedBrepWithVoids
aggregate_of< ::Ifc4x3_rc4::IfcClosedShell >::ptr Ifc4x3_rc4::IfcFacetedBrepWithVoids::Voids() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcClosedShell >(); }
void Ifc4x3_rc4::IfcFacetedBrepWithVoids::setVoids(aggregate_of< ::Ifc4x3_rc4::IfcClosedShell >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcFacetedBrepWithVoids::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[445]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFacetedBrepWithVoids::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[445]); }
Ifc4x3_rc4::IfcFacetedBrepWithVoids::IfcFacetedBrepWithVoids(IfcEntityInstanceData&& e) : IfcFacetedBrep(std::move(e)) { }
Ifc4x3_rc4::IfcFacetedBrepWithVoids::IfcFacetedBrepWithVoids(::Ifc4x3_rc4::IfcClosedShell* v1_Outer, aggregate_of< ::Ifc4x3_rc4::IfcClosedShell >::ptr v2_Voids) : IfcFacetedBrep(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Outer ? v1_Outer->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Voids)->generalize());; populate_derived(); }

// Function implementations for IfcFacility


const IfcParse::entity& Ifc4x3_rc4::IfcFacility::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[446]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFacility::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[446]); }
Ifc4x3_rc4::IfcFacility::IfcFacility(IfcEntityInstanceData&& e) : IfcSpatialStructureElement(std::move(e)) { }
Ifc4x3_rc4::IfcFacility::IfcFacility(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType) : IfcSpatialStructureElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); }; populate_derived(); }

// Function implementations for IfcFacilityPart
::Ifc4x3_rc4::IfcFacilityPartTypeSelect* Ifc4x3_rc4::IfcFacilityPart::PredefinedType() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcFacilityPartTypeSelect>(true); }
void Ifc4x3_rc4::IfcFacilityPart::setPredefinedType(::Ifc4x3_rc4::IfcFacilityPartTypeSelect* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }
::Ifc4x3_rc4::IfcFacilityUsageEnum::Value Ifc4x3_rc4::IfcFacilityPart::UsageType() const {  return ::Ifc4x3_rc4::IfcFacilityUsageEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcFacilityPart::setUsageType(::Ifc4x3_rc4::IfcFacilityUsageEnum::Value v) { set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcFacilityUsageEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(10); }


const IfcParse::entity& Ifc4x3_rc4::IfcFacilityPart::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[447]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFacilityPart::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[447]); }
Ifc4x3_rc4::IfcFacilityPart::IfcFacilityPart(IfcEntityInstanceData&& e) : IfcSpatialStructureElement(std::move(e)) { }
Ifc4x3_rc4::IfcFacilityPart::IfcFacilityPart(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType, ::Ifc4x3_rc4::IfcFacilityPartTypeSelect* v10_PredefinedType, ::Ifc4x3_rc4::IfcFacilityUsageEnum::Value v11_UsageType) : IfcSpatialStructureElement(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); }set_attribute_value(9, v10_PredefinedType ? v10_PredefinedType->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcFacilityUsageEnum::Class(),(size_t)v11_UsageType)));; populate_derived(); }

// Function implementations for IfcFailureConnectionCondition
boost::optional< double > Ifc4x3_rc4::IfcFailureConnectionCondition::TensionFailureX() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcFailureConnectionCondition::setTensionFailureX(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< double > Ifc4x3_rc4::IfcFailureConnectionCondition::TensionFailureY() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcFailureConnectionCondition::setTensionFailureY(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcFailureConnectionCondition::TensionFailureZ() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcFailureConnectionCondition::setTensionFailureZ(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< double > Ifc4x3_rc4::IfcFailureConnectionCondition::CompressionFailureX() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcFailureConnectionCondition::setCompressionFailureX(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< double > Ifc4x3_rc4::IfcFailureConnectionCondition::CompressionFailureY() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcFailureConnectionCondition::setCompressionFailureY(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< double > Ifc4x3_rc4::IfcFailureConnectionCondition::CompressionFailureZ() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcFailureConnectionCondition::setCompressionFailureZ(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFailureConnectionCondition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[451]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFailureConnectionCondition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[451]); }
Ifc4x3_rc4::IfcFailureConnectionCondition::IfcFailureConnectionCondition(IfcEntityInstanceData&& e) : IfcStructuralConnectionCondition(std::move(e)) { }
Ifc4x3_rc4::IfcFailureConnectionCondition::IfcFailureConnectionCondition(boost::optional< std::string > v1_Name, boost::optional< double > v2_TensionFailureX, boost::optional< double > v3_TensionFailureY, boost::optional< double > v4_TensionFailureZ, boost::optional< double > v5_CompressionFailureX, boost::optional< double > v6_CompressionFailureY, boost::optional< double > v7_CompressionFailureZ) : IfcStructuralConnectionCondition(IfcEntityInstanceData(storage_t(7))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_TensionFailureX) {set_attribute_value(1, (*v2_TensionFailureX)); } if (v3_TensionFailureY) {set_attribute_value(2, (*v3_TensionFailureY)); } if (v4_TensionFailureZ) {set_attribute_value(3, (*v4_TensionFailureZ)); } if (v5_CompressionFailureX) {set_attribute_value(4, (*v5_CompressionFailureX)); } if (v6_CompressionFailureY) {set_attribute_value(5, (*v6_CompressionFailureY)); } if (v7_CompressionFailureZ) {set_attribute_value(6, (*v7_CompressionFailureZ)); }; populate_derived(); }

// Function implementations for IfcFan
boost::optional< ::Ifc4x3_rc4::IfcFanTypeEnum::Value > Ifc4x3_rc4::IfcFan::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcFanTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcFan::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcFanTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcFanTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFan::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[452]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFan::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[452]); }
Ifc4x3_rc4::IfcFan::IfcFan(IfcEntityInstanceData&& e) : IfcFlowMovingDevice(std::move(e)) { }
Ifc4x3_rc4::IfcFan::IfcFan(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcFanTypeEnum::Value > v9_PredefinedType) : IfcFlowMovingDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcFanTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcFanType
::Ifc4x3_rc4::IfcFanTypeEnum::Value Ifc4x3_rc4::IfcFanType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcFanTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcFanType::setPredefinedType(::Ifc4x3_rc4::IfcFanTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcFanTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcFanType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[453]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFanType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[453]); }
Ifc4x3_rc4::IfcFanType::IfcFanType(IfcEntityInstanceData&& e) : IfcFlowMovingDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcFanType::IfcFanType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcFanTypeEnum::Value v10_PredefinedType) : IfcFlowMovingDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcFanTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcFastener
boost::optional< ::Ifc4x3_rc4::IfcFastenerTypeEnum::Value > Ifc4x3_rc4::IfcFastener::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcFastenerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcFastener::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcFastenerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcFastenerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFastener::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[455]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFastener::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[455]); }
Ifc4x3_rc4::IfcFastener::IfcFastener(IfcEntityInstanceData&& e) : IfcElementComponent(std::move(e)) { }
Ifc4x3_rc4::IfcFastener::IfcFastener(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcFastenerTypeEnum::Value > v9_PredefinedType) : IfcElementComponent(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcFastenerTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcFastenerType
::Ifc4x3_rc4::IfcFastenerTypeEnum::Value Ifc4x3_rc4::IfcFastenerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcFastenerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcFastenerType::setPredefinedType(::Ifc4x3_rc4::IfcFastenerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcFastenerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcFastenerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[456]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFastenerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[456]); }
Ifc4x3_rc4::IfcFastenerType::IfcFastenerType(IfcEntityInstanceData&& e) : IfcElementComponentType(std::move(e)) { }
Ifc4x3_rc4::IfcFastenerType::IfcFastenerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcFastenerTypeEnum::Value v10_PredefinedType) : IfcElementComponentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcFastenerTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcFeatureElement


const IfcParse::entity& Ifc4x3_rc4::IfcFeatureElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[458]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFeatureElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[458]); }
Ifc4x3_rc4::IfcFeatureElement::IfcFeatureElement(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcFeatureElement::IfcFeatureElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFeatureElementAddition

::Ifc4x3_rc4::IfcRelProjectsElement::list::ptr Ifc4x3_rc4::IfcFeatureElementAddition::ProjectsElements() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[946], 5)->as<IfcRelProjectsElement>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcFeatureElementAddition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[459]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFeatureElementAddition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[459]); }
Ifc4x3_rc4::IfcFeatureElementAddition::IfcFeatureElementAddition(IfcEntityInstanceData&& e) : IfcFeatureElement(std::move(e)) { }
Ifc4x3_rc4::IfcFeatureElementAddition::IfcFeatureElementAddition(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcFeatureElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFeatureElementSubtraction

::Ifc4x3_rc4::IfcRelVoidsElement::list::ptr Ifc4x3_rc4::IfcFeatureElementSubtraction::VoidsElements() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[953], 5)->as<IfcRelVoidsElement>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcFeatureElementSubtraction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[460]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFeatureElementSubtraction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[460]); }
Ifc4x3_rc4::IfcFeatureElementSubtraction::IfcFeatureElementSubtraction(IfcEntityInstanceData&& e) : IfcFeatureElement(std::move(e)) { }
Ifc4x3_rc4::IfcFeatureElementSubtraction::IfcFeatureElementSubtraction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcFeatureElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFillAreaStyle
aggregate_of< ::Ifc4x3_rc4::IfcFillStyleSelect >::ptr Ifc4x3_rc4::IfcFillAreaStyle::FillStyles() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcFillStyleSelect >(); }
void Ifc4x3_rc4::IfcFillAreaStyle::setFillStyles(aggregate_of< ::Ifc4x3_rc4::IfcFillStyleSelect >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
boost::optional< bool > Ifc4x3_rc4::IfcFillAreaStyle::ModelOrDraughting() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } bool v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcFillAreaStyle::setModelOrDraughting(boost::optional< bool > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFillAreaStyle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[461]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFillAreaStyle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[461]); }
Ifc4x3_rc4::IfcFillAreaStyle::IfcFillAreaStyle(IfcEntityInstanceData&& e) : IfcPresentationStyle(std::move(e)) { }
Ifc4x3_rc4::IfcFillAreaStyle::IfcFillAreaStyle(boost::optional< std::string > v1_Name, aggregate_of< ::Ifc4x3_rc4::IfcFillStyleSelect >::ptr v2_FillStyles, boost::optional< bool > v3_ModelOrDraughting) : IfcPresentationStyle(IfcEntityInstanceData(storage_t(3))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, (v2_FillStyles)->generalize()); if (v3_ModelOrDraughting) {set_attribute_value(2, (*v3_ModelOrDraughting)); }; populate_derived(); }

// Function implementations for IfcFillAreaStyleHatching
::Ifc4x3_rc4::IfcCurveStyle* Ifc4x3_rc4::IfcFillAreaStyleHatching::HatchLineAppearance() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurveStyle>(true); }
void Ifc4x3_rc4::IfcFillAreaStyleHatching::setHatchLineAppearance(::Ifc4x3_rc4::IfcCurveStyle* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcHatchLineDistanceSelect* Ifc4x3_rc4::IfcFillAreaStyleHatching::StartOfNextHatchLine() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcHatchLineDistanceSelect>(true); }
void Ifc4x3_rc4::IfcFillAreaStyleHatching::setStartOfNextHatchLine(::Ifc4x3_rc4::IfcHatchLineDistanceSelect* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcCartesianPoint* Ifc4x3_rc4::IfcFillAreaStyleHatching::PointOfReferenceHatchLine() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcCartesianPoint>(true); }
void Ifc4x3_rc4::IfcFillAreaStyleHatching::setPointOfReferenceHatchLine(::Ifc4x3_rc4::IfcCartesianPoint* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcCartesianPoint* Ifc4x3_rc4::IfcFillAreaStyleHatching::PatternStart() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcCartesianPoint>(true); }
void Ifc4x3_rc4::IfcFillAreaStyleHatching::setPatternStart(::Ifc4x3_rc4::IfcCartesianPoint* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcFillAreaStyleHatching::HatchLineAngle() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcFillAreaStyleHatching::setHatchLineAngle(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcFillAreaStyleHatching::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[462]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFillAreaStyleHatching::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[462]); }
Ifc4x3_rc4::IfcFillAreaStyleHatching::IfcFillAreaStyleHatching(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcFillAreaStyleHatching::IfcFillAreaStyleHatching(::Ifc4x3_rc4::IfcCurveStyle* v1_HatchLineAppearance, ::Ifc4x3_rc4::IfcHatchLineDistanceSelect* v2_StartOfNextHatchLine, ::Ifc4x3_rc4::IfcCartesianPoint* v3_PointOfReferenceHatchLine, ::Ifc4x3_rc4::IfcCartesianPoint* v4_PatternStart, double v5_HatchLineAngle) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_HatchLineAppearance ? v1_HatchLineAppearance->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_StartOfNextHatchLine ? v2_StartOfNextHatchLine->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_PointOfReferenceHatchLine ? v3_PointOfReferenceHatchLine->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_PatternStart ? v4_PatternStart->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, (v5_HatchLineAngle));; populate_derived(); }

// Function implementations for IfcFillAreaStyleTiles
aggregate_of< ::Ifc4x3_rc4::IfcVector >::ptr Ifc4x3_rc4::IfcFillAreaStyleTiles::TilingPattern() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcVector >(); }
void Ifc4x3_rc4::IfcFillAreaStyleTiles::setTilingPattern(aggregate_of< ::Ifc4x3_rc4::IfcVector >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcStyledItem >::ptr Ifc4x3_rc4::IfcFillAreaStyleTiles::Tiles() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcStyledItem >(); }
void Ifc4x3_rc4::IfcFillAreaStyleTiles::setTiles(aggregate_of< ::Ifc4x3_rc4::IfcStyledItem >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcFillAreaStyleTiles::TilingScale() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcFillAreaStyleTiles::setTilingScale(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcFillAreaStyleTiles::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[463]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFillAreaStyleTiles::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[463]); }
Ifc4x3_rc4::IfcFillAreaStyleTiles::IfcFillAreaStyleTiles(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcFillAreaStyleTiles::IfcFillAreaStyleTiles(aggregate_of< ::Ifc4x3_rc4::IfcVector >::ptr v1_TilingPattern, aggregate_of< ::Ifc4x3_rc4::IfcStyledItem >::ptr v2_Tiles, double v3_TilingScale) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_TilingPattern)->generalize());set_attribute_value(1, (v2_Tiles)->generalize());set_attribute_value(2, (v3_TilingScale));; populate_derived(); }

// Function implementations for IfcFilter
boost::optional< ::Ifc4x3_rc4::IfcFilterTypeEnum::Value > Ifc4x3_rc4::IfcFilter::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcFilterTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcFilter::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcFilterTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcFilterTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFilter::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[465]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFilter::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[465]); }
Ifc4x3_rc4::IfcFilter::IfcFilter(IfcEntityInstanceData&& e) : IfcFlowTreatmentDevice(std::move(e)) { }
Ifc4x3_rc4::IfcFilter::IfcFilter(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcFilterTypeEnum::Value > v9_PredefinedType) : IfcFlowTreatmentDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcFilterTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcFilterType
::Ifc4x3_rc4::IfcFilterTypeEnum::Value Ifc4x3_rc4::IfcFilterType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcFilterTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcFilterType::setPredefinedType(::Ifc4x3_rc4::IfcFilterTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcFilterTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcFilterType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[466]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFilterType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[466]); }
Ifc4x3_rc4::IfcFilterType::IfcFilterType(IfcEntityInstanceData&& e) : IfcFlowTreatmentDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcFilterType::IfcFilterType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcFilterTypeEnum::Value v10_PredefinedType) : IfcFlowTreatmentDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcFilterTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcFireSuppressionTerminal
boost::optional< ::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Value > Ifc4x3_rc4::IfcFireSuppressionTerminal::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcFireSuppressionTerminal::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFireSuppressionTerminal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[468]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFireSuppressionTerminal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[468]); }
Ifc4x3_rc4::IfcFireSuppressionTerminal::IfcFireSuppressionTerminal(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcFireSuppressionTerminal::IfcFireSuppressionTerminal(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcFireSuppressionTerminalType
::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Value Ifc4x3_rc4::IfcFireSuppressionTerminalType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcFireSuppressionTerminalType::setPredefinedType(::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcFireSuppressionTerminalType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[469]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFireSuppressionTerminalType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[469]); }
Ifc4x3_rc4::IfcFireSuppressionTerminalType::IfcFireSuppressionTerminalType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcFireSuppressionTerminalType::IfcFireSuppressionTerminalType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcFireSuppressionTerminalTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcFixedReferenceSweptAreaSolid
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcFixedReferenceSweptAreaSolid::FixedReference() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcFixedReferenceSweptAreaSolid::setFixedReference(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcFixedReferenceSweptAreaSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[471]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFixedReferenceSweptAreaSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[471]); }
Ifc4x3_rc4::IfcFixedReferenceSweptAreaSolid::IfcFixedReferenceSweptAreaSolid(IfcEntityInstanceData&& e) : IfcDirectrixCurveSweptAreaSolid(std::move(e)) { }
Ifc4x3_rc4::IfcFixedReferenceSweptAreaSolid::IfcFixedReferenceSweptAreaSolid(::Ifc4x3_rc4::IfcProfileDef* v1_SweptArea, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position, ::Ifc4x3_rc4::IfcCurve* v3_Directrix, ::Ifc4x3_rc4::IfcCurveMeasureSelect* v4_StartParam, ::Ifc4x3_rc4::IfcCurveMeasureSelect* v5_EndParam, ::Ifc4x3_rc4::IfcDirection* v6_FixedReference) : IfcDirectrixCurveSweptAreaSolid(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, v1_SweptArea ? v1_SweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_Directrix ? v3_Directrix->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_StartParam ? v4_StartParam->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_EndParam ? v5_EndParam->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_FixedReference ? v6_FixedReference->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcFlowController


const IfcParse::entity& Ifc4x3_rc4::IfcFlowController::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[472]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowController::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[472]); }
Ifc4x3_rc4::IfcFlowController::IfcFlowController(IfcEntityInstanceData&& e) : IfcDistributionFlowElement(std::move(e)) { }
Ifc4x3_rc4::IfcFlowController::IfcFlowController(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcDistributionFlowElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFlowControllerType


const IfcParse::entity& Ifc4x3_rc4::IfcFlowControllerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[473]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowControllerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[473]); }
Ifc4x3_rc4::IfcFlowControllerType::IfcFlowControllerType(IfcEntityInstanceData&& e) : IfcDistributionFlowElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFlowControllerType::IfcFlowControllerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcDistributionFlowElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcFlowFitting


const IfcParse::entity& Ifc4x3_rc4::IfcFlowFitting::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[475]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowFitting::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[475]); }
Ifc4x3_rc4::IfcFlowFitting::IfcFlowFitting(IfcEntityInstanceData&& e) : IfcDistributionFlowElement(std::move(e)) { }
Ifc4x3_rc4::IfcFlowFitting::IfcFlowFitting(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcDistributionFlowElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFlowFittingType


const IfcParse::entity& Ifc4x3_rc4::IfcFlowFittingType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[476]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowFittingType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[476]); }
Ifc4x3_rc4::IfcFlowFittingType::IfcFlowFittingType(IfcEntityInstanceData&& e) : IfcDistributionFlowElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFlowFittingType::IfcFlowFittingType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcDistributionFlowElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcFlowInstrument
boost::optional< ::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Value > Ifc4x3_rc4::IfcFlowInstrument::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcFlowInstrument::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFlowInstrument::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[477]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowInstrument::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[477]); }
Ifc4x3_rc4::IfcFlowInstrument::IfcFlowInstrument(IfcEntityInstanceData&& e) : IfcDistributionControlElement(std::move(e)) { }
Ifc4x3_rc4::IfcFlowInstrument::IfcFlowInstrument(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Value > v9_PredefinedType) : IfcDistributionControlElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcFlowInstrumentType
::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Value Ifc4x3_rc4::IfcFlowInstrumentType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcFlowInstrumentType::setPredefinedType(::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcFlowInstrumentType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[478]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowInstrumentType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[478]); }
Ifc4x3_rc4::IfcFlowInstrumentType::IfcFlowInstrumentType(IfcEntityInstanceData&& e) : IfcDistributionControlElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFlowInstrumentType::IfcFlowInstrumentType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Value v10_PredefinedType) : IfcDistributionControlElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcFlowInstrumentTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcFlowMeter
boost::optional< ::Ifc4x3_rc4::IfcFlowMeterTypeEnum::Value > Ifc4x3_rc4::IfcFlowMeter::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcFlowMeterTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcFlowMeter::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcFlowMeterTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcFlowMeterTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFlowMeter::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[480]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowMeter::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[480]); }
Ifc4x3_rc4::IfcFlowMeter::IfcFlowMeter(IfcEntityInstanceData&& e) : IfcFlowController(std::move(e)) { }
Ifc4x3_rc4::IfcFlowMeter::IfcFlowMeter(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcFlowMeterTypeEnum::Value > v9_PredefinedType) : IfcFlowController(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcFlowMeterTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcFlowMeterType
::Ifc4x3_rc4::IfcFlowMeterTypeEnum::Value Ifc4x3_rc4::IfcFlowMeterType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcFlowMeterTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcFlowMeterType::setPredefinedType(::Ifc4x3_rc4::IfcFlowMeterTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcFlowMeterTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcFlowMeterType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[481]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowMeterType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[481]); }
Ifc4x3_rc4::IfcFlowMeterType::IfcFlowMeterType(IfcEntityInstanceData&& e) : IfcFlowControllerType(std::move(e)) { }
Ifc4x3_rc4::IfcFlowMeterType::IfcFlowMeterType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcFlowMeterTypeEnum::Value v10_PredefinedType) : IfcFlowControllerType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcFlowMeterTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcFlowMovingDevice


const IfcParse::entity& Ifc4x3_rc4::IfcFlowMovingDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[483]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowMovingDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[483]); }
Ifc4x3_rc4::IfcFlowMovingDevice::IfcFlowMovingDevice(IfcEntityInstanceData&& e) : IfcDistributionFlowElement(std::move(e)) { }
Ifc4x3_rc4::IfcFlowMovingDevice::IfcFlowMovingDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcDistributionFlowElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFlowMovingDeviceType


const IfcParse::entity& Ifc4x3_rc4::IfcFlowMovingDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[484]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowMovingDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[484]); }
Ifc4x3_rc4::IfcFlowMovingDeviceType::IfcFlowMovingDeviceType(IfcEntityInstanceData&& e) : IfcDistributionFlowElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFlowMovingDeviceType::IfcFlowMovingDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcDistributionFlowElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcFlowSegment


const IfcParse::entity& Ifc4x3_rc4::IfcFlowSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[485]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[485]); }
Ifc4x3_rc4::IfcFlowSegment::IfcFlowSegment(IfcEntityInstanceData&& e) : IfcDistributionFlowElement(std::move(e)) { }
Ifc4x3_rc4::IfcFlowSegment::IfcFlowSegment(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcDistributionFlowElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFlowSegmentType


const IfcParse::entity& Ifc4x3_rc4::IfcFlowSegmentType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[486]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowSegmentType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[486]); }
Ifc4x3_rc4::IfcFlowSegmentType::IfcFlowSegmentType(IfcEntityInstanceData&& e) : IfcDistributionFlowElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFlowSegmentType::IfcFlowSegmentType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcDistributionFlowElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcFlowStorageDevice


const IfcParse::entity& Ifc4x3_rc4::IfcFlowStorageDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[487]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowStorageDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[487]); }
Ifc4x3_rc4::IfcFlowStorageDevice::IfcFlowStorageDevice(IfcEntityInstanceData&& e) : IfcDistributionFlowElement(std::move(e)) { }
Ifc4x3_rc4::IfcFlowStorageDevice::IfcFlowStorageDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcDistributionFlowElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFlowStorageDeviceType


const IfcParse::entity& Ifc4x3_rc4::IfcFlowStorageDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[488]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowStorageDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[488]); }
Ifc4x3_rc4::IfcFlowStorageDeviceType::IfcFlowStorageDeviceType(IfcEntityInstanceData&& e) : IfcDistributionFlowElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFlowStorageDeviceType::IfcFlowStorageDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcDistributionFlowElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcFlowTerminal


const IfcParse::entity& Ifc4x3_rc4::IfcFlowTerminal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[489]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowTerminal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[489]); }
Ifc4x3_rc4::IfcFlowTerminal::IfcFlowTerminal(IfcEntityInstanceData&& e) : IfcDistributionFlowElement(std::move(e)) { }
Ifc4x3_rc4::IfcFlowTerminal::IfcFlowTerminal(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcDistributionFlowElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFlowTerminalType


const IfcParse::entity& Ifc4x3_rc4::IfcFlowTerminalType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[490]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowTerminalType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[490]); }
Ifc4x3_rc4::IfcFlowTerminalType::IfcFlowTerminalType(IfcEntityInstanceData&& e) : IfcDistributionFlowElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFlowTerminalType::IfcFlowTerminalType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcDistributionFlowElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcFlowTreatmentDevice


const IfcParse::entity& Ifc4x3_rc4::IfcFlowTreatmentDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[491]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowTreatmentDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[491]); }
Ifc4x3_rc4::IfcFlowTreatmentDevice::IfcFlowTreatmentDevice(IfcEntityInstanceData&& e) : IfcDistributionFlowElement(std::move(e)) { }
Ifc4x3_rc4::IfcFlowTreatmentDevice::IfcFlowTreatmentDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcDistributionFlowElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFlowTreatmentDeviceType


const IfcParse::entity& Ifc4x3_rc4::IfcFlowTreatmentDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[492]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFlowTreatmentDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[492]); }
Ifc4x3_rc4::IfcFlowTreatmentDeviceType::IfcFlowTreatmentDeviceType(IfcEntityInstanceData&& e) : IfcDistributionFlowElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFlowTreatmentDeviceType::IfcFlowTreatmentDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcDistributionFlowElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcFooting
boost::optional< ::Ifc4x3_rc4::IfcFootingTypeEnum::Value > Ifc4x3_rc4::IfcFooting::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcFootingTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcFooting::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcFootingTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcFootingTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFooting::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[496]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFooting::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[496]); }
Ifc4x3_rc4::IfcFooting::IfcFooting(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcFooting::IfcFooting(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcFootingTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcFootingTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcFootingType
::Ifc4x3_rc4::IfcFootingTypeEnum::Value Ifc4x3_rc4::IfcFootingType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcFootingTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcFootingType::setPredefinedType(::Ifc4x3_rc4::IfcFootingTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcFootingTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcFootingType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[497]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFootingType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[497]); }
Ifc4x3_rc4::IfcFootingType::IfcFootingType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFootingType::IfcFootingType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcFootingTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcFootingTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcFurnishingElement


const IfcParse::entity& Ifc4x3_rc4::IfcFurnishingElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[501]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFurnishingElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[501]); }
Ifc4x3_rc4::IfcFurnishingElement::IfcFurnishingElement(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcFurnishingElement::IfcFurnishingElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcFurnishingElementType


const IfcParse::entity& Ifc4x3_rc4::IfcFurnishingElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[502]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFurnishingElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[502]); }
Ifc4x3_rc4::IfcFurnishingElementType::IfcFurnishingElementType(IfcEntityInstanceData&& e) : IfcElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFurnishingElementType::IfcFurnishingElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcFurniture
boost::optional< ::Ifc4x3_rc4::IfcFurnitureTypeEnum::Value > Ifc4x3_rc4::IfcFurniture::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcFurnitureTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcFurniture::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcFurnitureTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcFurnitureTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFurniture::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[503]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFurniture::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[503]); }
Ifc4x3_rc4::IfcFurniture::IfcFurniture(IfcEntityInstanceData&& e) : IfcFurnishingElement(std::move(e)) { }
Ifc4x3_rc4::IfcFurniture::IfcFurniture(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcFurnitureTypeEnum::Value > v9_PredefinedType) : IfcFurnishingElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcFurnitureTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcFurnitureType
::Ifc4x3_rc4::IfcAssemblyPlaceEnum::Value Ifc4x3_rc4::IfcFurnitureType::AssemblyPlace() const {  return ::Ifc4x3_rc4::IfcAssemblyPlaceEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcFurnitureType::setAssemblyPlace(::Ifc4x3_rc4::IfcAssemblyPlaceEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcAssemblyPlaceEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
boost::optional< ::Ifc4x3_rc4::IfcFurnitureTypeEnum::Value > Ifc4x3_rc4::IfcFurnitureType::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcFurnitureTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcFurnitureType::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcFurnitureTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcFurnitureTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcFurnitureType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[504]); }
const IfcParse::entity& Ifc4x3_rc4::IfcFurnitureType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[504]); }
Ifc4x3_rc4::IfcFurnitureType::IfcFurnitureType(IfcEntityInstanceData&& e) : IfcFurnishingElementType(std::move(e)) { }
Ifc4x3_rc4::IfcFurnitureType::IfcFurnitureType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcAssemblyPlaceEnum::Value v10_AssemblyPlace, boost::optional< ::Ifc4x3_rc4::IfcFurnitureTypeEnum::Value > v11_PredefinedType) : IfcFurnishingElementType(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcAssemblyPlaceEnum::Class(),(size_t)v10_AssemblyPlace))); if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcFurnitureTypeEnum::Class(),(size_t)*v11_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcGeographicElement
boost::optional< ::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value > Ifc4x3_rc4::IfcGeographicElement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcGeographicElementTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcGeographicElement::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcGeographicElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[506]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeographicElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[506]); }
Ifc4x3_rc4::IfcGeographicElement::IfcGeographicElement(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcGeographicElement::IfcGeographicElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value > v9_PredefinedType) : IfcElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcGeographicElementType
::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value Ifc4x3_rc4::IfcGeographicElementType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcGeographicElementTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcGeographicElementType::setPredefinedType(::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcGeographicElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[507]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeographicElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[507]); }
Ifc4x3_rc4::IfcGeographicElementType::IfcGeographicElementType(IfcEntityInstanceData&& e) : IfcElementType(std::move(e)) { }
Ifc4x3_rc4::IfcGeographicElementType::IfcGeographicElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value v10_PredefinedType) : IfcElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcGeometricCurveSet


const IfcParse::entity& Ifc4x3_rc4::IfcGeometricCurveSet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[509]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeometricCurveSet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[509]); }
Ifc4x3_rc4::IfcGeometricCurveSet::IfcGeometricCurveSet(IfcEntityInstanceData&& e) : IfcGeometricSet(std::move(e)) { }
Ifc4x3_rc4::IfcGeometricCurveSet::IfcGeometricCurveSet(aggregate_of< ::Ifc4x3_rc4::IfcGeometricSetSelect >::ptr v1_Elements) : IfcGeometricSet(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Elements)->generalize());; populate_derived(); }

// Function implementations for IfcGeometricRepresentationContext
int Ifc4x3_rc4::IfcGeometricRepresentationContext::CoordinateSpaceDimension() const {  int v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcGeometricRepresentationContext::setCoordinateSpaceDimension(int v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
boost::optional< double > Ifc4x3_rc4::IfcGeometricRepresentationContext::Precision() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcGeometricRepresentationContext::setPrecision(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
::Ifc4x3_rc4::IfcAxis2Placement* Ifc4x3_rc4::IfcGeometricRepresentationContext::WorldCoordinateSystem() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcAxis2Placement>(true); }
void Ifc4x3_rc4::IfcGeometricRepresentationContext::setWorldCoordinateSystem(::Ifc4x3_rc4::IfcAxis2Placement* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcGeometricRepresentationContext::TrueNorth() const { if(data_.get_attribute_value(5).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcGeometricRepresentationContext::setTrueNorth(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }

::Ifc4x3_rc4::IfcGeometricRepresentationSubContext::list::ptr Ifc4x3_rc4::IfcGeometricRepresentationContext::HasSubContexts() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[513], 6)->as<IfcGeometricRepresentationSubContext>(); }
::Ifc4x3_rc4::IfcCoordinateOperation::list::ptr Ifc4x3_rc4::IfcGeometricRepresentationContext::HasCoordinateOperation() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[245], 0)->as<IfcCoordinateOperation>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcGeometricRepresentationContext::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[511]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeometricRepresentationContext::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[511]); }
Ifc4x3_rc4::IfcGeometricRepresentationContext::IfcGeometricRepresentationContext(IfcEntityInstanceData&& e) : IfcRepresentationContext(std::move(e)) { }
Ifc4x3_rc4::IfcGeometricRepresentationContext::IfcGeometricRepresentationContext(boost::optional< std::string > v1_ContextIdentifier, boost::optional< std::string > v2_ContextType, int v3_CoordinateSpaceDimension, boost::optional< double > v4_Precision, ::Ifc4x3_rc4::IfcAxis2Placement* v5_WorldCoordinateSystem, ::Ifc4x3_rc4::IfcDirection* v6_TrueNorth) : IfcRepresentationContext(IfcEntityInstanceData(storage_t(6))) {  if (v1_ContextIdentifier) {set_attribute_value(0, (*v1_ContextIdentifier)); } if (v2_ContextType) {set_attribute_value(1, (*v2_ContextType)); }set_attribute_value(2, (v3_CoordinateSpaceDimension)); if (v4_Precision) {set_attribute_value(3, (*v4_Precision)); }set_attribute_value(4, v5_WorldCoordinateSystem ? v5_WorldCoordinateSystem->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_TrueNorth ? v6_TrueNorth->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcGeometricRepresentationItem


const IfcParse::entity& Ifc4x3_rc4::IfcGeometricRepresentationItem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[512]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeometricRepresentationItem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[512]); }
Ifc4x3_rc4::IfcGeometricRepresentationItem::IfcGeometricRepresentationItem(IfcEntityInstanceData&& e) : IfcRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcGeometricRepresentationItem::IfcGeometricRepresentationItem() : IfcRepresentationItem(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcGeometricRepresentationSubContext
::Ifc4x3_rc4::IfcGeometricRepresentationContext* Ifc4x3_rc4::IfcGeometricRepresentationSubContext::ParentContext() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcGeometricRepresentationContext>(true); }
void Ifc4x3_rc4::IfcGeometricRepresentationSubContext::setParentContext(::Ifc4x3_rc4::IfcGeometricRepresentationContext* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
boost::optional< double > Ifc4x3_rc4::IfcGeometricRepresentationSubContext::TargetScale() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcGeometricRepresentationSubContext::setTargetScale(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
::Ifc4x3_rc4::IfcGeometricProjectionEnum::Value Ifc4x3_rc4::IfcGeometricRepresentationSubContext::TargetView() const {  return ::Ifc4x3_rc4::IfcGeometricProjectionEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcGeometricRepresentationSubContext::setTargetView(::Ifc4x3_rc4::IfcGeometricProjectionEnum::Value v) { set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcGeometricProjectionEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(8); }
boost::optional< std::string > Ifc4x3_rc4::IfcGeometricRepresentationSubContext::UserDefinedTargetView() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcGeometricRepresentationSubContext::setUserDefinedTargetView(boost::optional< std::string > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcGeometricRepresentationSubContext::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[513]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeometricRepresentationSubContext::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[513]); }
Ifc4x3_rc4::IfcGeometricRepresentationSubContext::IfcGeometricRepresentationSubContext(IfcEntityInstanceData&& e) : IfcGeometricRepresentationContext(std::move(e)) { }
Ifc4x3_rc4::IfcGeometricRepresentationSubContext::IfcGeometricRepresentationSubContext(boost::optional< std::string > v1_ContextIdentifier, boost::optional< std::string > v2_ContextType, ::Ifc4x3_rc4::IfcGeometricRepresentationContext* v7_ParentContext, boost::optional< double > v8_TargetScale, ::Ifc4x3_rc4::IfcGeometricProjectionEnum::Value v9_TargetView, boost::optional< std::string > v10_UserDefinedTargetView) : IfcGeometricRepresentationContext(IfcEntityInstanceData(storage_t(10))) {  if (v1_ContextIdentifier) {set_attribute_value(0, (*v1_ContextIdentifier)); } if (v2_ContextType) {set_attribute_value(1, (*v2_ContextType)); }set_attribute_value(6, v7_ParentContext ? v7_ParentContext->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_TargetScale) {set_attribute_value(7, (*v8_TargetScale)); }set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGeometricProjectionEnum::Class(),(size_t)v9_TargetView))); if (v10_UserDefinedTargetView) {set_attribute_value(9, (*v10_UserDefinedTargetView)); }; populate_derived(); }

// Function implementations for IfcGeometricSet
aggregate_of< ::Ifc4x3_rc4::IfcGeometricSetSelect >::ptr Ifc4x3_rc4::IfcGeometricSet::Elements() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcGeometricSetSelect >(); }
void Ifc4x3_rc4::IfcGeometricSet::setElements(aggregate_of< ::Ifc4x3_rc4::IfcGeometricSetSelect >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcGeometricSet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[514]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeometricSet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[514]); }
Ifc4x3_rc4::IfcGeometricSet::IfcGeometricSet(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcGeometricSet::IfcGeometricSet(aggregate_of< ::Ifc4x3_rc4::IfcGeometricSetSelect >::ptr v1_Elements) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Elements)->generalize());; populate_derived(); }

// Function implementations for IfcGeomodel


const IfcParse::entity& Ifc4x3_rc4::IfcGeomodel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[516]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeomodel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[516]); }
Ifc4x3_rc4::IfcGeomodel::IfcGeomodel(IfcEntityInstanceData&& e) : IfcGeotechnicalAssembly(std::move(e)) { }
Ifc4x3_rc4::IfcGeomodel::IfcGeomodel(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcGeotechnicalAssembly(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcGeoslice


const IfcParse::entity& Ifc4x3_rc4::IfcGeoslice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[517]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeoslice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[517]); }
Ifc4x3_rc4::IfcGeoslice::IfcGeoslice(IfcEntityInstanceData&& e) : IfcGeotechnicalAssembly(std::move(e)) { }
Ifc4x3_rc4::IfcGeoslice::IfcGeoslice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcGeotechnicalAssembly(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcGeotechnicalAssembly


const IfcParse::entity& Ifc4x3_rc4::IfcGeotechnicalAssembly::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[518]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeotechnicalAssembly::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[518]); }
Ifc4x3_rc4::IfcGeotechnicalAssembly::IfcGeotechnicalAssembly(IfcEntityInstanceData&& e) : IfcGeotechnicalElement(std::move(e)) { }
Ifc4x3_rc4::IfcGeotechnicalAssembly::IfcGeotechnicalAssembly(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcGeotechnicalElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcGeotechnicalElement


const IfcParse::entity& Ifc4x3_rc4::IfcGeotechnicalElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[519]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeotechnicalElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[519]); }
Ifc4x3_rc4::IfcGeotechnicalElement::IfcGeotechnicalElement(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcGeotechnicalElement::IfcGeotechnicalElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcGeotechnicalStratum


const IfcParse::entity& Ifc4x3_rc4::IfcGeotechnicalStratum::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[520]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGeotechnicalStratum::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[520]); }
Ifc4x3_rc4::IfcGeotechnicalStratum::IfcGeotechnicalStratum(IfcEntityInstanceData&& e) : IfcGeotechnicalElement(std::move(e)) { }
Ifc4x3_rc4::IfcGeotechnicalStratum::IfcGeotechnicalStratum(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcGeotechnicalElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcGradientCurve
::Ifc4x3_rc4::IfcBoundedCurve* Ifc4x3_rc4::IfcGradientCurve::BaseCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcBoundedCurve>(true); }
void Ifc4x3_rc4::IfcGradientCurve::setBaseCurve(::Ifc4x3_rc4::IfcBoundedCurve* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcPlacement* Ifc4x3_rc4::IfcGradientCurve::EndPoint() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcPlacement>(true); }
void Ifc4x3_rc4::IfcGradientCurve::setEndPoint(::Ifc4x3_rc4::IfcPlacement* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcGradientCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[523]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGradientCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[523]); }
Ifc4x3_rc4::IfcGradientCurve::IfcGradientCurve(IfcEntityInstanceData&& e) : IfcCompositeCurve(std::move(e)) { }
Ifc4x3_rc4::IfcGradientCurve::IfcGradientCurve(aggregate_of< ::Ifc4x3_rc4::IfcSegment >::ptr v1_Segments, boost::logic::tribool v2_SelfIntersect, ::Ifc4x3_rc4::IfcBoundedCurve* v3_BaseCurve, ::Ifc4x3_rc4::IfcPlacement* v4_EndPoint) : IfcCompositeCurve(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_Segments)->generalize());set_attribute_value(1, (v2_SelfIntersect));set_attribute_value(2, v3_BaseCurve ? v3_BaseCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_EndPoint ? v4_EndPoint->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcGrid
aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr Ifc4x3_rc4::IfcGrid::UAxes() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcGridAxis >(); }
void Ifc4x3_rc4::IfcGrid::setUAxes(aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr v) { set_attribute_value(7, (v)->generalize());if constexpr (false)unset_attribute_value(7); }
aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr Ifc4x3_rc4::IfcGrid::VAxes() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(8); return es->as< ::Ifc4x3_rc4::IfcGridAxis >(); }
void Ifc4x3_rc4::IfcGrid::setVAxes(aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr v) { set_attribute_value(8, (v)->generalize());if constexpr (false)unset_attribute_value(8); }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr > Ifc4x3_rc4::IfcGrid::WAxes() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(9); return es->as< ::Ifc4x3_rc4::IfcGridAxis >(); }
void Ifc4x3_rc4::IfcGrid::setWAxes(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr > v) { if (v) {set_attribute_value(9, (*v)->generalize());} else {unset_attribute_value(9);} }
boost::optional< ::Ifc4x3_rc4::IfcGridTypeEnum::Value > Ifc4x3_rc4::IfcGrid::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcGridTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcGrid::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcGridTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcGridTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcGrid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[524]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGrid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[524]); }
Ifc4x3_rc4::IfcGrid::IfcGrid(IfcEntityInstanceData&& e) : IfcPositioningElement(std::move(e)) { }
Ifc4x3_rc4::IfcGrid::IfcGrid(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr v8_UAxes, aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr v9_VAxes, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr > v10_WAxes, boost::optional< ::Ifc4x3_rc4::IfcGridTypeEnum::Value > v11_PredefinedType) : IfcPositioningElement(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (v8_UAxes)->generalize());set_attribute_value(8, (v9_VAxes)->generalize()); if (v10_WAxes) {set_attribute_value(9, (*v10_WAxes)->generalize()); } if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcGridTypeEnum::Class(),(size_t)*v11_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcGridAxis
boost::optional< std::string > Ifc4x3_rc4::IfcGridAxis::AxisTag() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcGridAxis::setAxisTag(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcGridAxis::AxisCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcGridAxis::setAxisCurve(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
bool Ifc4x3_rc4::IfcGridAxis::SameSense() const {  bool v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcGridAxis::setSameSense(bool v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }

::Ifc4x3_rc4::IfcGrid::list::ptr Ifc4x3_rc4::IfcGridAxis::PartOfW() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[524], 9)->as<IfcGrid>(); }
::Ifc4x3_rc4::IfcGrid::list::ptr Ifc4x3_rc4::IfcGridAxis::PartOfV() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[524], 8)->as<IfcGrid>(); }
::Ifc4x3_rc4::IfcGrid::list::ptr Ifc4x3_rc4::IfcGridAxis::PartOfU() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[524], 7)->as<IfcGrid>(); }
::Ifc4x3_rc4::IfcVirtualGridIntersection::list::ptr Ifc4x3_rc4::IfcGridAxis::HasIntersections() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1276], 0)->as<IfcVirtualGridIntersection>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcGridAxis::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[525]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGridAxis::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[525]); }
Ifc4x3_rc4::IfcGridAxis::IfcGridAxis(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcGridAxis::IfcGridAxis(boost::optional< std::string > v1_AxisTag, ::Ifc4x3_rc4::IfcCurve* v2_AxisCurve, bool v3_SameSense) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(3))) {  if (v1_AxisTag) {set_attribute_value(0, (*v1_AxisTag)); }set_attribute_value(1, v2_AxisCurve ? v2_AxisCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, (v3_SameSense));; populate_derived(); }

// Function implementations for IfcGridPlacement
::Ifc4x3_rc4::IfcVirtualGridIntersection* Ifc4x3_rc4::IfcGridPlacement::PlacementLocation() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcVirtualGridIntersection>(true); }
void Ifc4x3_rc4::IfcGridPlacement::setPlacementLocation(::Ifc4x3_rc4::IfcVirtualGridIntersection* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcGridPlacementDirectionSelect* Ifc4x3_rc4::IfcGridPlacement::PlacementRefDirection() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcGridPlacementDirectionSelect>(true); }
void Ifc4x3_rc4::IfcGridPlacement::setPlacementRefDirection(::Ifc4x3_rc4::IfcGridPlacementDirectionSelect* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcGridPlacement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[526]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGridPlacement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[526]); }
Ifc4x3_rc4::IfcGridPlacement::IfcGridPlacement(IfcEntityInstanceData&& e) : IfcObjectPlacement(std::move(e)) { }
Ifc4x3_rc4::IfcGridPlacement::IfcGridPlacement(::Ifc4x3_rc4::IfcObjectPlacement* v1_PlacementRelTo, ::Ifc4x3_rc4::IfcVirtualGridIntersection* v2_PlacementLocation, ::Ifc4x3_rc4::IfcGridPlacementDirectionSelect* v3_PlacementRefDirection) : IfcObjectPlacement(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_PlacementRelTo ? v1_PlacementRelTo->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_PlacementLocation ? v2_PlacementLocation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_PlacementRefDirection ? v3_PlacementRefDirection->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcGroup

::Ifc4x3_rc4::IfcRelAssignsToGroup::list::ptr Ifc4x3_rc4::IfcGroup::IsGroupedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[908], 6)->as<IfcRelAssignsToGroup>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcGroup::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[529]); }
const IfcParse::entity& Ifc4x3_rc4::IfcGroup::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[529]); }
Ifc4x3_rc4::IfcGroup::IfcGroup(IfcEntityInstanceData&& e) : IfcObject(std::move(e)) { }
Ifc4x3_rc4::IfcGroup::IfcGroup(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType) : IfcObject(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }; populate_derived(); }

// Function implementations for IfcHalfSpaceSolid
::Ifc4x3_rc4::IfcSurface* Ifc4x3_rc4::IfcHalfSpaceSolid::BaseSurface() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcSurface>(true); }
void Ifc4x3_rc4::IfcHalfSpaceSolid::setBaseSurface(::Ifc4x3_rc4::IfcSurface* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
bool Ifc4x3_rc4::IfcHalfSpaceSolid::AgreementFlag() const {  bool v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcHalfSpaceSolid::setAgreementFlag(bool v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcHalfSpaceSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[530]); }
const IfcParse::entity& Ifc4x3_rc4::IfcHalfSpaceSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[530]); }
Ifc4x3_rc4::IfcHalfSpaceSolid::IfcHalfSpaceSolid(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcHalfSpaceSolid::IfcHalfSpaceSolid(::Ifc4x3_rc4::IfcSurface* v1_BaseSurface, bool v2_AgreementFlag) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_BaseSurface ? v1_BaseSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_AgreementFlag));; populate_derived(); }

// Function implementations for IfcHeatExchanger
boost::optional< ::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Value > Ifc4x3_rc4::IfcHeatExchanger::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcHeatExchanger::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcHeatExchanger::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[532]); }
const IfcParse::entity& Ifc4x3_rc4::IfcHeatExchanger::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[532]); }
Ifc4x3_rc4::IfcHeatExchanger::IfcHeatExchanger(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcHeatExchanger::IfcHeatExchanger(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcHeatExchangerType
::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Value Ifc4x3_rc4::IfcHeatExchangerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcHeatExchangerType::setPredefinedType(::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcHeatExchangerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[533]); }
const IfcParse::entity& Ifc4x3_rc4::IfcHeatExchangerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[533]); }
Ifc4x3_rc4::IfcHeatExchangerType::IfcHeatExchangerType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcHeatExchangerType::IfcHeatExchangerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcHeatExchangerTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcHumidifier
boost::optional< ::Ifc4x3_rc4::IfcHumidifierTypeEnum::Value > Ifc4x3_rc4::IfcHumidifier::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcHumidifierTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcHumidifier::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcHumidifierTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcHumidifierTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcHumidifier::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[537]); }
const IfcParse::entity& Ifc4x3_rc4::IfcHumidifier::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[537]); }
Ifc4x3_rc4::IfcHumidifier::IfcHumidifier(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcHumidifier::IfcHumidifier(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcHumidifierTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcHumidifierTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcHumidifierType
::Ifc4x3_rc4::IfcHumidifierTypeEnum::Value Ifc4x3_rc4::IfcHumidifierType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcHumidifierTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcHumidifierType::setPredefinedType(::Ifc4x3_rc4::IfcHumidifierTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcHumidifierTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcHumidifierType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[538]); }
const IfcParse::entity& Ifc4x3_rc4::IfcHumidifierType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[538]); }
Ifc4x3_rc4::IfcHumidifierType::IfcHumidifierType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcHumidifierType::IfcHumidifierType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcHumidifierTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcHumidifierTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcIShapeProfileDef
double Ifc4x3_rc4::IfcIShapeProfileDef::OverallWidth() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcIShapeProfileDef::setOverallWidth(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcIShapeProfileDef::OverallDepth() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcIShapeProfileDef::setOverallDepth(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
double Ifc4x3_rc4::IfcIShapeProfileDef::WebThickness() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcIShapeProfileDef::setWebThickness(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcIShapeProfileDef::FlangeThickness() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcIShapeProfileDef::setFlangeThickness(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< double > Ifc4x3_rc4::IfcIShapeProfileDef::FilletRadius() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcIShapeProfileDef::setFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< double > Ifc4x3_rc4::IfcIShapeProfileDef::FlangeEdgeRadius() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcIShapeProfileDef::setFlangeEdgeRadius(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< double > Ifc4x3_rc4::IfcIShapeProfileDef::FlangeSlope() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcIShapeProfileDef::setFlangeSlope(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcIShapeProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[567]); }
const IfcParse::entity& Ifc4x3_rc4::IfcIShapeProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[567]); }
Ifc4x3_rc4::IfcIShapeProfileDef::IfcIShapeProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcIShapeProfileDef::IfcIShapeProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_OverallWidth, double v5_OverallDepth, double v6_WebThickness, double v7_FlangeThickness, boost::optional< double > v8_FilletRadius, boost::optional< double > v9_FlangeEdgeRadius, boost::optional< double > v10_FlangeSlope) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_OverallWidth));set_attribute_value(4, (v5_OverallDepth));set_attribute_value(5, (v6_WebThickness));set_attribute_value(6, (v7_FlangeThickness)); if (v8_FilletRadius) {set_attribute_value(7, (*v8_FilletRadius)); } if (v9_FlangeEdgeRadius) {set_attribute_value(8, (*v9_FlangeEdgeRadius)); } if (v10_FlangeSlope) {set_attribute_value(9, (*v10_FlangeSlope)); }; populate_derived(); }

// Function implementations for IfcImageTexture
std::string Ifc4x3_rc4::IfcImageTexture::URLReference() const {  std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcImageTexture::setURLReference(std::string v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcImageTexture::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[542]); }
const IfcParse::entity& Ifc4x3_rc4::IfcImageTexture::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[542]); }
Ifc4x3_rc4::IfcImageTexture::IfcImageTexture(IfcEntityInstanceData&& e) : IfcSurfaceTexture(std::move(e)) { }
Ifc4x3_rc4::IfcImageTexture::IfcImageTexture(bool v1_RepeatS, bool v2_RepeatT, boost::optional< std::string > v3_Mode, ::Ifc4x3_rc4::IfcCartesianTransformationOperator2D* v4_TextureTransform, boost::optional< std::vector< std::string > /*[1:?]*/ > v5_Parameter, std::string v6_URLReference) : IfcSurfaceTexture(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_RepeatS));set_attribute_value(1, (v2_RepeatT)); if (v3_Mode) {set_attribute_value(2, (*v3_Mode)); }set_attribute_value(3, v4_TextureTransform ? v4_TextureTransform->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Parameter) {set_attribute_value(4, (*v5_Parameter)); }set_attribute_value(5, (v6_URLReference));; populate_derived(); }

// Function implementations for IfcImpactProtectionDevice
::Ifc4x3_rc4::IfcImpactProtectionDeviceTypeSelect* Ifc4x3_rc4::IfcImpactProtectionDevice::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcImpactProtectionDeviceTypeSelect>(true); }
void Ifc4x3_rc4::IfcImpactProtectionDevice::setPredefinedType(::Ifc4x3_rc4::IfcImpactProtectionDeviceTypeSelect* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcImpactProtectionDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[543]); }
const IfcParse::entity& Ifc4x3_rc4::IfcImpactProtectionDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[543]); }
Ifc4x3_rc4::IfcImpactProtectionDevice::IfcImpactProtectionDevice(IfcEntityInstanceData&& e) : IfcElementComponent(std::move(e)) { }
Ifc4x3_rc4::IfcImpactProtectionDevice::IfcImpactProtectionDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, ::Ifc4x3_rc4::IfcImpactProtectionDeviceTypeSelect* v9_PredefinedType) : IfcElementComponent(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }set_attribute_value(8, v9_PredefinedType ? v9_PredefinedType->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcImpactProtectionDeviceType
::Ifc4x3_rc4::IfcImpactProtectionDeviceTypeSelect* Ifc4x3_rc4::IfcImpactProtectionDeviceType::PredefinedType() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcImpactProtectionDeviceTypeSelect>(true); }
void Ifc4x3_rc4::IfcImpactProtectionDeviceType::setPredefinedType(::Ifc4x3_rc4::IfcImpactProtectionDeviceTypeSelect* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcImpactProtectionDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[544]); }
const IfcParse::entity& Ifc4x3_rc4::IfcImpactProtectionDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[544]); }
Ifc4x3_rc4::IfcImpactProtectionDeviceType::IfcImpactProtectionDeviceType(IfcEntityInstanceData&& e) : IfcElementComponentType(std::move(e)) { }
Ifc4x3_rc4::IfcImpactProtectionDeviceType::IfcImpactProtectionDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcImpactProtectionDeviceTypeSelect* v10_PredefinedType) : IfcElementComponentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, v10_PredefinedType ? v10_PredefinedType->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcIndexedColourMap
::Ifc4x3_rc4::IfcTessellatedFaceSet* Ifc4x3_rc4::IfcIndexedColourMap::MappedTo() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcTessellatedFaceSet>(true); }
void Ifc4x3_rc4::IfcIndexedColourMap::setMappedTo(::Ifc4x3_rc4::IfcTessellatedFaceSet* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
boost::optional< double > Ifc4x3_rc4::IfcIndexedColourMap::Opacity() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcIndexedColourMap::setOpacity(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
::Ifc4x3_rc4::IfcColourRgbList* Ifc4x3_rc4::IfcIndexedColourMap::Colours() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcColourRgbList>(true); }
void Ifc4x3_rc4::IfcIndexedColourMap::setColours(::Ifc4x3_rc4::IfcColourRgbList* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
std::vector< int > /*[1:?]*/ Ifc4x3_rc4::IfcIndexedColourMap::ColourIndex() const {  std::vector< int > /*[1:?]*/ v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcIndexedColourMap::setColourIndex(std::vector< int > /*[1:?]*/ v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcIndexedColourMap::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[547]); }
const IfcParse::entity& Ifc4x3_rc4::IfcIndexedColourMap::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[547]); }
Ifc4x3_rc4::IfcIndexedColourMap::IfcIndexedColourMap(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcIndexedColourMap::IfcIndexedColourMap(::Ifc4x3_rc4::IfcTessellatedFaceSet* v1_MappedTo, boost::optional< double > v2_Opacity, ::Ifc4x3_rc4::IfcColourRgbList* v3_Colours, std::vector< int > /*[1:?]*/ v4_ColourIndex) : IfcPresentationItem(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_MappedTo ? v1_MappedTo->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_Opacity) {set_attribute_value(1, (*v2_Opacity)); }set_attribute_value(2, v3_Colours ? v3_Colours->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_ColourIndex));; populate_derived(); }

// Function implementations for IfcIndexedPolyCurve
::Ifc4x3_rc4::IfcCartesianPointList* Ifc4x3_rc4::IfcIndexedPolyCurve::Points() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCartesianPointList>(true); }
void Ifc4x3_rc4::IfcIndexedPolyCurve::setPoints(::Ifc4x3_rc4::IfcCartesianPointList* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcSegmentIndexSelect >::ptr > Ifc4x3_rc4::IfcIndexedPolyCurve::Segments() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcSegmentIndexSelect >(); }
void Ifc4x3_rc4::IfcIndexedPolyCurve::setSegments(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcSegmentIndexSelect >::ptr > v) { if (v) {set_attribute_value(1, (*v)->generalize());} else {unset_attribute_value(1);} }
boost::optional< bool > Ifc4x3_rc4::IfcIndexedPolyCurve::SelfIntersect() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } bool v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcIndexedPolyCurve::setSelfIntersect(boost::optional< bool > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcIndexedPolyCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[548]); }
const IfcParse::entity& Ifc4x3_rc4::IfcIndexedPolyCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[548]); }
Ifc4x3_rc4::IfcIndexedPolyCurve::IfcIndexedPolyCurve(IfcEntityInstanceData&& e) : IfcBoundedCurve(std::move(e)) { }
Ifc4x3_rc4::IfcIndexedPolyCurve::IfcIndexedPolyCurve(::Ifc4x3_rc4::IfcCartesianPointList* v1_Points, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcSegmentIndexSelect >::ptr > v2_Segments, boost::optional< bool > v3_SelfIntersect) : IfcBoundedCurve(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Points ? v1_Points->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_Segments) {set_attribute_value(1, (*v2_Segments)->generalize()); } if (v3_SelfIntersect) {set_attribute_value(2, (*v3_SelfIntersect)); }; populate_derived(); }

// Function implementations for IfcIndexedPolygonalFace
std::vector< int > /*[3:?]*/ Ifc4x3_rc4::IfcIndexedPolygonalFace::CoordIndex() const {  std::vector< int > /*[3:?]*/ v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcIndexedPolygonalFace::setCoordIndex(std::vector< int > /*[3:?]*/ v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }

::Ifc4x3_rc4::IfcPolygonalFaceSet::list::ptr Ifc4x3_rc4::IfcIndexedPolygonalFace::ToFaceSet() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[776], 2)->as<IfcPolygonalFaceSet>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcIndexedPolygonalFace::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[549]); }
const IfcParse::entity& Ifc4x3_rc4::IfcIndexedPolygonalFace::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[549]); }
Ifc4x3_rc4::IfcIndexedPolygonalFace::IfcIndexedPolygonalFace(IfcEntityInstanceData&& e) : IfcTessellatedItem(std::move(e)) { }
Ifc4x3_rc4::IfcIndexedPolygonalFace::IfcIndexedPolygonalFace(std::vector< int > /*[3:?]*/ v1_CoordIndex) : IfcTessellatedItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_CoordIndex));; populate_derived(); }

// Function implementations for IfcIndexedPolygonalFaceWithVoids
std::vector< std::vector< int > > Ifc4x3_rc4::IfcIndexedPolygonalFaceWithVoids::InnerCoordIndices() const {  std::vector< std::vector< int > > v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcIndexedPolygonalFaceWithVoids::setInnerCoordIndices(std::vector< std::vector< int > > v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcIndexedPolygonalFaceWithVoids::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[550]); }
const IfcParse::entity& Ifc4x3_rc4::IfcIndexedPolygonalFaceWithVoids::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[550]); }
Ifc4x3_rc4::IfcIndexedPolygonalFaceWithVoids::IfcIndexedPolygonalFaceWithVoids(IfcEntityInstanceData&& e) : IfcIndexedPolygonalFace(std::move(e)) { }
Ifc4x3_rc4::IfcIndexedPolygonalFaceWithVoids::IfcIndexedPolygonalFaceWithVoids(std::vector< int > /*[3:?]*/ v1_CoordIndex, std::vector< std::vector< int > > v2_InnerCoordIndices) : IfcIndexedPolygonalFace(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_CoordIndex));set_attribute_value(1, (v2_InnerCoordIndices));; populate_derived(); }

// Function implementations for IfcIndexedTextureMap
::Ifc4x3_rc4::IfcTessellatedFaceSet* Ifc4x3_rc4::IfcIndexedTextureMap::MappedTo() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcTessellatedFaceSet>(true); }
void Ifc4x3_rc4::IfcIndexedTextureMap::setMappedTo(::Ifc4x3_rc4::IfcTessellatedFaceSet* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcTextureVertexList* Ifc4x3_rc4::IfcIndexedTextureMap::TexCoords() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcTextureVertexList>(true); }
void Ifc4x3_rc4::IfcIndexedTextureMap::setTexCoords(::Ifc4x3_rc4::IfcTextureVertexList* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcIndexedTextureMap::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[551]); }
const IfcParse::entity& Ifc4x3_rc4::IfcIndexedTextureMap::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[551]); }
Ifc4x3_rc4::IfcIndexedTextureMap::IfcIndexedTextureMap(IfcEntityInstanceData&& e) : IfcTextureCoordinate(std::move(e)) { }
Ifc4x3_rc4::IfcIndexedTextureMap::IfcIndexedTextureMap(aggregate_of< ::Ifc4x3_rc4::IfcSurfaceTexture >::ptr v1_Maps, ::Ifc4x3_rc4::IfcTessellatedFaceSet* v2_MappedTo, ::Ifc4x3_rc4::IfcTextureVertexList* v3_TexCoords) : IfcTextureCoordinate(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_Maps)->generalize());set_attribute_value(1, v2_MappedTo ? v2_MappedTo->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_TexCoords ? v3_TexCoords->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcIndexedTriangleTextureMap
boost::optional< std::vector< std::vector< int > > > Ifc4x3_rc4::IfcIndexedTriangleTextureMap::TexCoordIndex() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::vector< std::vector< int > > v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcIndexedTriangleTextureMap::setTexCoordIndex(boost::optional< std::vector< std::vector< int > > > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcIndexedTriangleTextureMap::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[552]); }
const IfcParse::entity& Ifc4x3_rc4::IfcIndexedTriangleTextureMap::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[552]); }
Ifc4x3_rc4::IfcIndexedTriangleTextureMap::IfcIndexedTriangleTextureMap(IfcEntityInstanceData&& e) : IfcIndexedTextureMap(std::move(e)) { }
Ifc4x3_rc4::IfcIndexedTriangleTextureMap::IfcIndexedTriangleTextureMap(aggregate_of< ::Ifc4x3_rc4::IfcSurfaceTexture >::ptr v1_Maps, ::Ifc4x3_rc4::IfcTessellatedFaceSet* v2_MappedTo, ::Ifc4x3_rc4::IfcTextureVertexList* v3_TexCoords, boost::optional< std::vector< std::vector< int > > > v4_TexCoordIndex) : IfcIndexedTextureMap(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_Maps)->generalize());set_attribute_value(1, v2_MappedTo ? v2_MappedTo->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_TexCoords ? v3_TexCoords->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v4_TexCoordIndex) {set_attribute_value(3, (*v4_TexCoordIndex)); }; populate_derived(); }

// Function implementations for IfcInterceptor
boost::optional< ::Ifc4x3_rc4::IfcInterceptorTypeEnum::Value > Ifc4x3_rc4::IfcInterceptor::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcInterceptorTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcInterceptor::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcInterceptorTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcInterceptorTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcInterceptor::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[556]); }
const IfcParse::entity& Ifc4x3_rc4::IfcInterceptor::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[556]); }
Ifc4x3_rc4::IfcInterceptor::IfcInterceptor(IfcEntityInstanceData&& e) : IfcFlowTreatmentDevice(std::move(e)) { }
Ifc4x3_rc4::IfcInterceptor::IfcInterceptor(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcInterceptorTypeEnum::Value > v9_PredefinedType) : IfcFlowTreatmentDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcInterceptorTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcInterceptorType
::Ifc4x3_rc4::IfcInterceptorTypeEnum::Value Ifc4x3_rc4::IfcInterceptorType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcInterceptorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcInterceptorType::setPredefinedType(::Ifc4x3_rc4::IfcInterceptorTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcInterceptorTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcInterceptorType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[557]); }
const IfcParse::entity& Ifc4x3_rc4::IfcInterceptorType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[557]); }
Ifc4x3_rc4::IfcInterceptorType::IfcInterceptorType(IfcEntityInstanceData&& e) : IfcFlowTreatmentDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcInterceptorType::IfcInterceptorType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcInterceptorTypeEnum::Value v10_PredefinedType) : IfcFlowTreatmentDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcInterceptorTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcIntersectionCurve


const IfcParse::entity& Ifc4x3_rc4::IfcIntersectionCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[561]); }
const IfcParse::entity& Ifc4x3_rc4::IfcIntersectionCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[561]); }
Ifc4x3_rc4::IfcIntersectionCurve::IfcIntersectionCurve(IfcEntityInstanceData&& e) : IfcSurfaceCurve(std::move(e)) { }
Ifc4x3_rc4::IfcIntersectionCurve::IfcIntersectionCurve(::Ifc4x3_rc4::IfcCurve* v1_Curve3D, aggregate_of< ::Ifc4x3_rc4::IfcPcurve >::ptr v2_AssociatedGeometry, ::Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Value v3_MasterRepresentation) : IfcSurfaceCurve(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Curve3D ? v1_Curve3D->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_AssociatedGeometry)->generalize());set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Class(),(size_t)v3_MasterRepresentation)));; populate_derived(); }

// Function implementations for IfcInventory
boost::optional< ::Ifc4x3_rc4::IfcInventoryTypeEnum::Value > Ifc4x3_rc4::IfcInventory::PredefinedType() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcInventoryTypeEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcInventory::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcInventoryTypeEnum::Value > v) { if (v) {set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcInventoryTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(5);} }
::Ifc4x3_rc4::IfcActorSelect* Ifc4x3_rc4::IfcInventory::Jurisdiction() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcActorSelect>(true); }
void Ifc4x3_rc4::IfcInventory::setJurisdiction(::Ifc4x3_rc4::IfcActorSelect* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPerson >::ptr > Ifc4x3_rc4::IfcInventory::ResponsiblePersons() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcPerson >(); }
void Ifc4x3_rc4::IfcInventory::setResponsiblePersons(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPerson >::ptr > v) { if (v) {set_attribute_value(7, (*v)->generalize());} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcInventory::LastUpdateDate() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcInventory::setLastUpdateDate(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
::Ifc4x3_rc4::IfcCostValue* Ifc4x3_rc4::IfcInventory::CurrentValue() const { if(data_.get_attribute_value(9).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcCostValue>(true); }
void Ifc4x3_rc4::IfcInventory::setCurrentValue(::Ifc4x3_rc4::IfcCostValue* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }
::Ifc4x3_rc4::IfcCostValue* Ifc4x3_rc4::IfcInventory::OriginalValue() const { if(data_.get_attribute_value(10).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(10)))->as<::Ifc4x3_rc4::IfcCostValue>(true); }
void Ifc4x3_rc4::IfcInventory::setOriginalValue(::Ifc4x3_rc4::IfcCostValue* v) { set_attribute_value(10, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(10); }


const IfcParse::entity& Ifc4x3_rc4::IfcInventory::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[562]); }
const IfcParse::entity& Ifc4x3_rc4::IfcInventory::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[562]); }
Ifc4x3_rc4::IfcInventory::IfcInventory(IfcEntityInstanceData&& e) : IfcGroup(std::move(e)) { }
Ifc4x3_rc4::IfcInventory::IfcInventory(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< ::Ifc4x3_rc4::IfcInventoryTypeEnum::Value > v6_PredefinedType, ::Ifc4x3_rc4::IfcActorSelect* v7_Jurisdiction, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPerson >::ptr > v8_ResponsiblePersons, boost::optional< std::string > v9_LastUpdateDate, ::Ifc4x3_rc4::IfcCostValue* v10_CurrentValue, ::Ifc4x3_rc4::IfcCostValue* v11_OriginalValue) : IfcGroup(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_PredefinedType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcInventoryTypeEnum::Class(),(size_t)*v6_PredefinedType))); }set_attribute_value(6, v7_Jurisdiction ? v7_Jurisdiction->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_ResponsiblePersons) {set_attribute_value(7, (*v8_ResponsiblePersons)->generalize()); } if (v9_LastUpdateDate) {set_attribute_value(8, (*v9_LastUpdateDate)); }set_attribute_value(9, v10_CurrentValue ? v10_CurrentValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(10, v11_OriginalValue ? v11_OriginalValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcIrregularTimeSeries
aggregate_of< ::Ifc4x3_rc4::IfcIrregularTimeSeriesValue >::ptr Ifc4x3_rc4::IfcIrregularTimeSeries::Values() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(8); return es->as< ::Ifc4x3_rc4::IfcIrregularTimeSeriesValue >(); }
void Ifc4x3_rc4::IfcIrregularTimeSeries::setValues(aggregate_of< ::Ifc4x3_rc4::IfcIrregularTimeSeriesValue >::ptr v) { set_attribute_value(8, (v)->generalize());if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcIrregularTimeSeries::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[565]); }
const IfcParse::entity& Ifc4x3_rc4::IfcIrregularTimeSeries::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[565]); }
Ifc4x3_rc4::IfcIrregularTimeSeries::IfcIrregularTimeSeries(IfcEntityInstanceData&& e) : IfcTimeSeries(std::move(e)) { }
Ifc4x3_rc4::IfcIrregularTimeSeries::IfcIrregularTimeSeries(std::string v1_Name, boost::optional< std::string > v2_Description, std::string v3_StartTime, std::string v4_EndTime, ::Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Value v5_TimeSeriesDataType, ::Ifc4x3_rc4::IfcDataOriginEnum::Value v6_DataOrigin, boost::optional< std::string > v7_UserDefinedDataOrigin, ::Ifc4x3_rc4::IfcUnit* v8_Unit, aggregate_of< ::Ifc4x3_rc4::IfcIrregularTimeSeriesValue >::ptr v9_Values) : IfcTimeSeries(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_StartTime));set_attribute_value(3, (v4_EndTime));set_attribute_value(4, (EnumerationReference(&::Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Class(),(size_t)v5_TimeSeriesDataType)));set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(),(size_t)v6_DataOrigin))); if (v7_UserDefinedDataOrigin) {set_attribute_value(6, (*v7_UserDefinedDataOrigin)); }set_attribute_value(7, v8_Unit ? v8_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (v9_Values)->generalize());; populate_derived(); }

// Function implementations for IfcIrregularTimeSeriesValue
std::string Ifc4x3_rc4::IfcIrregularTimeSeriesValue::TimeStamp() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcIrregularTimeSeriesValue::setTimeStamp(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr Ifc4x3_rc4::IfcIrregularTimeSeriesValue::ListValues() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcValue >(); }
void Ifc4x3_rc4::IfcIrregularTimeSeriesValue::setListValues(aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcIrregularTimeSeriesValue::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[566]); }
const IfcParse::entity& Ifc4x3_rc4::IfcIrregularTimeSeriesValue::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[566]); }
Ifc4x3_rc4::IfcIrregularTimeSeriesValue::IfcIrregularTimeSeriesValue(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcIrregularTimeSeriesValue::IfcIrregularTimeSeriesValue(std::string v1_TimeStamp, aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr v2_ListValues) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_TimeStamp));set_attribute_value(1, (v2_ListValues)->generalize());; populate_derived(); }

// Function implementations for IfcJunctionBox
boost::optional< ::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Value > Ifc4x3_rc4::IfcJunctionBox::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcJunctionBox::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcJunctionBox::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[569]); }
const IfcParse::entity& Ifc4x3_rc4::IfcJunctionBox::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[569]); }
Ifc4x3_rc4::IfcJunctionBox::IfcJunctionBox(IfcEntityInstanceData&& e) : IfcFlowFitting(std::move(e)) { }
Ifc4x3_rc4::IfcJunctionBox::IfcJunctionBox(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Value > v9_PredefinedType) : IfcFlowFitting(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcJunctionBoxType
::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Value Ifc4x3_rc4::IfcJunctionBoxType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcJunctionBoxType::setPredefinedType(::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcJunctionBoxType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[570]); }
const IfcParse::entity& Ifc4x3_rc4::IfcJunctionBoxType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[570]); }
Ifc4x3_rc4::IfcJunctionBoxType::IfcJunctionBoxType(IfcEntityInstanceData&& e) : IfcFlowFittingType(std::move(e)) { }
Ifc4x3_rc4::IfcJunctionBoxType::IfcJunctionBoxType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Value v10_PredefinedType) : IfcFlowFittingType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcJunctionBoxTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcKerb
bool Ifc4x3_rc4::IfcKerb::Mountable() const {  bool v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcKerb::setMountable(bool v) { set_attribute_value(8, v);if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcKerb::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[572]); }
const IfcParse::entity& Ifc4x3_rc4::IfcKerb::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[572]); }
Ifc4x3_rc4::IfcKerb::IfcKerb(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcKerb::IfcKerb(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, bool v9_Mountable) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }set_attribute_value(8, (v9_Mountable));; populate_derived(); }

// Function implementations for IfcKerbType
bool Ifc4x3_rc4::IfcKerbType::Mountable() const {  bool v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcKerbType::setMountable(bool v) { set_attribute_value(9, v);if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcKerbType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[573]); }
const IfcParse::entity& Ifc4x3_rc4::IfcKerbType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[573]); }
Ifc4x3_rc4::IfcKerbType::IfcKerbType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcKerbType::IfcKerbType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, bool v10_Mountable) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (v10_Mountable));; populate_derived(); }

// Function implementations for IfcLShapeProfileDef
double Ifc4x3_rc4::IfcLShapeProfileDef::Depth() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcLShapeProfileDef::setDepth(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< double > Ifc4x3_rc4::IfcLShapeProfileDef::Width() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcLShapeProfileDef::setWidth(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
double Ifc4x3_rc4::IfcLShapeProfileDef::Thickness() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcLShapeProfileDef::setThickness(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
boost::optional< double > Ifc4x3_rc4::IfcLShapeProfileDef::FilletRadius() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcLShapeProfileDef::setFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< double > Ifc4x3_rc4::IfcLShapeProfileDef::EdgeRadius() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcLShapeProfileDef::setEdgeRadius(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< double > Ifc4x3_rc4::IfcLShapeProfileDef::LegSlope() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcLShapeProfileDef::setLegSlope(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcLShapeProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[622]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLShapeProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[622]); }
Ifc4x3_rc4::IfcLShapeProfileDef::IfcLShapeProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcLShapeProfileDef::IfcLShapeProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_Depth, boost::optional< double > v5_Width, double v6_Thickness, boost::optional< double > v7_FilletRadius, boost::optional< double > v8_EdgeRadius, boost::optional< double > v9_LegSlope) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Depth)); if (v5_Width) {set_attribute_value(4, (*v5_Width)); }set_attribute_value(5, (v6_Thickness)); if (v7_FilletRadius) {set_attribute_value(6, (*v7_FilletRadius)); } if (v8_EdgeRadius) {set_attribute_value(7, (*v8_EdgeRadius)); } if (v9_LegSlope) {set_attribute_value(8, (*v9_LegSlope)); }; populate_derived(); }

// Function implementations for IfcLaborResource
boost::optional< ::Ifc4x3_rc4::IfcLaborResourceTypeEnum::Value > Ifc4x3_rc4::IfcLaborResource::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcLaborResourceTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcLaborResource::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcLaborResourceTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcLaborResourceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcLaborResource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[577]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLaborResource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[577]); }
Ifc4x3_rc4::IfcLaborResource::IfcLaborResource(IfcEntityInstanceData&& e) : IfcConstructionResource(std::move(e)) { }
Ifc4x3_rc4::IfcLaborResource::IfcLaborResource(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription, ::Ifc4x3_rc4::IfcResourceTime* v8_Usage, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v9_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v10_BaseQuantity, boost::optional< ::Ifc4x3_rc4::IfcLaborResourceTypeEnum::Value > v11_PredefinedType) : IfcConstructionResource(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); }set_attribute_value(7, v8_Usage ? v8_Usage->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v9_BaseCosts) {set_attribute_value(8, (*v9_BaseCosts)->generalize()); }set_attribute_value(9, v10_BaseQuantity ? v10_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcLaborResourceTypeEnum::Class(),(size_t)*v11_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcLaborResourceType
::Ifc4x3_rc4::IfcLaborResourceTypeEnum::Value Ifc4x3_rc4::IfcLaborResourceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcLaborResourceTypeEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcLaborResourceType::setPredefinedType(::Ifc4x3_rc4::IfcLaborResourceTypeEnum::Value v) { set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcLaborResourceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcLaborResourceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[578]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLaborResourceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[578]); }
Ifc4x3_rc4::IfcLaborResourceType::IfcLaborResourceType(IfcEntityInstanceData&& e) : IfcConstructionResourceType(std::move(e)) { }
Ifc4x3_rc4::IfcLaborResourceType::IfcLaborResourceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ResourceType, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v10_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v11_BaseQuantity, ::Ifc4x3_rc4::IfcLaborResourceTypeEnum::Value v12_PredefinedType) : IfcConstructionResourceType(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ResourceType) {set_attribute_value(8, (*v9_ResourceType)); } if (v10_BaseCosts) {set_attribute_value(9, (*v10_BaseCosts)->generalize()); }set_attribute_value(10, v11_BaseQuantity ? v11_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcLaborResourceTypeEnum::Class(),(size_t)v12_PredefinedType)));; populate_derived(); }

// Function implementations for IfcLagTime
::Ifc4x3_rc4::IfcTimeOrRatioSelect* Ifc4x3_rc4::IfcLagTime::LagValue() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcTimeOrRatioSelect>(true); }
void Ifc4x3_rc4::IfcLagTime::setLagValue(::Ifc4x3_rc4::IfcTimeOrRatioSelect* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcTaskDurationEnum::Value Ifc4x3_rc4::IfcLagTime::DurationType() const {  return ::Ifc4x3_rc4::IfcTaskDurationEnum::FromString(data_.get_attribute_value(4)); }
void Ifc4x3_rc4::IfcLagTime::setDurationType(::Ifc4x3_rc4::IfcTaskDurationEnum::Value v) { set_attribute_value(4, EnumerationReference(&::Ifc4x3_rc4::IfcTaskDurationEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcLagTime::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[580]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLagTime::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[580]); }
Ifc4x3_rc4::IfcLagTime::IfcLagTime(IfcEntityInstanceData&& e) : IfcSchedulingTime(std::move(e)) { }
Ifc4x3_rc4::IfcLagTime::IfcLagTime(boost::optional< std::string > v1_Name, boost::optional< ::Ifc4x3_rc4::IfcDataOriginEnum::Value > v2_DataOrigin, boost::optional< std::string > v3_UserDefinedDataOrigin, ::Ifc4x3_rc4::IfcTimeOrRatioSelect* v4_LagValue, ::Ifc4x3_rc4::IfcTaskDurationEnum::Value v5_DurationType) : IfcSchedulingTime(IfcEntityInstanceData(storage_t(5))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_DataOrigin) {set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(),(size_t)*v2_DataOrigin))); } if (v3_UserDefinedDataOrigin) {set_attribute_value(2, (*v3_UserDefinedDataOrigin)); }set_attribute_value(3, v4_LagValue ? v4_LagValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, (EnumerationReference(&::Ifc4x3_rc4::IfcTaskDurationEnum::Class(),(size_t)v5_DurationType)));; populate_derived(); }

// Function implementations for IfcLamp
boost::optional< ::Ifc4x3_rc4::IfcLampTypeEnum::Value > Ifc4x3_rc4::IfcLamp::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcLampTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcLamp::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcLampTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcLampTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcLamp::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[581]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLamp::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[581]); }
Ifc4x3_rc4::IfcLamp::IfcLamp(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcLamp::IfcLamp(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcLampTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcLampTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcLampType
::Ifc4x3_rc4::IfcLampTypeEnum::Value Ifc4x3_rc4::IfcLampType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcLampTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcLampType::setPredefinedType(::Ifc4x3_rc4::IfcLampTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcLampTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcLampType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[582]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLampType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[582]); }
Ifc4x3_rc4::IfcLampType::IfcLampType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcLampType::IfcLampType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcLampTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcLampTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcLibraryInformation
std::string Ifc4x3_rc4::IfcLibraryInformation::Name() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcLibraryInformation::setName(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcLibraryInformation::Version() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcLibraryInformation::setVersion(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
::Ifc4x3_rc4::IfcActorSelect* Ifc4x3_rc4::IfcLibraryInformation::Publisher() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcActorSelect>(true); }
void Ifc4x3_rc4::IfcLibraryInformation::setPublisher(::Ifc4x3_rc4::IfcActorSelect* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
boost::optional< std::string > Ifc4x3_rc4::IfcLibraryInformation::VersionDate() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcLibraryInformation::setVersionDate(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::string > Ifc4x3_rc4::IfcLibraryInformation::Location() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcLibraryInformation::setLocation(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcLibraryInformation::Description() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcLibraryInformation::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }

::Ifc4x3_rc4::IfcRelAssociatesLibrary::list::ptr Ifc4x3_rc4::IfcLibraryInformation::LibraryInfoForObjects() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[918], 5)->as<IfcRelAssociatesLibrary>(); }
::Ifc4x3_rc4::IfcLibraryReference::list::ptr Ifc4x3_rc4::IfcLibraryInformation::HasLibraryReferences() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[589], 5)->as<IfcLibraryReference>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcLibraryInformation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[588]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLibraryInformation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[588]); }
Ifc4x3_rc4::IfcLibraryInformation::IfcLibraryInformation(IfcEntityInstanceData&& e) : IfcExternalInformation(std::move(e)) { }
Ifc4x3_rc4::IfcLibraryInformation::IfcLibraryInformation(std::string v1_Name, boost::optional< std::string > v2_Version, ::Ifc4x3_rc4::IfcActorSelect* v3_Publisher, boost::optional< std::string > v4_VersionDate, boost::optional< std::string > v5_Location, boost::optional< std::string > v6_Description) : IfcExternalInformation(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_Name)); if (v2_Version) {set_attribute_value(1, (*v2_Version)); }set_attribute_value(2, v3_Publisher ? v3_Publisher->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v4_VersionDate) {set_attribute_value(3, (*v4_VersionDate)); } if (v5_Location) {set_attribute_value(4, (*v5_Location)); } if (v6_Description) {set_attribute_value(5, (*v6_Description)); }; populate_derived(); }

// Function implementations for IfcLibraryReference
boost::optional< std::string > Ifc4x3_rc4::IfcLibraryReference::Description() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcLibraryReference::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::string > Ifc4x3_rc4::IfcLibraryReference::Language() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcLibraryReference::setLanguage(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
::Ifc4x3_rc4::IfcLibraryInformation* Ifc4x3_rc4::IfcLibraryReference::ReferencedLibrary() const { if(data_.get_attribute_value(5).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcLibraryInformation>(true); }
void Ifc4x3_rc4::IfcLibraryReference::setReferencedLibrary(::Ifc4x3_rc4::IfcLibraryInformation* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }

::Ifc4x3_rc4::IfcRelAssociatesLibrary::list::ptr Ifc4x3_rc4::IfcLibraryReference::LibraryRefForObjects() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[918], 5)->as<IfcRelAssociatesLibrary>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcLibraryReference::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[589]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLibraryReference::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[589]); }
Ifc4x3_rc4::IfcLibraryReference::IfcLibraryReference(IfcEntityInstanceData&& e) : IfcExternalReference(std::move(e)) { }
Ifc4x3_rc4::IfcLibraryReference::IfcLibraryReference(boost::optional< std::string > v1_Location, boost::optional< std::string > v2_Identification, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_Language, ::Ifc4x3_rc4::IfcLibraryInformation* v6_ReferencedLibrary) : IfcExternalReference(IfcEntityInstanceData(storage_t(6))) {  if (v1_Location) {set_attribute_value(0, (*v1_Location)); } if (v2_Identification) {set_attribute_value(1, (*v2_Identification)); } if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_Language) {set_attribute_value(4, (*v5_Language)); }set_attribute_value(5, v6_ReferencedLibrary ? v6_ReferencedLibrary->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcLightDistributionData
double Ifc4x3_rc4::IfcLightDistributionData::MainPlaneAngle() const {  double v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcLightDistributionData::setMainPlaneAngle(double v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
std::vector< double > /*[1:?]*/ Ifc4x3_rc4::IfcLightDistributionData::SecondaryPlaneAngle() const {  std::vector< double > /*[1:?]*/ v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcLightDistributionData::setSecondaryPlaneAngle(std::vector< double > /*[1:?]*/ v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
std::vector< double > /*[1:?]*/ Ifc4x3_rc4::IfcLightDistributionData::LuminousIntensity() const {  std::vector< double > /*[1:?]*/ v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcLightDistributionData::setLuminousIntensity(std::vector< double > /*[1:?]*/ v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcLightDistributionData::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[592]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLightDistributionData::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[592]); }
Ifc4x3_rc4::IfcLightDistributionData::IfcLightDistributionData(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcLightDistributionData::IfcLightDistributionData(double v1_MainPlaneAngle, std::vector< double > /*[1:?]*/ v2_SecondaryPlaneAngle, std::vector< double > /*[1:?]*/ v3_LuminousIntensity) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_MainPlaneAngle));set_attribute_value(1, (v2_SecondaryPlaneAngle));set_attribute_value(2, (v3_LuminousIntensity));; populate_derived(); }

// Function implementations for IfcLightFixture
boost::optional< ::Ifc4x3_rc4::IfcLightFixtureTypeEnum::Value > Ifc4x3_rc4::IfcLightFixture::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcLightFixtureTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcLightFixture::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcLightFixtureTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcLightFixtureTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcLightFixture::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[595]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLightFixture::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[595]); }
Ifc4x3_rc4::IfcLightFixture::IfcLightFixture(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcLightFixture::IfcLightFixture(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcLightFixtureTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcLightFixtureTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcLightFixtureType
::Ifc4x3_rc4::IfcLightFixtureTypeEnum::Value Ifc4x3_rc4::IfcLightFixtureType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcLightFixtureTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcLightFixtureType::setPredefinedType(::Ifc4x3_rc4::IfcLightFixtureTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcLightFixtureTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcLightFixtureType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[596]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLightFixtureType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[596]); }
Ifc4x3_rc4::IfcLightFixtureType::IfcLightFixtureType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcLightFixtureType::IfcLightFixtureType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcLightFixtureTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcLightFixtureTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcLightIntensityDistribution
::Ifc4x3_rc4::IfcLightDistributionCurveEnum::Value Ifc4x3_rc4::IfcLightIntensityDistribution::LightDistributionCurve() const {  return ::Ifc4x3_rc4::IfcLightDistributionCurveEnum::FromString(data_.get_attribute_value(0)); }
void Ifc4x3_rc4::IfcLightIntensityDistribution::setLightDistributionCurve(::Ifc4x3_rc4::IfcLightDistributionCurveEnum::Value v) { set_attribute_value(0, EnumerationReference(&::Ifc4x3_rc4::IfcLightDistributionCurveEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcLightDistributionData >::ptr Ifc4x3_rc4::IfcLightIntensityDistribution::DistributionData() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcLightDistributionData >(); }
void Ifc4x3_rc4::IfcLightIntensityDistribution::setDistributionData(aggregate_of< ::Ifc4x3_rc4::IfcLightDistributionData >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcLightIntensityDistribution::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[598]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLightIntensityDistribution::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[598]); }
Ifc4x3_rc4::IfcLightIntensityDistribution::IfcLightIntensityDistribution(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcLightIntensityDistribution::IfcLightIntensityDistribution(::Ifc4x3_rc4::IfcLightDistributionCurveEnum::Value v1_LightDistributionCurve, aggregate_of< ::Ifc4x3_rc4::IfcLightDistributionData >::ptr v2_DistributionData) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcLightDistributionCurveEnum::Class(),(size_t)v1_LightDistributionCurve)));set_attribute_value(1, (v2_DistributionData)->generalize());; populate_derived(); }

// Function implementations for IfcLightSource
boost::optional< std::string > Ifc4x3_rc4::IfcLightSource::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcLightSource::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
::Ifc4x3_rc4::IfcColourRgb* Ifc4x3_rc4::IfcLightSource::LightColour() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcColourRgb>(true); }
void Ifc4x3_rc4::IfcLightSource::setLightColour(::Ifc4x3_rc4::IfcColourRgb* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
boost::optional< double > Ifc4x3_rc4::IfcLightSource::AmbientIntensity() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcLightSource::setAmbientIntensity(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcLightSource::Intensity() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcLightSource::setIntensity(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcLightSource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[599]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLightSource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[599]); }
Ifc4x3_rc4::IfcLightSource::IfcLightSource(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcLightSource::IfcLightSource(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcColourRgb* v2_LightColour, boost::optional< double > v3_AmbientIntensity, boost::optional< double > v4_Intensity) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_LightColour ? v2_LightColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_AmbientIntensity) {set_attribute_value(2, (*v3_AmbientIntensity)); } if (v4_Intensity) {set_attribute_value(3, (*v4_Intensity)); }; populate_derived(); }

// Function implementations for IfcLightSourceAmbient


const IfcParse::entity& Ifc4x3_rc4::IfcLightSourceAmbient::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[600]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLightSourceAmbient::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[600]); }
Ifc4x3_rc4::IfcLightSourceAmbient::IfcLightSourceAmbient(IfcEntityInstanceData&& e) : IfcLightSource(std::move(e)) { }
Ifc4x3_rc4::IfcLightSourceAmbient::IfcLightSourceAmbient(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcColourRgb* v2_LightColour, boost::optional< double > v3_AmbientIntensity, boost::optional< double > v4_Intensity) : IfcLightSource(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_LightColour ? v2_LightColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_AmbientIntensity) {set_attribute_value(2, (*v3_AmbientIntensity)); } if (v4_Intensity) {set_attribute_value(3, (*v4_Intensity)); }; populate_derived(); }

// Function implementations for IfcLightSourceDirectional
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcLightSourceDirectional::Orientation() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcLightSourceDirectional::setOrientation(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcLightSourceDirectional::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[601]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLightSourceDirectional::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[601]); }
Ifc4x3_rc4::IfcLightSourceDirectional::IfcLightSourceDirectional(IfcEntityInstanceData&& e) : IfcLightSource(std::move(e)) { }
Ifc4x3_rc4::IfcLightSourceDirectional::IfcLightSourceDirectional(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcColourRgb* v2_LightColour, boost::optional< double > v3_AmbientIntensity, boost::optional< double > v4_Intensity, ::Ifc4x3_rc4::IfcDirection* v5_Orientation) : IfcLightSource(IfcEntityInstanceData(storage_t(5))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_LightColour ? v2_LightColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_AmbientIntensity) {set_attribute_value(2, (*v3_AmbientIntensity)); } if (v4_Intensity) {set_attribute_value(3, (*v4_Intensity)); }set_attribute_value(4, v5_Orientation ? v5_Orientation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcLightSourceGoniometric
::Ifc4x3_rc4::IfcAxis2Placement3D* Ifc4x3_rc4::IfcLightSourceGoniometric::Position() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcAxis2Placement3D>(true); }
void Ifc4x3_rc4::IfcLightSourceGoniometric::setPosition(::Ifc4x3_rc4::IfcAxis2Placement3D* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcColourRgb* Ifc4x3_rc4::IfcLightSourceGoniometric::ColourAppearance() const { if(data_.get_attribute_value(5).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcColourRgb>(true); }
void Ifc4x3_rc4::IfcLightSourceGoniometric::setColourAppearance(::Ifc4x3_rc4::IfcColourRgb* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcLightSourceGoniometric::ColourTemperature() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcLightSourceGoniometric::setColourTemperature(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
double Ifc4x3_rc4::IfcLightSourceGoniometric::LuminousFlux() const {  double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcLightSourceGoniometric::setLuminousFlux(double v) { set_attribute_value(7, v);if constexpr (false)unset_attribute_value(7); }
::Ifc4x3_rc4::IfcLightEmissionSourceEnum::Value Ifc4x3_rc4::IfcLightSourceGoniometric::LightEmissionSource() const {  return ::Ifc4x3_rc4::IfcLightEmissionSourceEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcLightSourceGoniometric::setLightEmissionSource(::Ifc4x3_rc4::IfcLightEmissionSourceEnum::Value v) { set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcLightEmissionSourceEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(8); }
::Ifc4x3_rc4::IfcLightDistributionDataSourceSelect* Ifc4x3_rc4::IfcLightSourceGoniometric::LightDistributionDataSource() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcLightDistributionDataSourceSelect>(true); }
void Ifc4x3_rc4::IfcLightSourceGoniometric::setLightDistributionDataSource(::Ifc4x3_rc4::IfcLightDistributionDataSourceSelect* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcLightSourceGoniometric::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[602]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLightSourceGoniometric::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[602]); }
Ifc4x3_rc4::IfcLightSourceGoniometric::IfcLightSourceGoniometric(IfcEntityInstanceData&& e) : IfcLightSource(std::move(e)) { }
Ifc4x3_rc4::IfcLightSourceGoniometric::IfcLightSourceGoniometric(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcColourRgb* v2_LightColour, boost::optional< double > v3_AmbientIntensity, boost::optional< double > v4_Intensity, ::Ifc4x3_rc4::IfcAxis2Placement3D* v5_Position, ::Ifc4x3_rc4::IfcColourRgb* v6_ColourAppearance, double v7_ColourTemperature, double v8_LuminousFlux, ::Ifc4x3_rc4::IfcLightEmissionSourceEnum::Value v9_LightEmissionSource, ::Ifc4x3_rc4::IfcLightDistributionDataSourceSelect* v10_LightDistributionDataSource) : IfcLightSource(IfcEntityInstanceData(storage_t(10))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_LightColour ? v2_LightColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_AmbientIntensity) {set_attribute_value(2, (*v3_AmbientIntensity)); } if (v4_Intensity) {set_attribute_value(3, (*v4_Intensity)); }set_attribute_value(4, v5_Position ? v5_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_ColourAppearance ? v6_ColourAppearance->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, (v7_ColourTemperature));set_attribute_value(7, (v8_LuminousFlux));set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcLightEmissionSourceEnum::Class(),(size_t)v9_LightEmissionSource)));set_attribute_value(9, v10_LightDistributionDataSource ? v10_LightDistributionDataSource->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcLightSourcePositional
::Ifc4x3_rc4::IfcCartesianPoint* Ifc4x3_rc4::IfcLightSourcePositional::Position() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcCartesianPoint>(true); }
void Ifc4x3_rc4::IfcLightSourcePositional::setPosition(::Ifc4x3_rc4::IfcCartesianPoint* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
double Ifc4x3_rc4::IfcLightSourcePositional::Radius() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcLightSourcePositional::setRadius(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcLightSourcePositional::ConstantAttenuation() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcLightSourcePositional::setConstantAttenuation(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
double Ifc4x3_rc4::IfcLightSourcePositional::DistanceAttenuation() const {  double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcLightSourcePositional::setDistanceAttenuation(double v) { set_attribute_value(7, v);if constexpr (false)unset_attribute_value(7); }
double Ifc4x3_rc4::IfcLightSourcePositional::QuadricAttenuation() const {  double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcLightSourcePositional::setQuadricAttenuation(double v) { set_attribute_value(8, v);if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcLightSourcePositional::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[603]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLightSourcePositional::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[603]); }
Ifc4x3_rc4::IfcLightSourcePositional::IfcLightSourcePositional(IfcEntityInstanceData&& e) : IfcLightSource(std::move(e)) { }
Ifc4x3_rc4::IfcLightSourcePositional::IfcLightSourcePositional(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcColourRgb* v2_LightColour, boost::optional< double > v3_AmbientIntensity, boost::optional< double > v4_Intensity, ::Ifc4x3_rc4::IfcCartesianPoint* v5_Position, double v6_Radius, double v7_ConstantAttenuation, double v8_DistanceAttenuation, double v9_QuadricAttenuation) : IfcLightSource(IfcEntityInstanceData(storage_t(9))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_LightColour ? v2_LightColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_AmbientIntensity) {set_attribute_value(2, (*v3_AmbientIntensity)); } if (v4_Intensity) {set_attribute_value(3, (*v4_Intensity)); }set_attribute_value(4, v5_Position ? v5_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_Radius));set_attribute_value(6, (v7_ConstantAttenuation));set_attribute_value(7, (v8_DistanceAttenuation));set_attribute_value(8, (v9_QuadricAttenuation));; populate_derived(); }

// Function implementations for IfcLightSourceSpot
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcLightSourceSpot::Orientation() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcLightSourceSpot::setOrientation(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }
boost::optional< double > Ifc4x3_rc4::IfcLightSourceSpot::ConcentrationExponent() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcLightSourceSpot::setConcentrationExponent(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
double Ifc4x3_rc4::IfcLightSourceSpot::SpreadAngle() const {  double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcLightSourceSpot::setSpreadAngle(double v) { set_attribute_value(11, v);if constexpr (false)unset_attribute_value(11); }
double Ifc4x3_rc4::IfcLightSourceSpot::BeamWidthAngle() const {  double v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcLightSourceSpot::setBeamWidthAngle(double v) { set_attribute_value(12, v);if constexpr (false)unset_attribute_value(12); }


const IfcParse::entity& Ifc4x3_rc4::IfcLightSourceSpot::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[604]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLightSourceSpot::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[604]); }
Ifc4x3_rc4::IfcLightSourceSpot::IfcLightSourceSpot(IfcEntityInstanceData&& e) : IfcLightSourcePositional(std::move(e)) { }
Ifc4x3_rc4::IfcLightSourceSpot::IfcLightSourceSpot(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcColourRgb* v2_LightColour, boost::optional< double > v3_AmbientIntensity, boost::optional< double > v4_Intensity, ::Ifc4x3_rc4::IfcCartesianPoint* v5_Position, double v6_Radius, double v7_ConstantAttenuation, double v8_DistanceAttenuation, double v9_QuadricAttenuation, ::Ifc4x3_rc4::IfcDirection* v10_Orientation, boost::optional< double > v11_ConcentrationExponent, double v12_SpreadAngle, double v13_BeamWidthAngle) : IfcLightSourcePositional(IfcEntityInstanceData(storage_t(13))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_LightColour ? v2_LightColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_AmbientIntensity) {set_attribute_value(2, (*v3_AmbientIntensity)); } if (v4_Intensity) {set_attribute_value(3, (*v4_Intensity)); }set_attribute_value(4, v5_Position ? v5_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_Radius));set_attribute_value(6, (v7_ConstantAttenuation));set_attribute_value(7, (v8_DistanceAttenuation));set_attribute_value(8, (v9_QuadricAttenuation));set_attribute_value(9, v10_Orientation ? v10_Orientation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v11_ConcentrationExponent) {set_attribute_value(10, (*v11_ConcentrationExponent)); }set_attribute_value(11, (v12_SpreadAngle));set_attribute_value(12, (v13_BeamWidthAngle));; populate_derived(); }

// Function implementations for IfcLine
::Ifc4x3_rc4::IfcCartesianPoint* Ifc4x3_rc4::IfcLine::Pnt() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCartesianPoint>(true); }
void Ifc4x3_rc4::IfcLine::setPnt(::Ifc4x3_rc4::IfcCartesianPoint* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcVector* Ifc4x3_rc4::IfcLine::Dir() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcVector>(true); }
void Ifc4x3_rc4::IfcLine::setDir(::Ifc4x3_rc4::IfcVector* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcLine::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[605]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLine::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[605]); }
Ifc4x3_rc4::IfcLine::IfcLine(IfcEntityInstanceData&& e) : IfcCurve(std::move(e)) { }
Ifc4x3_rc4::IfcLine::IfcLine(::Ifc4x3_rc4::IfcCartesianPoint* v1_Pnt, ::Ifc4x3_rc4::IfcVector* v2_Dir) : IfcCurve(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Pnt ? v1_Pnt->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Dir ? v2_Dir->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcLinearElement


const IfcParse::entity& Ifc4x3_rc4::IfcLinearElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[606]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLinearElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[606]); }
Ifc4x3_rc4::IfcLinearElement::IfcLinearElement(IfcEntityInstanceData&& e) : IfcProduct(std::move(e)) { }
Ifc4x3_rc4::IfcLinearElement::IfcLinearElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation) : IfcProduct(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcLinearPlacement
::Ifc4x3_rc4::IfcAxis2PlacementLinear* Ifc4x3_rc4::IfcLinearPlacement::RelativePlacement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcAxis2PlacementLinear>(true); }
void Ifc4x3_rc4::IfcLinearPlacement::setRelativePlacement(::Ifc4x3_rc4::IfcAxis2PlacementLinear* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcAxis2Placement3D* Ifc4x3_rc4::IfcLinearPlacement::CartesianPosition() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcAxis2Placement3D>(true); }
void Ifc4x3_rc4::IfcLinearPlacement::setCartesianPosition(::Ifc4x3_rc4::IfcAxis2Placement3D* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcLinearPlacement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[609]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLinearPlacement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[609]); }
Ifc4x3_rc4::IfcLinearPlacement::IfcLinearPlacement(IfcEntityInstanceData&& e) : IfcObjectPlacement(std::move(e)) { }
Ifc4x3_rc4::IfcLinearPlacement::IfcLinearPlacement(::Ifc4x3_rc4::IfcObjectPlacement* v1_PlacementRelTo, ::Ifc4x3_rc4::IfcAxis2PlacementLinear* v2_RelativePlacement, ::Ifc4x3_rc4::IfcAxis2Placement3D* v3_CartesianPosition) : IfcObjectPlacement(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_PlacementRelTo ? v1_PlacementRelTo->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_RelativePlacement ? v2_RelativePlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_CartesianPosition ? v3_CartesianPosition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcLinearPositioningElement


const IfcParse::entity& Ifc4x3_rc4::IfcLinearPositioningElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[610]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLinearPositioningElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[610]); }
Ifc4x3_rc4::IfcLinearPositioningElement::IfcLinearPositioningElement(IfcEntityInstanceData&& e) : IfcPositioningElement(std::move(e)) { }
Ifc4x3_rc4::IfcLinearPositioningElement::IfcLinearPositioningElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation) : IfcPositioningElement(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcLiquidTerminal
boost::optional< ::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Value > Ifc4x3_rc4::IfcLiquidTerminal::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcLiquidTerminal::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcLiquidTerminal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[614]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLiquidTerminal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[614]); }
Ifc4x3_rc4::IfcLiquidTerminal::IfcLiquidTerminal(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcLiquidTerminal::IfcLiquidTerminal(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcLiquidTerminalType
::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Value Ifc4x3_rc4::IfcLiquidTerminalType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcLiquidTerminalType::setPredefinedType(::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcLiquidTerminalType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[615]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLiquidTerminalType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[615]); }
Ifc4x3_rc4::IfcLiquidTerminalType::IfcLiquidTerminalType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcLiquidTerminalType::IfcLiquidTerminalType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcLiquidTerminalTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcLocalPlacement
::Ifc4x3_rc4::IfcAxis2Placement* Ifc4x3_rc4::IfcLocalPlacement::RelativePlacement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcAxis2Placement>(true); }
void Ifc4x3_rc4::IfcLocalPlacement::setRelativePlacement(::Ifc4x3_rc4::IfcAxis2Placement* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcLocalPlacement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[618]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLocalPlacement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[618]); }
Ifc4x3_rc4::IfcLocalPlacement::IfcLocalPlacement(IfcEntityInstanceData&& e) : IfcObjectPlacement(std::move(e)) { }
Ifc4x3_rc4::IfcLocalPlacement::IfcLocalPlacement(::Ifc4x3_rc4::IfcObjectPlacement* v1_PlacementRelTo, ::Ifc4x3_rc4::IfcAxis2Placement* v2_RelativePlacement) : IfcObjectPlacement(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_PlacementRelTo ? v1_PlacementRelTo->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_RelativePlacement ? v2_RelativePlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcLoop


const IfcParse::entity& Ifc4x3_rc4::IfcLoop::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[621]); }
const IfcParse::entity& Ifc4x3_rc4::IfcLoop::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[621]); }
Ifc4x3_rc4::IfcLoop::IfcLoop(IfcEntityInstanceData&& e) : IfcTopologicalRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcLoop::IfcLoop() : IfcTopologicalRepresentationItem(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcManifoldSolidBrep
::Ifc4x3_rc4::IfcClosedShell* Ifc4x3_rc4::IfcManifoldSolidBrep::Outer() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcClosedShell>(true); }
void Ifc4x3_rc4::IfcManifoldSolidBrep::setOuter(::Ifc4x3_rc4::IfcClosedShell* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcManifoldSolidBrep::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[628]); }
const IfcParse::entity& Ifc4x3_rc4::IfcManifoldSolidBrep::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[628]); }
Ifc4x3_rc4::IfcManifoldSolidBrep::IfcManifoldSolidBrep(IfcEntityInstanceData&& e) : IfcSolidModel(std::move(e)) { }
Ifc4x3_rc4::IfcManifoldSolidBrep::IfcManifoldSolidBrep(::Ifc4x3_rc4::IfcClosedShell* v1_Outer) : IfcSolidModel(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_Outer ? v1_Outer->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcMapConversion
double Ifc4x3_rc4::IfcMapConversion::Eastings() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcMapConversion::setEastings(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcMapConversion::Northings() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcMapConversion::setNorthings(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcMapConversion::OrthogonalHeight() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcMapConversion::setOrthogonalHeight(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
boost::optional< double > Ifc4x3_rc4::IfcMapConversion::XAxisAbscissa() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcMapConversion::setXAxisAbscissa(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< double > Ifc4x3_rc4::IfcMapConversion::XAxisOrdinate() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcMapConversion::setXAxisOrdinate(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< double > Ifc4x3_rc4::IfcMapConversion::Scale() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcMapConversion::setScale(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< double > Ifc4x3_rc4::IfcMapConversion::ScaleY() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcMapConversion::setScaleY(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< double > Ifc4x3_rc4::IfcMapConversion::ScaleZ() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcMapConversion::setScaleZ(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMapConversion::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[629]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMapConversion::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[629]); }
Ifc4x3_rc4::IfcMapConversion::IfcMapConversion(IfcEntityInstanceData&& e) : IfcCoordinateOperation(std::move(e)) { }
Ifc4x3_rc4::IfcMapConversion::IfcMapConversion(::Ifc4x3_rc4::IfcCoordinateReferenceSystemSelect* v1_SourceCRS, ::Ifc4x3_rc4::IfcCoordinateReferenceSystem* v2_TargetCRS, double v3_Eastings, double v4_Northings, double v5_OrthogonalHeight, boost::optional< double > v6_XAxisAbscissa, boost::optional< double > v7_XAxisOrdinate, boost::optional< double > v8_Scale, boost::optional< double > v9_ScaleY, boost::optional< double > v10_ScaleZ) : IfcCoordinateOperation(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, v1_SourceCRS ? v1_SourceCRS->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_TargetCRS ? v2_TargetCRS->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, (v3_Eastings));set_attribute_value(3, (v4_Northings));set_attribute_value(4, (v5_OrthogonalHeight)); if (v6_XAxisAbscissa) {set_attribute_value(5, (*v6_XAxisAbscissa)); } if (v7_XAxisOrdinate) {set_attribute_value(6, (*v7_XAxisOrdinate)); } if (v8_Scale) {set_attribute_value(7, (*v8_Scale)); } if (v9_ScaleY) {set_attribute_value(8, (*v9_ScaleY)); } if (v10_ScaleZ) {set_attribute_value(9, (*v10_ScaleZ)); }; populate_derived(); }

// Function implementations for IfcMappedItem
::Ifc4x3_rc4::IfcRepresentationMap* Ifc4x3_rc4::IfcMappedItem::MappingSource() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcRepresentationMap>(true); }
void Ifc4x3_rc4::IfcMappedItem::setMappingSource(::Ifc4x3_rc4::IfcRepresentationMap* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcCartesianTransformationOperator* Ifc4x3_rc4::IfcMappedItem::MappingTarget() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcCartesianTransformationOperator>(true); }
void Ifc4x3_rc4::IfcMappedItem::setMappingTarget(::Ifc4x3_rc4::IfcCartesianTransformationOperator* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcMappedItem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[630]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMappedItem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[630]); }
Ifc4x3_rc4::IfcMappedItem::IfcMappedItem(IfcEntityInstanceData&& e) : IfcRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcMappedItem::IfcMappedItem(::Ifc4x3_rc4::IfcRepresentationMap* v1_MappingSource, ::Ifc4x3_rc4::IfcCartesianTransformationOperator* v2_MappingTarget) : IfcRepresentationItem(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_MappingSource ? v1_MappingSource->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_MappingTarget ? v2_MappingTarget->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcMarineFacility
boost::optional< ::Ifc4x3_rc4::IfcMarineFacilityTypeEnum::Value > Ifc4x3_rc4::IfcMarineFacility::PredefinedType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcMarineFacilityTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcMarineFacility::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcMarineFacilityTypeEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcMarineFacilityTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMarineFacility::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[631]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMarineFacility::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[631]); }
Ifc4x3_rc4::IfcMarineFacility::IfcMarineFacility(IfcEntityInstanceData&& e) : IfcFacility(std::move(e)) { }
Ifc4x3_rc4::IfcMarineFacility::IfcMarineFacility(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType, boost::optional< ::Ifc4x3_rc4::IfcMarineFacilityTypeEnum::Value > v10_PredefinedType) : IfcFacility(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); } if (v10_PredefinedType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcMarineFacilityTypeEnum::Class(),(size_t)*v10_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcMaterial
std::string Ifc4x3_rc4::IfcMaterial::Name() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcMaterial::setName(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterial::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcMaterial::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterial::Category() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcMaterial::setCategory(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }

::Ifc4x3_rc4::IfcMaterialDefinitionRepresentation::list::ptr Ifc4x3_rc4::IfcMaterial::HasRepresentation() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[643], 3)->as<IfcMaterialDefinitionRepresentation>(); }
::Ifc4x3_rc4::IfcMaterialRelationship::list::ptr Ifc4x3_rc4::IfcMaterial::IsRelatedWith() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[655], 3)->as<IfcMaterialRelationship>(); }
::Ifc4x3_rc4::IfcMaterialRelationship::list::ptr Ifc4x3_rc4::IfcMaterial::RelatesTo() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[655], 2)->as<IfcMaterialRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcMaterial::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[638]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterial::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[638]); }
Ifc4x3_rc4::IfcMaterial::IfcMaterial(IfcEntityInstanceData&& e) : IfcMaterialDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcMaterial::IfcMaterial(std::string v1_Name, boost::optional< std::string > v2_Description, boost::optional< std::string > v3_Category) : IfcMaterialDefinition(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_Category) {set_attribute_value(2, (*v3_Category)); }; populate_derived(); }

// Function implementations for IfcMaterialClassificationRelationship
aggregate_of< ::Ifc4x3_rc4::IfcClassificationSelect >::ptr Ifc4x3_rc4::IfcMaterialClassificationRelationship::MaterialClassifications() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcClassificationSelect >(); }
void Ifc4x3_rc4::IfcMaterialClassificationRelationship::setMaterialClassifications(aggregate_of< ::Ifc4x3_rc4::IfcClassificationSelect >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcMaterial* Ifc4x3_rc4::IfcMaterialClassificationRelationship::ClassifiedMaterial() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcMaterial>(true); }
void Ifc4x3_rc4::IfcMaterialClassificationRelationship::setClassifiedMaterial(::Ifc4x3_rc4::IfcMaterial* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialClassificationRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[639]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialClassificationRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[639]); }
Ifc4x3_rc4::IfcMaterialClassificationRelationship::IfcMaterialClassificationRelationship(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialClassificationRelationship::IfcMaterialClassificationRelationship(aggregate_of< ::Ifc4x3_rc4::IfcClassificationSelect >::ptr v1_MaterialClassifications, ::Ifc4x3_rc4::IfcMaterial* v2_ClassifiedMaterial) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_MaterialClassifications)->generalize());set_attribute_value(1, v2_ClassifiedMaterial ? v2_ClassifiedMaterial->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcMaterialConstituent
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialConstituent::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcMaterialConstituent::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialConstituent::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcMaterialConstituent::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
::Ifc4x3_rc4::IfcMaterial* Ifc4x3_rc4::IfcMaterialConstituent::Material() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcMaterial>(true); }
void Ifc4x3_rc4::IfcMaterialConstituent::setMaterial(::Ifc4x3_rc4::IfcMaterial* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
boost::optional< double > Ifc4x3_rc4::IfcMaterialConstituent::Fraction() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcMaterialConstituent::setFraction(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialConstituent::Category() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcMaterialConstituent::setCategory(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }

::Ifc4x3_rc4::IfcMaterialConstituentSet::list::ptr Ifc4x3_rc4::IfcMaterialConstituent::ToMaterialConstituentSet() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[641], 2)->as<IfcMaterialConstituentSet>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcMaterialConstituent::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[640]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialConstituent::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[640]); }
Ifc4x3_rc4::IfcMaterialConstituent::IfcMaterialConstituent(IfcEntityInstanceData&& e) : IfcMaterialDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialConstituent::IfcMaterialConstituent(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcMaterial* v3_Material, boost::optional< double > v4_Fraction, boost::optional< std::string > v5_Category) : IfcMaterialDefinition(IfcEntityInstanceData(storage_t(5))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_Material ? v3_Material->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v4_Fraction) {set_attribute_value(3, (*v4_Fraction)); } if (v5_Category) {set_attribute_value(4, (*v5_Category)); }; populate_derived(); }

// Function implementations for IfcMaterialConstituentSet
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialConstituentSet::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcMaterialConstituentSet::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialConstituentSet::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcMaterialConstituentSet::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcMaterialConstituent >::ptr > Ifc4x3_rc4::IfcMaterialConstituentSet::MaterialConstituents() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcMaterialConstituent >(); }
void Ifc4x3_rc4::IfcMaterialConstituentSet::setMaterialConstituents(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcMaterialConstituent >::ptr > v) { if (v) {set_attribute_value(2, (*v)->generalize());} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialConstituentSet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[641]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialConstituentSet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[641]); }
Ifc4x3_rc4::IfcMaterialConstituentSet::IfcMaterialConstituentSet(IfcEntityInstanceData&& e) : IfcMaterialDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialConstituentSet::IfcMaterialConstituentSet(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcMaterialConstituent >::ptr > v3_MaterialConstituents) : IfcMaterialDefinition(IfcEntityInstanceData(storage_t(3))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_MaterialConstituents) {set_attribute_value(2, (*v3_MaterialConstituents)->generalize()); }; populate_derived(); }

// Function implementations for IfcMaterialDefinition

::Ifc4x3_rc4::IfcRelAssociatesMaterial::list::ptr Ifc4x3_rc4::IfcMaterialDefinition::AssociatedTo() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[919], 5)->as<IfcRelAssociatesMaterial>(); }
::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcMaterialDefinition::HasExternalReferences() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }
::Ifc4x3_rc4::IfcMaterialProperties::list::ptr Ifc4x3_rc4::IfcMaterialDefinition::HasProperties() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[654], 3)->as<IfcMaterialProperties>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcMaterialDefinition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[642]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialDefinition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[642]); }
Ifc4x3_rc4::IfcMaterialDefinition::IfcMaterialDefinition(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialDefinition::IfcMaterialDefinition() : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcMaterialDefinitionRepresentation
::Ifc4x3_rc4::IfcMaterial* Ifc4x3_rc4::IfcMaterialDefinitionRepresentation::RepresentedMaterial() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcMaterial>(true); }
void Ifc4x3_rc4::IfcMaterialDefinitionRepresentation::setRepresentedMaterial(::Ifc4x3_rc4::IfcMaterial* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialDefinitionRepresentation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[643]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialDefinitionRepresentation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[643]); }
Ifc4x3_rc4::IfcMaterialDefinitionRepresentation::IfcMaterialDefinitionRepresentation(IfcEntityInstanceData&& e) : IfcProductRepresentation(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialDefinitionRepresentation::IfcMaterialDefinitionRepresentation(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcRepresentation >::ptr v3_Representations, ::Ifc4x3_rc4::IfcMaterial* v4_RepresentedMaterial) : IfcProductRepresentation(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_Representations)->generalize());set_attribute_value(3, v4_RepresentedMaterial ? v4_RepresentedMaterial->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcMaterialLayer
::Ifc4x3_rc4::IfcMaterial* Ifc4x3_rc4::IfcMaterialLayer::Material() const { if(data_.get_attribute_value(0).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcMaterial>(true); }
void Ifc4x3_rc4::IfcMaterialLayer::setMaterial(::Ifc4x3_rc4::IfcMaterial* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
double Ifc4x3_rc4::IfcMaterialLayer::LayerThickness() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcMaterialLayer::setLayerThickness(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< boost::logic::tribool > Ifc4x3_rc4::IfcMaterialLayer::IsVentilated() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } boost::logic::tribool v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcMaterialLayer::setIsVentilated(boost::optional< boost::logic::tribool > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialLayer::Name() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcMaterialLayer::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialLayer::Description() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcMaterialLayer::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialLayer::Category() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcMaterialLayer::setCategory(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< int > Ifc4x3_rc4::IfcMaterialLayer::Priority() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } int v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcMaterialLayer::setPriority(boost::optional< int > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }

::Ifc4x3_rc4::IfcMaterialLayerSet::list::ptr Ifc4x3_rc4::IfcMaterialLayer::ToMaterialLayerSet() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[645], 0)->as<IfcMaterialLayerSet>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcMaterialLayer::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[644]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialLayer::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[644]); }
Ifc4x3_rc4::IfcMaterialLayer::IfcMaterialLayer(IfcEntityInstanceData&& e) : IfcMaterialDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialLayer::IfcMaterialLayer(::Ifc4x3_rc4::IfcMaterial* v1_Material, double v2_LayerThickness, boost::optional< boost::logic::tribool > v3_IsVentilated, boost::optional< std::string > v4_Name, boost::optional< std::string > v5_Description, boost::optional< std::string > v6_Category, boost::optional< int > v7_Priority) : IfcMaterialDefinition(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, v1_Material ? v1_Material->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_LayerThickness)); if (v3_IsVentilated) {set_attribute_value(2, (*v3_IsVentilated)); } if (v4_Name) {set_attribute_value(3, (*v4_Name)); } if (v5_Description) {set_attribute_value(4, (*v5_Description)); } if (v6_Category) {set_attribute_value(5, (*v6_Category)); } if (v7_Priority) {set_attribute_value(6, (*v7_Priority)); }; populate_derived(); }

// Function implementations for IfcMaterialLayerSet
aggregate_of< ::Ifc4x3_rc4::IfcMaterialLayer >::ptr Ifc4x3_rc4::IfcMaterialLayerSet::MaterialLayers() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcMaterialLayer >(); }
void Ifc4x3_rc4::IfcMaterialLayerSet::setMaterialLayers(aggregate_of< ::Ifc4x3_rc4::IfcMaterialLayer >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialLayerSet::LayerSetName() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcMaterialLayerSet::setLayerSetName(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialLayerSet::Description() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcMaterialLayerSet::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialLayerSet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[645]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialLayerSet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[645]); }
Ifc4x3_rc4::IfcMaterialLayerSet::IfcMaterialLayerSet(IfcEntityInstanceData&& e) : IfcMaterialDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialLayerSet::IfcMaterialLayerSet(aggregate_of< ::Ifc4x3_rc4::IfcMaterialLayer >::ptr v1_MaterialLayers, boost::optional< std::string > v2_LayerSetName, boost::optional< std::string > v3_Description) : IfcMaterialDefinition(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_MaterialLayers)->generalize()); if (v2_LayerSetName) {set_attribute_value(1, (*v2_LayerSetName)); } if (v3_Description) {set_attribute_value(2, (*v3_Description)); }; populate_derived(); }

// Function implementations for IfcMaterialLayerSetUsage
::Ifc4x3_rc4::IfcMaterialLayerSet* Ifc4x3_rc4::IfcMaterialLayerSetUsage::ForLayerSet() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcMaterialLayerSet>(true); }
void Ifc4x3_rc4::IfcMaterialLayerSetUsage::setForLayerSet(::Ifc4x3_rc4::IfcMaterialLayerSet* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcLayerSetDirectionEnum::Value Ifc4x3_rc4::IfcMaterialLayerSetUsage::LayerSetDirection() const {  return ::Ifc4x3_rc4::IfcLayerSetDirectionEnum::FromString(data_.get_attribute_value(1)); }
void Ifc4x3_rc4::IfcMaterialLayerSetUsage::setLayerSetDirection(::Ifc4x3_rc4::IfcLayerSetDirectionEnum::Value v) { set_attribute_value(1, EnumerationReference(&::Ifc4x3_rc4::IfcLayerSetDirectionEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcDirectionSenseEnum::Value Ifc4x3_rc4::IfcMaterialLayerSetUsage::DirectionSense() const {  return ::Ifc4x3_rc4::IfcDirectionSenseEnum::FromString(data_.get_attribute_value(2)); }
void Ifc4x3_rc4::IfcMaterialLayerSetUsage::setDirectionSense(::Ifc4x3_rc4::IfcDirectionSenseEnum::Value v) { set_attribute_value(2, EnumerationReference(&::Ifc4x3_rc4::IfcDirectionSenseEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcMaterialLayerSetUsage::OffsetFromReferenceLine() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcMaterialLayerSetUsage::setOffsetFromReferenceLine(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< double > Ifc4x3_rc4::IfcMaterialLayerSetUsage::ReferenceExtent() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcMaterialLayerSetUsage::setReferenceExtent(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialLayerSetUsage::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[646]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialLayerSetUsage::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[646]); }
Ifc4x3_rc4::IfcMaterialLayerSetUsage::IfcMaterialLayerSetUsage(IfcEntityInstanceData&& e) : IfcMaterialUsageDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialLayerSetUsage::IfcMaterialLayerSetUsage(::Ifc4x3_rc4::IfcMaterialLayerSet* v1_ForLayerSet, ::Ifc4x3_rc4::IfcLayerSetDirectionEnum::Value v2_LayerSetDirection, ::Ifc4x3_rc4::IfcDirectionSenseEnum::Value v3_DirectionSense, double v4_OffsetFromReferenceLine, boost::optional< double > v5_ReferenceExtent) : IfcMaterialUsageDefinition(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_ForLayerSet ? v1_ForLayerSet->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcLayerSetDirectionEnum::Class(),(size_t)v2_LayerSetDirection)));set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcDirectionSenseEnum::Class(),(size_t)v3_DirectionSense)));set_attribute_value(3, (v4_OffsetFromReferenceLine)); if (v5_ReferenceExtent) {set_attribute_value(4, (*v5_ReferenceExtent)); }; populate_derived(); }

// Function implementations for IfcMaterialLayerWithOffsets
::Ifc4x3_rc4::IfcLayerSetDirectionEnum::Value Ifc4x3_rc4::IfcMaterialLayerWithOffsets::OffsetDirection() const {  return ::Ifc4x3_rc4::IfcLayerSetDirectionEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcMaterialLayerWithOffsets::setOffsetDirection(::Ifc4x3_rc4::IfcLayerSetDirectionEnum::Value v) { set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcLayerSetDirectionEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(7); }
std::vector< double > /*[1:2]*/ Ifc4x3_rc4::IfcMaterialLayerWithOffsets::OffsetValues() const {  std::vector< double > /*[1:2]*/ v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcMaterialLayerWithOffsets::setOffsetValues(std::vector< double > /*[1:2]*/ v) { set_attribute_value(8, v);if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialLayerWithOffsets::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[647]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialLayerWithOffsets::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[647]); }
Ifc4x3_rc4::IfcMaterialLayerWithOffsets::IfcMaterialLayerWithOffsets(IfcEntityInstanceData&& e) : IfcMaterialLayer(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialLayerWithOffsets::IfcMaterialLayerWithOffsets(::Ifc4x3_rc4::IfcMaterial* v1_Material, double v2_LayerThickness, boost::optional< boost::logic::tribool > v3_IsVentilated, boost::optional< std::string > v4_Name, boost::optional< std::string > v5_Description, boost::optional< std::string > v6_Category, boost::optional< int > v7_Priority, ::Ifc4x3_rc4::IfcLayerSetDirectionEnum::Value v8_OffsetDirection, std::vector< double > /*[1:2]*/ v9_OffsetValues) : IfcMaterialLayer(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, v1_Material ? v1_Material->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_LayerThickness)); if (v3_IsVentilated) {set_attribute_value(2, (*v3_IsVentilated)); } if (v4_Name) {set_attribute_value(3, (*v4_Name)); } if (v5_Description) {set_attribute_value(4, (*v5_Description)); } if (v6_Category) {set_attribute_value(5, (*v6_Category)); } if (v7_Priority) {set_attribute_value(6, (*v7_Priority)); }set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcLayerSetDirectionEnum::Class(),(size_t)v8_OffsetDirection)));set_attribute_value(8, (v9_OffsetValues));; populate_derived(); }

// Function implementations for IfcMaterialList
aggregate_of< ::Ifc4x3_rc4::IfcMaterial >::ptr Ifc4x3_rc4::IfcMaterialList::Materials() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcMaterial >(); }
void Ifc4x3_rc4::IfcMaterialList::setMaterials(aggregate_of< ::Ifc4x3_rc4::IfcMaterial >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialList::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[648]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialList::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[648]); }
Ifc4x3_rc4::IfcMaterialList::IfcMaterialList(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialList::IfcMaterialList(aggregate_of< ::Ifc4x3_rc4::IfcMaterial >::ptr v1_Materials) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Materials)->generalize());; populate_derived(); }

// Function implementations for IfcMaterialProfile
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialProfile::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcMaterialProfile::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialProfile::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcMaterialProfile::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
::Ifc4x3_rc4::IfcMaterial* Ifc4x3_rc4::IfcMaterialProfile::Material() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcMaterial>(true); }
void Ifc4x3_rc4::IfcMaterialProfile::setMaterial(::Ifc4x3_rc4::IfcMaterial* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcProfileDef* Ifc4x3_rc4::IfcMaterialProfile::Profile() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcProfileDef>(true); }
void Ifc4x3_rc4::IfcMaterialProfile::setProfile(::Ifc4x3_rc4::IfcProfileDef* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
boost::optional< int > Ifc4x3_rc4::IfcMaterialProfile::Priority() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } int v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcMaterialProfile::setPriority(boost::optional< int > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialProfile::Category() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcMaterialProfile::setCategory(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }

::Ifc4x3_rc4::IfcMaterialProfileSet::list::ptr Ifc4x3_rc4::IfcMaterialProfile::ToMaterialProfileSet() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[650], 2)->as<IfcMaterialProfileSet>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProfile::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[649]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProfile::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[649]); }
Ifc4x3_rc4::IfcMaterialProfile::IfcMaterialProfile(IfcEntityInstanceData&& e) : IfcMaterialDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialProfile::IfcMaterialProfile(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcMaterial* v3_Material, ::Ifc4x3_rc4::IfcProfileDef* v4_Profile, boost::optional< int > v5_Priority, boost::optional< std::string > v6_Category) : IfcMaterialDefinition(IfcEntityInstanceData(storage_t(6))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_Material ? v3_Material->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_Profile ? v4_Profile->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Priority) {set_attribute_value(4, (*v5_Priority)); } if (v6_Category) {set_attribute_value(5, (*v6_Category)); }; populate_derived(); }

// Function implementations for IfcMaterialProfileSet
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialProfileSet::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcMaterialProfileSet::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialProfileSet::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcMaterialProfileSet::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
aggregate_of< ::Ifc4x3_rc4::IfcMaterialProfile >::ptr Ifc4x3_rc4::IfcMaterialProfileSet::MaterialProfiles() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcMaterialProfile >(); }
void Ifc4x3_rc4::IfcMaterialProfileSet::setMaterialProfiles(aggregate_of< ::Ifc4x3_rc4::IfcMaterialProfile >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcCompositeProfileDef* Ifc4x3_rc4::IfcMaterialProfileSet::CompositeProfile() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcCompositeProfileDef>(true); }
void Ifc4x3_rc4::IfcMaterialProfileSet::setCompositeProfile(::Ifc4x3_rc4::IfcCompositeProfileDef* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProfileSet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[650]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProfileSet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[650]); }
Ifc4x3_rc4::IfcMaterialProfileSet::IfcMaterialProfileSet(IfcEntityInstanceData&& e) : IfcMaterialDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialProfileSet::IfcMaterialProfileSet(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcMaterialProfile >::ptr v3_MaterialProfiles, ::Ifc4x3_rc4::IfcCompositeProfileDef* v4_CompositeProfile) : IfcMaterialDefinition(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_MaterialProfiles)->generalize());set_attribute_value(3, v4_CompositeProfile ? v4_CompositeProfile->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcMaterialProfileSetUsage
::Ifc4x3_rc4::IfcMaterialProfileSet* Ifc4x3_rc4::IfcMaterialProfileSetUsage::ForProfileSet() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcMaterialProfileSet>(true); }
void Ifc4x3_rc4::IfcMaterialProfileSetUsage::setForProfileSet(::Ifc4x3_rc4::IfcMaterialProfileSet* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
boost::optional< int > Ifc4x3_rc4::IfcMaterialProfileSetUsage::CardinalPoint() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } int v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcMaterialProfileSetUsage::setCardinalPoint(boost::optional< int > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< double > Ifc4x3_rc4::IfcMaterialProfileSetUsage::ReferenceExtent() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcMaterialProfileSetUsage::setReferenceExtent(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProfileSetUsage::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[651]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProfileSetUsage::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[651]); }
Ifc4x3_rc4::IfcMaterialProfileSetUsage::IfcMaterialProfileSetUsage(IfcEntityInstanceData&& e) : IfcMaterialUsageDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialProfileSetUsage::IfcMaterialProfileSetUsage(::Ifc4x3_rc4::IfcMaterialProfileSet* v1_ForProfileSet, boost::optional< int > v2_CardinalPoint, boost::optional< double > v3_ReferenceExtent) : IfcMaterialUsageDefinition(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_ForProfileSet ? v1_ForProfileSet->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_CardinalPoint) {set_attribute_value(1, (*v2_CardinalPoint)); } if (v3_ReferenceExtent) {set_attribute_value(2, (*v3_ReferenceExtent)); }; populate_derived(); }

// Function implementations for IfcMaterialProfileSetUsageTapering
::Ifc4x3_rc4::IfcMaterialProfileSet* Ifc4x3_rc4::IfcMaterialProfileSetUsageTapering::ForProfileEndSet() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcMaterialProfileSet>(true); }
void Ifc4x3_rc4::IfcMaterialProfileSetUsageTapering::setForProfileEndSet(::Ifc4x3_rc4::IfcMaterialProfileSet* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
boost::optional< int > Ifc4x3_rc4::IfcMaterialProfileSetUsageTapering::CardinalEndPoint() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } int v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcMaterialProfileSetUsageTapering::setCardinalEndPoint(boost::optional< int > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProfileSetUsageTapering::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[652]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProfileSetUsageTapering::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[652]); }
Ifc4x3_rc4::IfcMaterialProfileSetUsageTapering::IfcMaterialProfileSetUsageTapering(IfcEntityInstanceData&& e) : IfcMaterialProfileSetUsage(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialProfileSetUsageTapering::IfcMaterialProfileSetUsageTapering(::Ifc4x3_rc4::IfcMaterialProfileSet* v1_ForProfileSet, boost::optional< int > v2_CardinalPoint, boost::optional< double > v3_ReferenceExtent, ::Ifc4x3_rc4::IfcMaterialProfileSet* v4_ForProfileEndSet, boost::optional< int > v5_CardinalEndPoint) : IfcMaterialProfileSetUsage(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_ForProfileSet ? v1_ForProfileSet->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_CardinalPoint) {set_attribute_value(1, (*v2_CardinalPoint)); } if (v3_ReferenceExtent) {set_attribute_value(2, (*v3_ReferenceExtent)); }set_attribute_value(3, v4_ForProfileEndSet ? v4_ForProfileEndSet->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_CardinalEndPoint) {set_attribute_value(4, (*v5_CardinalEndPoint)); }; populate_derived(); }

// Function implementations for IfcMaterialProfileWithOffsets
std::vector< double > /*[1:2]*/ Ifc4x3_rc4::IfcMaterialProfileWithOffsets::OffsetValues() const {  std::vector< double > /*[1:2]*/ v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcMaterialProfileWithOffsets::setOffsetValues(std::vector< double > /*[1:2]*/ v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProfileWithOffsets::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[653]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProfileWithOffsets::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[653]); }
Ifc4x3_rc4::IfcMaterialProfileWithOffsets::IfcMaterialProfileWithOffsets(IfcEntityInstanceData&& e) : IfcMaterialProfile(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialProfileWithOffsets::IfcMaterialProfileWithOffsets(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcMaterial* v3_Material, ::Ifc4x3_rc4::IfcProfileDef* v4_Profile, boost::optional< int > v5_Priority, boost::optional< std::string > v6_Category, std::vector< double > /*[1:2]*/ v7_OffsetValues) : IfcMaterialProfile(IfcEntityInstanceData(storage_t(7))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_Material ? v3_Material->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_Profile ? v4_Profile->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Priority) {set_attribute_value(4, (*v5_Priority)); } if (v6_Category) {set_attribute_value(5, (*v6_Category)); }set_attribute_value(6, (v7_OffsetValues));; populate_derived(); }

// Function implementations for IfcMaterialProperties
::Ifc4x3_rc4::IfcMaterialDefinition* Ifc4x3_rc4::IfcMaterialProperties::Material() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcMaterialDefinition>(true); }
void Ifc4x3_rc4::IfcMaterialProperties::setMaterial(::Ifc4x3_rc4::IfcMaterialDefinition* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[654]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[654]); }
Ifc4x3_rc4::IfcMaterialProperties::IfcMaterialProperties(IfcEntityInstanceData&& e) : IfcExtendedProperties(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialProperties::IfcMaterialProperties(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr v3_Properties, ::Ifc4x3_rc4::IfcMaterialDefinition* v4_Material) : IfcExtendedProperties(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_Properties)->generalize());set_attribute_value(3, v4_Material ? v4_Material->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcMaterialRelationship
::Ifc4x3_rc4::IfcMaterial* Ifc4x3_rc4::IfcMaterialRelationship::RelatingMaterial() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcMaterial>(true); }
void Ifc4x3_rc4::IfcMaterialRelationship::setRelatingMaterial(::Ifc4x3_rc4::IfcMaterial* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
aggregate_of< ::Ifc4x3_rc4::IfcMaterial >::ptr Ifc4x3_rc4::IfcMaterialRelationship::RelatedMaterials() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcMaterial >(); }
void Ifc4x3_rc4::IfcMaterialRelationship::setRelatedMaterials(aggregate_of< ::Ifc4x3_rc4::IfcMaterial >::ptr v) { set_attribute_value(3, (v)->generalize());if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcMaterialRelationship::Expression() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcMaterialRelationship::setExpression(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMaterialRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[655]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[655]); }
Ifc4x3_rc4::IfcMaterialRelationship::IfcMaterialRelationship(IfcEntityInstanceData&& e) : IfcResourceLevelRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialRelationship::IfcMaterialRelationship(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcMaterial* v3_RelatingMaterial, aggregate_of< ::Ifc4x3_rc4::IfcMaterial >::ptr v4_RelatedMaterials, boost::optional< std::string > v5_Expression) : IfcResourceLevelRelationship(IfcEntityInstanceData(storage_t(5))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_RelatingMaterial ? v3_RelatingMaterial->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_RelatedMaterials)->generalize()); if (v5_Expression) {set_attribute_value(4, (*v5_Expression)); }; populate_derived(); }

// Function implementations for IfcMaterialUsageDefinition

::Ifc4x3_rc4::IfcRelAssociatesMaterial::list::ptr Ifc4x3_rc4::IfcMaterialUsageDefinition::AssociatedTo() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[919], 5)->as<IfcRelAssociatesMaterial>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcMaterialUsageDefinition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[657]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMaterialUsageDefinition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[657]); }
Ifc4x3_rc4::IfcMaterialUsageDefinition::IfcMaterialUsageDefinition(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcMaterialUsageDefinition::IfcMaterialUsageDefinition() : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcMeasureWithUnit
::Ifc4x3_rc4::IfcValue* Ifc4x3_rc4::IfcMeasureWithUnit::ValueComponent() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcValue>(true); }
void Ifc4x3_rc4::IfcMeasureWithUnit::setValueComponent(::Ifc4x3_rc4::IfcValue* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcMeasureWithUnit::UnitComponent() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcMeasureWithUnit::setUnitComponent(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcMeasureWithUnit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[659]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMeasureWithUnit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[659]); }
Ifc4x3_rc4::IfcMeasureWithUnit::IfcMeasureWithUnit(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcMeasureWithUnit::IfcMeasureWithUnit(::Ifc4x3_rc4::IfcValue* v1_ValueComponent, ::Ifc4x3_rc4::IfcUnit* v2_UnitComponent) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_ValueComponent ? v1_ValueComponent->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_UnitComponent ? v2_UnitComponent->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcMechanicalFastener
boost::optional< double > Ifc4x3_rc4::IfcMechanicalFastener::NominalDiameter() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcMechanicalFastener::setNominalDiameter(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< double > Ifc4x3_rc4::IfcMechanicalFastener::NominalLength() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcMechanicalFastener::setNominalLength(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< ::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Value > Ifc4x3_rc4::IfcMechanicalFastener::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcMechanicalFastener::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMechanicalFastener::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[660]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMechanicalFastener::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[660]); }
Ifc4x3_rc4::IfcMechanicalFastener::IfcMechanicalFastener(IfcEntityInstanceData&& e) : IfcElementComponent(std::move(e)) { }
Ifc4x3_rc4::IfcMechanicalFastener::IfcMechanicalFastener(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< double > v9_NominalDiameter, boost::optional< double > v10_NominalLength, boost::optional< ::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Value > v11_PredefinedType) : IfcElementComponent(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_NominalDiameter) {set_attribute_value(8, (*v9_NominalDiameter)); } if (v10_NominalLength) {set_attribute_value(9, (*v10_NominalLength)); } if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Class(),(size_t)*v11_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcMechanicalFastenerType
::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Value Ifc4x3_rc4::IfcMechanicalFastenerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcMechanicalFastenerType::setPredefinedType(::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
boost::optional< double > Ifc4x3_rc4::IfcMechanicalFastenerType::NominalDiameter() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcMechanicalFastenerType::setNominalDiameter(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcMechanicalFastenerType::NominalLength() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcMechanicalFastenerType::setNominalLength(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMechanicalFastenerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[661]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMechanicalFastenerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[661]); }
Ifc4x3_rc4::IfcMechanicalFastenerType::IfcMechanicalFastenerType(IfcEntityInstanceData&& e) : IfcElementComponentType(std::move(e)) { }
Ifc4x3_rc4::IfcMechanicalFastenerType::IfcMechanicalFastenerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Value v10_PredefinedType, boost::optional< double > v11_NominalDiameter, boost::optional< double > v12_NominalLength) : IfcElementComponentType(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcMechanicalFastenerTypeEnum::Class(),(size_t)v10_PredefinedType))); if (v11_NominalDiameter) {set_attribute_value(10, (*v11_NominalDiameter)); } if (v12_NominalLength) {set_attribute_value(11, (*v12_NominalLength)); }; populate_derived(); }

// Function implementations for IfcMedicalDevice
boost::optional< ::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Value > Ifc4x3_rc4::IfcMedicalDevice::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcMedicalDevice::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMedicalDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[663]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMedicalDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[663]); }
Ifc4x3_rc4::IfcMedicalDevice::IfcMedicalDevice(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcMedicalDevice::IfcMedicalDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcMedicalDeviceType
::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Value Ifc4x3_rc4::IfcMedicalDeviceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcMedicalDeviceType::setPredefinedType(::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcMedicalDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[664]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMedicalDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[664]); }
Ifc4x3_rc4::IfcMedicalDeviceType::IfcMedicalDeviceType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcMedicalDeviceType::IfcMedicalDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcMedicalDeviceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcMember
boost::optional< ::Ifc4x3_rc4::IfcMemberTypeEnum::Value > Ifc4x3_rc4::IfcMember::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcMemberTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcMember::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcMemberTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcMemberTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMember::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[666]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMember::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[666]); }
Ifc4x3_rc4::IfcMember::IfcMember(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcMember::IfcMember(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcMemberTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcMemberTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcMemberStandardCase


const IfcParse::entity& Ifc4x3_rc4::IfcMemberStandardCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[667]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMemberStandardCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[667]); }
Ifc4x3_rc4::IfcMemberStandardCase::IfcMemberStandardCase(IfcEntityInstanceData&& e) : IfcMember(std::move(e)) { }
Ifc4x3_rc4::IfcMemberStandardCase::IfcMemberStandardCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcMemberTypeEnum::Value > v9_PredefinedType) : IfcMember(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcMemberTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcMemberType
::Ifc4x3_rc4::IfcMemberTypeEnum::Value Ifc4x3_rc4::IfcMemberType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcMemberTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcMemberType::setPredefinedType(::Ifc4x3_rc4::IfcMemberTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcMemberTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcMemberType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[668]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMemberType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[668]); }
Ifc4x3_rc4::IfcMemberType::IfcMemberType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcMemberType::IfcMemberType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcMemberTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcMemberTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcMetric
::Ifc4x3_rc4::IfcBenchmarkEnum::Value Ifc4x3_rc4::IfcMetric::Benchmark() const {  return ::Ifc4x3_rc4::IfcBenchmarkEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcMetric::setBenchmark(::Ifc4x3_rc4::IfcBenchmarkEnum::Value v) { set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcBenchmarkEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(7); }
boost::optional< std::string > Ifc4x3_rc4::IfcMetric::ValueSource() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcMetric::setValueSource(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
::Ifc4x3_rc4::IfcMetricValueSelect* Ifc4x3_rc4::IfcMetric::DataValue() const { if(data_.get_attribute_value(9).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcMetricValueSelect>(true); }
void Ifc4x3_rc4::IfcMetric::setDataValue(::Ifc4x3_rc4::IfcMetricValueSelect* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }
::Ifc4x3_rc4::IfcReference* Ifc4x3_rc4::IfcMetric::ReferencePath() const { if(data_.get_attribute_value(10).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(10)))->as<::Ifc4x3_rc4::IfcReference>(true); }
void Ifc4x3_rc4::IfcMetric::setReferencePath(::Ifc4x3_rc4::IfcReference* v) { set_attribute_value(10, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(10); }


const IfcParse::entity& Ifc4x3_rc4::IfcMetric::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[670]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMetric::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[670]); }
Ifc4x3_rc4::IfcMetric::IfcMetric(IfcEntityInstanceData&& e) : IfcConstraint(std::move(e)) { }
Ifc4x3_rc4::IfcMetric::IfcMetric(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcConstraintEnum::Value v3_ConstraintGrade, boost::optional< std::string > v4_ConstraintSource, ::Ifc4x3_rc4::IfcActorSelect* v5_CreatingActor, boost::optional< std::string > v6_CreationTime, boost::optional< std::string > v7_UserDefinedGrade, ::Ifc4x3_rc4::IfcBenchmarkEnum::Value v8_Benchmark, boost::optional< std::string > v9_ValueSource, ::Ifc4x3_rc4::IfcMetricValueSelect* v10_DataValue, ::Ifc4x3_rc4::IfcReference* v11_ReferencePath) : IfcConstraint(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcConstraintEnum::Class(),(size_t)v3_ConstraintGrade))); if (v4_ConstraintSource) {set_attribute_value(3, (*v4_ConstraintSource)); }set_attribute_value(4, v5_CreatingActor ? v5_CreatingActor->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v6_CreationTime) {set_attribute_value(5, (*v6_CreationTime)); } if (v7_UserDefinedGrade) {set_attribute_value(6, (*v7_UserDefinedGrade)); }set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcBenchmarkEnum::Class(),(size_t)v8_Benchmark))); if (v9_ValueSource) {set_attribute_value(8, (*v9_ValueSource)); }set_attribute_value(9, v10_DataValue ? v10_DataValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(10, v11_ReferencePath ? v11_ReferencePath->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcMirroredProfileDef


const IfcParse::entity& Ifc4x3_rc4::IfcMirroredProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[672]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMirroredProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[672]); }
Ifc4x3_rc4::IfcMirroredProfileDef::IfcMirroredProfileDef(IfcEntityInstanceData&& e) : IfcDerivedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcMirroredProfileDef::IfcMirroredProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcProfileDef* v3_ParentProfile, boost::optional< std::string > v5_Label) : IfcDerivedProfileDef(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_ParentProfile ? v3_ParentProfile->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Label) {set_attribute_value(4, (*v5_Label)); }; populate_derived(); }

// Function implementations for IfcMobileTelecommunicationsAppliance
boost::optional< ::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Value > Ifc4x3_rc4::IfcMobileTelecommunicationsAppliance::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcMobileTelecommunicationsAppliance::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMobileTelecommunicationsAppliance::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[673]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMobileTelecommunicationsAppliance::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[673]); }
Ifc4x3_rc4::IfcMobileTelecommunicationsAppliance::IfcMobileTelecommunicationsAppliance(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcMobileTelecommunicationsAppliance::IfcMobileTelecommunicationsAppliance(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcMobileTelecommunicationsApplianceType
::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Value Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceType::setPredefinedType(::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[674]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[674]); }
Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceType::IfcMobileTelecommunicationsApplianceType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceType::IfcMobileTelecommunicationsApplianceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcMobileTelecommunicationsApplianceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcMonetaryUnit
std::string Ifc4x3_rc4::IfcMonetaryUnit::Currency() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcMonetaryUnit::setCurrency(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcMonetaryUnit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[687]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMonetaryUnit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[687]); }
Ifc4x3_rc4::IfcMonetaryUnit::IfcMonetaryUnit(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcMonetaryUnit::IfcMonetaryUnit(std::string v1_Currency) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Currency));; populate_derived(); }

// Function implementations for IfcMooringDevice
boost::optional< ::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Value > Ifc4x3_rc4::IfcMooringDevice::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcMooringDevice::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMooringDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[689]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMooringDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[689]); }
Ifc4x3_rc4::IfcMooringDevice::IfcMooringDevice(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcMooringDevice::IfcMooringDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcMooringDeviceType
::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Value Ifc4x3_rc4::IfcMooringDeviceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcMooringDeviceType::setPredefinedType(::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcMooringDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[690]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMooringDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[690]); }
Ifc4x3_rc4::IfcMooringDeviceType::IfcMooringDeviceType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcMooringDeviceType::IfcMooringDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcMooringDeviceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcMotorConnection
boost::optional< ::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Value > Ifc4x3_rc4::IfcMotorConnection::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcMotorConnection::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcMotorConnection::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[692]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMotorConnection::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[692]); }
Ifc4x3_rc4::IfcMotorConnection::IfcMotorConnection(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcMotorConnection::IfcMotorConnection(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcMotorConnectionType
::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Value Ifc4x3_rc4::IfcMotorConnectionType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcMotorConnectionType::setPredefinedType(::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcMotorConnectionType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[693]); }
const IfcParse::entity& Ifc4x3_rc4::IfcMotorConnectionType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[693]); }
Ifc4x3_rc4::IfcMotorConnectionType::IfcMotorConnectionType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcMotorConnectionType::IfcMotorConnectionType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcMotorConnectionTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcNamedUnit
::Ifc4x3_rc4::IfcDimensionalExponents* Ifc4x3_rc4::IfcNamedUnit::Dimensions() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcDimensionalExponents>(true); }
void Ifc4x3_rc4::IfcNamedUnit::setDimensions(::Ifc4x3_rc4::IfcDimensionalExponents* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcUnitEnum::Value Ifc4x3_rc4::IfcNamedUnit::UnitType() const {  return ::Ifc4x3_rc4::IfcUnitEnum::FromString(data_.get_attribute_value(1)); }
void Ifc4x3_rc4::IfcNamedUnit::setUnitType(::Ifc4x3_rc4::IfcUnitEnum::Value v) { set_attribute_value(1, EnumerationReference(&::Ifc4x3_rc4::IfcUnitEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcNamedUnit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[695]); }
const IfcParse::entity& Ifc4x3_rc4::IfcNamedUnit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[695]); }
Ifc4x3_rc4::IfcNamedUnit::IfcNamedUnit(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcNamedUnit::IfcNamedUnit(::Ifc4x3_rc4::IfcDimensionalExponents* v1_Dimensions, ::Ifc4x3_rc4::IfcUnitEnum::Value v2_UnitType) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Dimensions ? v1_Dimensions->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcUnitEnum::Class(),(size_t)v2_UnitType)));; populate_derived(); }

// Function implementations for IfcNavigationElement
boost::optional< ::Ifc4x3_rc4::IfcNavigationElementTypeEnum::Value > Ifc4x3_rc4::IfcNavigationElement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcNavigationElementTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcNavigationElement::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcNavigationElementTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcNavigationElementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcNavigationElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[696]); }
const IfcParse::entity& Ifc4x3_rc4::IfcNavigationElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[696]); }
Ifc4x3_rc4::IfcNavigationElement::IfcNavigationElement(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcNavigationElement::IfcNavigationElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcNavigationElementTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcNavigationElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcNavigationElementType
::Ifc4x3_rc4::IfcNavigationElementTypeEnum::Value Ifc4x3_rc4::IfcNavigationElementType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcNavigationElementTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcNavigationElementType::setPredefinedType(::Ifc4x3_rc4::IfcNavigationElementTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcNavigationElementTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcNavigationElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[697]); }
const IfcParse::entity& Ifc4x3_rc4::IfcNavigationElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[697]); }
Ifc4x3_rc4::IfcNavigationElementType::IfcNavigationElementType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcNavigationElementType::IfcNavigationElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcNavigationElementTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcNavigationElementTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcObject
boost::optional< std::string > Ifc4x3_rc4::IfcObject::ObjectType() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcObject::setObjectType(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }

::Ifc4x3_rc4::IfcRelDefinesByObject::list::ptr Ifc4x3_rc4::IfcObject::IsDeclaredBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[937], 4)->as<IfcRelDefinesByObject>(); }
::Ifc4x3_rc4::IfcRelDefinesByObject::list::ptr Ifc4x3_rc4::IfcObject::Declares() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[937], 5)->as<IfcRelDefinesByObject>(); }
::Ifc4x3_rc4::IfcRelDefinesByType::list::ptr Ifc4x3_rc4::IfcObject::IsTypedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[940], 4)->as<IfcRelDefinesByType>(); }
::Ifc4x3_rc4::IfcRelDefinesByProperties::list::ptr Ifc4x3_rc4::IfcObject::IsDefinedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[938], 4)->as<IfcRelDefinesByProperties>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcObject::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[702]); }
const IfcParse::entity& Ifc4x3_rc4::IfcObject::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[702]); }
Ifc4x3_rc4::IfcObject::IfcObject(IfcEntityInstanceData&& e) : IfcObjectDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcObject::IfcObject(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType) : IfcObjectDefinition(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }; populate_derived(); }

// Function implementations for IfcObjectDefinition

::Ifc4x3_rc4::IfcRelAssigns::list::ptr Ifc4x3_rc4::IfcObjectDefinition::HasAssignments() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[905], 4)->as<IfcRelAssigns>(); }
::Ifc4x3_rc4::IfcRelNests::list::ptr Ifc4x3_rc4::IfcObjectDefinition::Nests() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[944], 5)->as<IfcRelNests>(); }
::Ifc4x3_rc4::IfcRelNests::list::ptr Ifc4x3_rc4::IfcObjectDefinition::IsNestedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[944], 4)->as<IfcRelNests>(); }
::Ifc4x3_rc4::IfcRelDeclares::list::ptr Ifc4x3_rc4::IfcObjectDefinition::HasContext() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[934], 5)->as<IfcRelDeclares>(); }
::Ifc4x3_rc4::IfcRelAggregates::list::ptr Ifc4x3_rc4::IfcObjectDefinition::IsDecomposedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[904], 4)->as<IfcRelAggregates>(); }
::Ifc4x3_rc4::IfcRelAggregates::list::ptr Ifc4x3_rc4::IfcObjectDefinition::Decomposes() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[904], 5)->as<IfcRelAggregates>(); }
::Ifc4x3_rc4::IfcRelAssociates::list::ptr Ifc4x3_rc4::IfcObjectDefinition::HasAssociations() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[913], 4)->as<IfcRelAssociates>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcObjectDefinition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[703]); }
const IfcParse::entity& Ifc4x3_rc4::IfcObjectDefinition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[703]); }
Ifc4x3_rc4::IfcObjectDefinition::IfcObjectDefinition(IfcEntityInstanceData&& e) : IfcRoot(std::move(e)) { }
Ifc4x3_rc4::IfcObjectDefinition::IfcObjectDefinition(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcRoot(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcObjectPlacement
::Ifc4x3_rc4::IfcObjectPlacement* Ifc4x3_rc4::IfcObjectPlacement::PlacementRelTo() const { if(data_.get_attribute_value(0).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcObjectPlacement>(true); }
void Ifc4x3_rc4::IfcObjectPlacement::setPlacementRelTo(::Ifc4x3_rc4::IfcObjectPlacement* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }

::Ifc4x3_rc4::IfcProduct::list::ptr Ifc4x3_rc4::IfcObjectPlacement::PlacesObject() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[806], 5)->as<IfcProduct>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcObjectPlacement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[706]); }
const IfcParse::entity& Ifc4x3_rc4::IfcObjectPlacement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[706]); }
Ifc4x3_rc4::IfcObjectPlacement::IfcObjectPlacement(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcObjectPlacement::IfcObjectPlacement(::Ifc4x3_rc4::IfcObjectPlacement* v1_PlacementRelTo) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_PlacementRelTo ? v1_PlacementRelTo->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcObjective
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcConstraint >::ptr > Ifc4x3_rc4::IfcObjective::BenchmarkValues() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcConstraint >(); }
void Ifc4x3_rc4::IfcObjective::setBenchmarkValues(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcConstraint >::ptr > v) { if (v) {set_attribute_value(7, (*v)->generalize());} else {unset_attribute_value(7);} }
boost::optional< ::Ifc4x3_rc4::IfcLogicalOperatorEnum::Value > Ifc4x3_rc4::IfcObjective::LogicalAggregator() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcLogicalOperatorEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcObjective::setLogicalAggregator(boost::optional< ::Ifc4x3_rc4::IfcLogicalOperatorEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcLogicalOperatorEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }
::Ifc4x3_rc4::IfcObjectiveEnum::Value Ifc4x3_rc4::IfcObjective::ObjectiveQualifier() const {  return ::Ifc4x3_rc4::IfcObjectiveEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcObjective::setObjectiveQualifier(::Ifc4x3_rc4::IfcObjectiveEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcObjectiveEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
boost::optional< std::string > Ifc4x3_rc4::IfcObjective::UserDefinedQualifier() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcObjective::setUserDefinedQualifier(boost::optional< std::string > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcObjective::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[704]); }
const IfcParse::entity& Ifc4x3_rc4::IfcObjective::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[704]); }
Ifc4x3_rc4::IfcObjective::IfcObjective(IfcEntityInstanceData&& e) : IfcConstraint(std::move(e)) { }
Ifc4x3_rc4::IfcObjective::IfcObjective(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcConstraintEnum::Value v3_ConstraintGrade, boost::optional< std::string > v4_ConstraintSource, ::Ifc4x3_rc4::IfcActorSelect* v5_CreatingActor, boost::optional< std::string > v6_CreationTime, boost::optional< std::string > v7_UserDefinedGrade, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcConstraint >::ptr > v8_BenchmarkValues, boost::optional< ::Ifc4x3_rc4::IfcLogicalOperatorEnum::Value > v9_LogicalAggregator, ::Ifc4x3_rc4::IfcObjectiveEnum::Value v10_ObjectiveQualifier, boost::optional< std::string > v11_UserDefinedQualifier) : IfcConstraint(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcConstraintEnum::Class(),(size_t)v3_ConstraintGrade))); if (v4_ConstraintSource) {set_attribute_value(3, (*v4_ConstraintSource)); }set_attribute_value(4, v5_CreatingActor ? v5_CreatingActor->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v6_CreationTime) {set_attribute_value(5, (*v6_CreationTime)); } if (v7_UserDefinedGrade) {set_attribute_value(6, (*v7_UserDefinedGrade)); } if (v8_BenchmarkValues) {set_attribute_value(7, (*v8_BenchmarkValues)->generalize()); } if (v9_LogicalAggregator) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcLogicalOperatorEnum::Class(),(size_t)*v9_LogicalAggregator))); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcObjectiveEnum::Class(),(size_t)v10_ObjectiveQualifier))); if (v11_UserDefinedQualifier) {set_attribute_value(10, (*v11_UserDefinedQualifier)); }; populate_derived(); }

// Function implementations for IfcOccupant
boost::optional< ::Ifc4x3_rc4::IfcOccupantTypeEnum::Value > Ifc4x3_rc4::IfcOccupant::PredefinedType() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcOccupantTypeEnum::FromString(data_.get_attribute_value(6)); }
void Ifc4x3_rc4::IfcOccupant::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcOccupantTypeEnum::Value > v) { if (v) {set_attribute_value(6, EnumerationReference(&::Ifc4x3_rc4::IfcOccupantTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcOccupant::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[709]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOccupant::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[709]); }
Ifc4x3_rc4::IfcOccupant::IfcOccupant(IfcEntityInstanceData&& e) : IfcActor(std::move(e)) { }
Ifc4x3_rc4::IfcOccupant::IfcOccupant(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcActorSelect* v6_TheActor, boost::optional< ::Ifc4x3_rc4::IfcOccupantTypeEnum::Value > v7_PredefinedType) : IfcActor(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_TheActor ? v6_TheActor->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v7_PredefinedType) {set_attribute_value(6, (EnumerationReference(&::Ifc4x3_rc4::IfcOccupantTypeEnum::Class(),(size_t)*v7_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcOffsetCurve
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcOffsetCurve::BasisCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcOffsetCurve::setBasisCurve(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcOffsetCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[711]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOffsetCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[711]); }
Ifc4x3_rc4::IfcOffsetCurve::IfcOffsetCurve(IfcEntityInstanceData&& e) : IfcCurve(std::move(e)) { }
Ifc4x3_rc4::IfcOffsetCurve::IfcOffsetCurve(::Ifc4x3_rc4::IfcCurve* v1_BasisCurve) : IfcCurve(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_BasisCurve ? v1_BasisCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcOffsetCurve2D
double Ifc4x3_rc4::IfcOffsetCurve2D::Distance() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcOffsetCurve2D::setDistance(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::logic::tribool Ifc4x3_rc4::IfcOffsetCurve2D::SelfIntersect() const {  boost::logic::tribool v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcOffsetCurve2D::setSelfIntersect(boost::logic::tribool v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcOffsetCurve2D::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[712]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOffsetCurve2D::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[712]); }
Ifc4x3_rc4::IfcOffsetCurve2D::IfcOffsetCurve2D(IfcEntityInstanceData&& e) : IfcOffsetCurve(std::move(e)) { }
Ifc4x3_rc4::IfcOffsetCurve2D::IfcOffsetCurve2D(::Ifc4x3_rc4::IfcCurve* v1_BasisCurve, double v2_Distance, boost::logic::tribool v3_SelfIntersect) : IfcOffsetCurve(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_BasisCurve ? v1_BasisCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Distance));set_attribute_value(2, (v3_SelfIntersect));; populate_derived(); }

// Function implementations for IfcOffsetCurve3D
double Ifc4x3_rc4::IfcOffsetCurve3D::Distance() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcOffsetCurve3D::setDistance(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::logic::tribool Ifc4x3_rc4::IfcOffsetCurve3D::SelfIntersect() const {  boost::logic::tribool v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcOffsetCurve3D::setSelfIntersect(boost::logic::tribool v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcOffsetCurve3D::RefDirection() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcOffsetCurve3D::setRefDirection(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcOffsetCurve3D::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[713]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOffsetCurve3D::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[713]); }
Ifc4x3_rc4::IfcOffsetCurve3D::IfcOffsetCurve3D(IfcEntityInstanceData&& e) : IfcOffsetCurve(std::move(e)) { }
Ifc4x3_rc4::IfcOffsetCurve3D::IfcOffsetCurve3D(::Ifc4x3_rc4::IfcCurve* v1_BasisCurve, double v2_Distance, boost::logic::tribool v3_SelfIntersect, ::Ifc4x3_rc4::IfcDirection* v4_RefDirection) : IfcOffsetCurve(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_BasisCurve ? v1_BasisCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Distance));set_attribute_value(2, (v3_SelfIntersect));set_attribute_value(3, v4_RefDirection ? v4_RefDirection->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcOffsetCurveByDistances
aggregate_of< ::Ifc4x3_rc4::IfcPointByDistanceExpression >::ptr Ifc4x3_rc4::IfcOffsetCurveByDistances::OffsetValues() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcPointByDistanceExpression >(); }
void Ifc4x3_rc4::IfcOffsetCurveByDistances::setOffsetValues(aggregate_of< ::Ifc4x3_rc4::IfcPointByDistanceExpression >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
boost::optional< std::string > Ifc4x3_rc4::IfcOffsetCurveByDistances::Tag() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcOffsetCurveByDistances::setTag(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcOffsetCurveByDistances::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[714]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOffsetCurveByDistances::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[714]); }
Ifc4x3_rc4::IfcOffsetCurveByDistances::IfcOffsetCurveByDistances(IfcEntityInstanceData&& e) : IfcOffsetCurve(std::move(e)) { }
Ifc4x3_rc4::IfcOffsetCurveByDistances::IfcOffsetCurveByDistances(::Ifc4x3_rc4::IfcCurve* v1_BasisCurve, aggregate_of< ::Ifc4x3_rc4::IfcPointByDistanceExpression >::ptr v2_OffsetValues, boost::optional< std::string > v3_Tag) : IfcOffsetCurve(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_BasisCurve ? v1_BasisCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_OffsetValues)->generalize()); if (v3_Tag) {set_attribute_value(2, (*v3_Tag)); }; populate_derived(); }

// Function implementations for IfcOpenCrossProfileDef
bool Ifc4x3_rc4::IfcOpenCrossProfileDef::HorizontalWidths() const {  bool v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcOpenCrossProfileDef::setHorizontalWidths(bool v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
std::vector< double > /*[1:?]*/ Ifc4x3_rc4::IfcOpenCrossProfileDef::Widths() const {  std::vector< double > /*[1:?]*/ v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcOpenCrossProfileDef::setWidths(std::vector< double > /*[1:?]*/ v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
std::vector< double > /*[1:?]*/ Ifc4x3_rc4::IfcOpenCrossProfileDef::Slopes() const {  std::vector< double > /*[1:?]*/ v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcOpenCrossProfileDef::setSlopes(std::vector< double > /*[1:?]*/ v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
boost::optional< std::vector< std::string > /*[2:?]*/ > Ifc4x3_rc4::IfcOpenCrossProfileDef::Tags() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::vector< std::string > /*[2:?]*/ v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcOpenCrossProfileDef::setTags(boost::optional< std::vector< std::string > /*[2:?]*/ > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }


const IfcParse::entity& Ifc4x3_rc4::IfcOpenCrossProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[715]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOpenCrossProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[715]); }
Ifc4x3_rc4::IfcOpenCrossProfileDef::IfcOpenCrossProfileDef(IfcEntityInstanceData&& e) : IfcProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcOpenCrossProfileDef::IfcOpenCrossProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, bool v3_HorizontalWidths, std::vector< double > /*[1:?]*/ v4_Widths, std::vector< double > /*[1:?]*/ v5_Slopes, boost::optional< std::vector< std::string > /*[2:?]*/ > v6_Tags) : IfcProfileDef(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, (v3_HorizontalWidths));set_attribute_value(3, (v4_Widths));set_attribute_value(4, (v5_Slopes)); if (v6_Tags) {set_attribute_value(5, (*v6_Tags)); }; populate_derived(); }

// Function implementations for IfcOpenShell


const IfcParse::entity& Ifc4x3_rc4::IfcOpenShell::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[719]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOpenShell::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[719]); }
Ifc4x3_rc4::IfcOpenShell::IfcOpenShell(IfcEntityInstanceData&& e) : IfcConnectedFaceSet(std::move(e)) { }
Ifc4x3_rc4::IfcOpenShell::IfcOpenShell(aggregate_of< ::Ifc4x3_rc4::IfcFace >::ptr v1_CfsFaces) : IfcConnectedFaceSet(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_CfsFaces)->generalize());; populate_derived(); }

// Function implementations for IfcOpeningElement
boost::optional< ::Ifc4x3_rc4::IfcOpeningElementTypeEnum::Value > Ifc4x3_rc4::IfcOpeningElement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcOpeningElementTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcOpeningElement::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcOpeningElementTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcOpeningElementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }

::Ifc4x3_rc4::IfcRelFillsElement::list::ptr Ifc4x3_rc4::IfcOpeningElement::HasFillings() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[941], 4)->as<IfcRelFillsElement>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcOpeningElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[716]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOpeningElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[716]); }
Ifc4x3_rc4::IfcOpeningElement::IfcOpeningElement(IfcEntityInstanceData&& e) : IfcFeatureElementSubtraction(std::move(e)) { }
Ifc4x3_rc4::IfcOpeningElement::IfcOpeningElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcOpeningElementTypeEnum::Value > v9_PredefinedType) : IfcFeatureElementSubtraction(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcOpeningElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcOpeningStandardCase


const IfcParse::entity& Ifc4x3_rc4::IfcOpeningStandardCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[718]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOpeningStandardCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[718]); }
Ifc4x3_rc4::IfcOpeningStandardCase::IfcOpeningStandardCase(IfcEntityInstanceData&& e) : IfcOpeningElement(std::move(e)) { }
Ifc4x3_rc4::IfcOpeningStandardCase::IfcOpeningStandardCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcOpeningElementTypeEnum::Value > v9_PredefinedType) : IfcOpeningElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcOpeningElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcOrganization
boost::optional< std::string > Ifc4x3_rc4::IfcOrganization::Identification() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcOrganization::setIdentification(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
std::string Ifc4x3_rc4::IfcOrganization::Name() const {  std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcOrganization::setName(std::string v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< std::string > Ifc4x3_rc4::IfcOrganization::Description() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcOrganization::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorRole >::ptr > Ifc4x3_rc4::IfcOrganization::Roles() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcActorRole >(); }
void Ifc4x3_rc4::IfcOrganization::setRoles(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorRole >::ptr > v) { if (v) {set_attribute_value(3, (*v)->generalize());} else {unset_attribute_value(3);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAddress >::ptr > Ifc4x3_rc4::IfcOrganization::Addresses() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcAddress >(); }
void Ifc4x3_rc4::IfcOrganization::setAddresses(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAddress >::ptr > v) { if (v) {set_attribute_value(4, (*v)->generalize());} else {unset_attribute_value(4);} }

::Ifc4x3_rc4::IfcOrganizationRelationship::list::ptr Ifc4x3_rc4::IfcOrganization::IsRelatedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[721], 3)->as<IfcOrganizationRelationship>(); }
::Ifc4x3_rc4::IfcOrganizationRelationship::list::ptr Ifc4x3_rc4::IfcOrganization::Relates() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[721], 2)->as<IfcOrganizationRelationship>(); }
::Ifc4x3_rc4::IfcPersonAndOrganization::list::ptr Ifc4x3_rc4::IfcOrganization::Engages() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[742], 1)->as<IfcPersonAndOrganization>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcOrganization::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[720]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOrganization::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[720]); }
Ifc4x3_rc4::IfcOrganization::IfcOrganization(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcOrganization::IfcOrganization(boost::optional< std::string > v1_Identification, std::string v2_Name, boost::optional< std::string > v3_Description, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorRole >::ptr > v4_Roles, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAddress >::ptr > v5_Addresses) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(5))) {  if (v1_Identification) {set_attribute_value(0, (*v1_Identification)); }set_attribute_value(1, (v2_Name)); if (v3_Description) {set_attribute_value(2, (*v3_Description)); } if (v4_Roles) {set_attribute_value(3, (*v4_Roles)->generalize()); } if (v5_Addresses) {set_attribute_value(4, (*v5_Addresses)->generalize()); }; populate_derived(); }

// Function implementations for IfcOrganizationRelationship
::Ifc4x3_rc4::IfcOrganization* Ifc4x3_rc4::IfcOrganizationRelationship::RelatingOrganization() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcOrganization>(true); }
void Ifc4x3_rc4::IfcOrganizationRelationship::setRelatingOrganization(::Ifc4x3_rc4::IfcOrganization* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
aggregate_of< ::Ifc4x3_rc4::IfcOrganization >::ptr Ifc4x3_rc4::IfcOrganizationRelationship::RelatedOrganizations() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcOrganization >(); }
void Ifc4x3_rc4::IfcOrganizationRelationship::setRelatedOrganizations(aggregate_of< ::Ifc4x3_rc4::IfcOrganization >::ptr v) { set_attribute_value(3, (v)->generalize());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcOrganizationRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[721]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOrganizationRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[721]); }
Ifc4x3_rc4::IfcOrganizationRelationship::IfcOrganizationRelationship(IfcEntityInstanceData&& e) : IfcResourceLevelRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcOrganizationRelationship::IfcOrganizationRelationship(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcOrganization* v3_RelatingOrganization, aggregate_of< ::Ifc4x3_rc4::IfcOrganization >::ptr v4_RelatedOrganizations) : IfcResourceLevelRelationship(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_RelatingOrganization ? v3_RelatingOrganization->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_RelatedOrganizations)->generalize());; populate_derived(); }

// Function implementations for IfcOrientedEdge
::Ifc4x3_rc4::IfcEdge* Ifc4x3_rc4::IfcOrientedEdge::EdgeElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcEdge>(true); }
void Ifc4x3_rc4::IfcOrientedEdge::setEdgeElement(::Ifc4x3_rc4::IfcEdge* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
bool Ifc4x3_rc4::IfcOrientedEdge::Orientation() const {  bool v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcOrientedEdge::setOrientation(bool v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcOrientedEdge::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[722]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOrientedEdge::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[722]); }
Ifc4x3_rc4::IfcOrientedEdge::IfcOrientedEdge(IfcEntityInstanceData&& e) : IfcEdge(std::move(e)) { }
Ifc4x3_rc4::IfcOrientedEdge::IfcOrientedEdge(::Ifc4x3_rc4::IfcEdge* v3_EdgeElement, bool v4_Orientation) : IfcEdge(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(2, v3_EdgeElement ? v3_EdgeElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Orientation));; populate_derived(); }

// Function implementations for IfcOuterBoundaryCurve


const IfcParse::entity& Ifc4x3_rc4::IfcOuterBoundaryCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[723]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOuterBoundaryCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[723]); }
Ifc4x3_rc4::IfcOuterBoundaryCurve::IfcOuterBoundaryCurve(IfcEntityInstanceData&& e) : IfcBoundaryCurve(std::move(e)) { }
Ifc4x3_rc4::IfcOuterBoundaryCurve::IfcOuterBoundaryCurve(aggregate_of< ::Ifc4x3_rc4::IfcSegment >::ptr v1_Segments, boost::logic::tribool v2_SelfIntersect) : IfcBoundaryCurve(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_Segments)->generalize());set_attribute_value(1, (v2_SelfIntersect));; populate_derived(); }

// Function implementations for IfcOutlet
boost::optional< ::Ifc4x3_rc4::IfcOutletTypeEnum::Value > Ifc4x3_rc4::IfcOutlet::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcOutletTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcOutlet::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcOutletTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcOutletTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcOutlet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[724]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOutlet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[724]); }
Ifc4x3_rc4::IfcOutlet::IfcOutlet(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcOutlet::IfcOutlet(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcOutletTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcOutletTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcOutletType
::Ifc4x3_rc4::IfcOutletTypeEnum::Value Ifc4x3_rc4::IfcOutletType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcOutletTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcOutletType::setPredefinedType(::Ifc4x3_rc4::IfcOutletTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcOutletTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcOutletType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[725]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOutletType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[725]); }
Ifc4x3_rc4::IfcOutletType::IfcOutletType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcOutletType::IfcOutletType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcOutletTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcOutletTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcOwnerHistory
::Ifc4x3_rc4::IfcPersonAndOrganization* Ifc4x3_rc4::IfcOwnerHistory::OwningUser() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcPersonAndOrganization>(true); }
void Ifc4x3_rc4::IfcOwnerHistory::setOwningUser(::Ifc4x3_rc4::IfcPersonAndOrganization* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcApplication* Ifc4x3_rc4::IfcOwnerHistory::OwningApplication() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcApplication>(true); }
void Ifc4x3_rc4::IfcOwnerHistory::setOwningApplication(::Ifc4x3_rc4::IfcApplication* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
boost::optional< ::Ifc4x3_rc4::IfcStateEnum::Value > Ifc4x3_rc4::IfcOwnerHistory::State() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcStateEnum::FromString(data_.get_attribute_value(2)); }
void Ifc4x3_rc4::IfcOwnerHistory::setState(boost::optional< ::Ifc4x3_rc4::IfcStateEnum::Value > v) { if (v) {set_attribute_value(2, EnumerationReference(&::Ifc4x3_rc4::IfcStateEnum::Class(), (size_t) *v));} else {unset_attribute_value(2);} }
boost::optional< ::Ifc4x3_rc4::IfcChangeActionEnum::Value > Ifc4x3_rc4::IfcOwnerHistory::ChangeAction() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcChangeActionEnum::FromString(data_.get_attribute_value(3)); }
void Ifc4x3_rc4::IfcOwnerHistory::setChangeAction(boost::optional< ::Ifc4x3_rc4::IfcChangeActionEnum::Value > v) { if (v) {set_attribute_value(3, EnumerationReference(&::Ifc4x3_rc4::IfcChangeActionEnum::Class(), (size_t) *v));} else {unset_attribute_value(3);} }
boost::optional< int > Ifc4x3_rc4::IfcOwnerHistory::LastModifiedDate() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } int v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcOwnerHistory::setLastModifiedDate(boost::optional< int > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
::Ifc4x3_rc4::IfcPersonAndOrganization* Ifc4x3_rc4::IfcOwnerHistory::LastModifyingUser() const { if(data_.get_attribute_value(5).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcPersonAndOrganization>(true); }
void Ifc4x3_rc4::IfcOwnerHistory::setLastModifyingUser(::Ifc4x3_rc4::IfcPersonAndOrganization* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcApplication* Ifc4x3_rc4::IfcOwnerHistory::LastModifyingApplication() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcApplication>(true); }
void Ifc4x3_rc4::IfcOwnerHistory::setLastModifyingApplication(::Ifc4x3_rc4::IfcApplication* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
int Ifc4x3_rc4::IfcOwnerHistory::CreationDate() const {  int v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcOwnerHistory::setCreationDate(int v) { set_attribute_value(7, v);if constexpr (false)unset_attribute_value(7); }


const IfcParse::entity& Ifc4x3_rc4::IfcOwnerHistory::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[727]); }
const IfcParse::entity& Ifc4x3_rc4::IfcOwnerHistory::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[727]); }
Ifc4x3_rc4::IfcOwnerHistory::IfcOwnerHistory(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcOwnerHistory::IfcOwnerHistory(::Ifc4x3_rc4::IfcPersonAndOrganization* v1_OwningUser, ::Ifc4x3_rc4::IfcApplication* v2_OwningApplication, boost::optional< ::Ifc4x3_rc4::IfcStateEnum::Value > v3_State, boost::optional< ::Ifc4x3_rc4::IfcChangeActionEnum::Value > v4_ChangeAction, boost::optional< int > v5_LastModifiedDate, ::Ifc4x3_rc4::IfcPersonAndOrganization* v6_LastModifyingUser, ::Ifc4x3_rc4::IfcApplication* v7_LastModifyingApplication, int v8_CreationDate) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, v1_OwningUser ? v1_OwningUser->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_OwningApplication ? v2_OwningApplication->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_State) {set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcStateEnum::Class(),(size_t)*v3_State))); } if (v4_ChangeAction) {set_attribute_value(3, (EnumerationReference(&::Ifc4x3_rc4::IfcChangeActionEnum::Class(),(size_t)*v4_ChangeAction))); } if (v5_LastModifiedDate) {set_attribute_value(4, (*v5_LastModifiedDate)); }set_attribute_value(5, v6_LastModifyingUser ? v6_LastModifyingUser->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_LastModifyingApplication ? v7_LastModifyingApplication->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (v8_CreationDate));; populate_derived(); }

// Function implementations for IfcParameterizedProfileDef
::Ifc4x3_rc4::IfcAxis2Placement2D* Ifc4x3_rc4::IfcParameterizedProfileDef::Position() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcAxis2Placement2D>(true); }
void Ifc4x3_rc4::IfcParameterizedProfileDef::setPosition(::Ifc4x3_rc4::IfcAxis2Placement2D* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcParameterizedProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[728]); }
const IfcParse::entity& Ifc4x3_rc4::IfcParameterizedProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[728]); }
Ifc4x3_rc4::IfcParameterizedProfileDef::IfcParameterizedProfileDef(IfcEntityInstanceData&& e) : IfcProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcParameterizedProfileDef::IfcParameterizedProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position) : IfcProfileDef(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPath
aggregate_of< ::Ifc4x3_rc4::IfcOrientedEdge >::ptr Ifc4x3_rc4::IfcPath::EdgeList() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcOrientedEdge >(); }
void Ifc4x3_rc4::IfcPath::setEdgeList(aggregate_of< ::Ifc4x3_rc4::IfcOrientedEdge >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcPath::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[730]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPath::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[730]); }
Ifc4x3_rc4::IfcPath::IfcPath(IfcEntityInstanceData&& e) : IfcTopologicalRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcPath::IfcPath(aggregate_of< ::Ifc4x3_rc4::IfcOrientedEdge >::ptr v1_EdgeList) : IfcTopologicalRepresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_EdgeList)->generalize());; populate_derived(); }

// Function implementations for IfcPavement
boost::optional< ::Ifc4x3_rc4::IfcPavementTypeEnum::Value > Ifc4x3_rc4::IfcPavement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcPavementTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcPavement::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcPavementTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcPavementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPavement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[731]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPavement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[731]); }
Ifc4x3_rc4::IfcPavement::IfcPavement(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcPavement::IfcPavement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcPavementTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcPavementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcPavementType
::Ifc4x3_rc4::IfcPavementTypeEnum::Value Ifc4x3_rc4::IfcPavementType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcPavementTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcPavementType::setPredefinedType(::Ifc4x3_rc4::IfcPavementTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcPavementTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcPavementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[732]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPavementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[732]); }
Ifc4x3_rc4::IfcPavementType::IfcPavementType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcPavementType::IfcPavementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcPavementTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcPavementTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcPcurve
::Ifc4x3_rc4::IfcSurface* Ifc4x3_rc4::IfcPcurve::BasisSurface() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcSurface>(true); }
void Ifc4x3_rc4::IfcPcurve::setBasisSurface(::Ifc4x3_rc4::IfcSurface* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcPcurve::ReferenceCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcPcurve::setReferenceCurve(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcPcurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[734]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPcurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[734]); }
Ifc4x3_rc4::IfcPcurve::IfcPcurve(IfcEntityInstanceData&& e) : IfcCurve(std::move(e)) { }
Ifc4x3_rc4::IfcPcurve::IfcPcurve(::Ifc4x3_rc4::IfcSurface* v1_BasisSurface, ::Ifc4x3_rc4::IfcCurve* v2_ReferenceCurve) : IfcCurve(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_BasisSurface ? v1_BasisSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_ReferenceCurve ? v2_ReferenceCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPerformanceHistory
std::string Ifc4x3_rc4::IfcPerformanceHistory::LifeCyclePhase() const {  std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcPerformanceHistory::setLifeCyclePhase(std::string v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< ::Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::Value > Ifc4x3_rc4::IfcPerformanceHistory::PredefinedType() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcPerformanceHistory::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::Value > v) { if (v) {set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(7);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPerformanceHistory::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[735]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPerformanceHistory::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[735]); }
Ifc4x3_rc4::IfcPerformanceHistory::IfcPerformanceHistory(IfcEntityInstanceData&& e) : IfcControl(std::move(e)) { }
Ifc4x3_rc4::IfcPerformanceHistory::IfcPerformanceHistory(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, std::string v7_LifeCyclePhase, boost::optional< ::Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::Value > v8_PredefinedType) : IfcControl(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); }set_attribute_value(6, (v7_LifeCyclePhase)); if (v8_PredefinedType) {set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcPerformanceHistoryTypeEnum::Class(),(size_t)*v8_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcPermeableCoveringProperties
::Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::Value Ifc4x3_rc4::IfcPermeableCoveringProperties::OperationType() const {  return ::Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::FromString(data_.get_attribute_value(4)); }
void Ifc4x3_rc4::IfcPermeableCoveringProperties::setOperationType(::Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::Value v) { set_attribute_value(4, EnumerationReference(&::Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcWindowPanelPositionEnum::Value Ifc4x3_rc4::IfcPermeableCoveringProperties::PanelPosition() const {  return ::Ifc4x3_rc4::IfcWindowPanelPositionEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcPermeableCoveringProperties::setPanelPosition(::Ifc4x3_rc4::IfcWindowPanelPositionEnum::Value v) { set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcWindowPanelPositionEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(5); }
boost::optional< double > Ifc4x3_rc4::IfcPermeableCoveringProperties::FrameDepth() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcPermeableCoveringProperties::setFrameDepth(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< double > Ifc4x3_rc4::IfcPermeableCoveringProperties::FrameThickness() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcPermeableCoveringProperties::setFrameThickness(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
::Ifc4x3_rc4::IfcShapeAspect* Ifc4x3_rc4::IfcPermeableCoveringProperties::ShapeAspectStyle() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcShapeAspect>(true); }
void Ifc4x3_rc4::IfcPermeableCoveringProperties::setShapeAspectStyle(::Ifc4x3_rc4::IfcShapeAspect* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcPermeableCoveringProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[738]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPermeableCoveringProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[738]); }
Ifc4x3_rc4::IfcPermeableCoveringProperties::IfcPermeableCoveringProperties(IfcEntityInstanceData&& e) : IfcPreDefinedPropertySet(std::move(e)) { }
Ifc4x3_rc4::IfcPermeableCoveringProperties::IfcPermeableCoveringProperties(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::Value v5_OperationType, ::Ifc4x3_rc4::IfcWindowPanelPositionEnum::Value v6_PanelPosition, boost::optional< double > v7_FrameDepth, boost::optional< double > v8_FrameThickness, ::Ifc4x3_rc4::IfcShapeAspect* v9_ShapeAspectStyle) : IfcPreDefinedPropertySet(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (EnumerationReference(&::Ifc4x3_rc4::IfcPermeableCoveringOperationEnum::Class(),(size_t)v5_OperationType)));set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowPanelPositionEnum::Class(),(size_t)v6_PanelPosition))); if (v7_FrameDepth) {set_attribute_value(6, (*v7_FrameDepth)); } if (v8_FrameThickness) {set_attribute_value(7, (*v8_FrameThickness)); }set_attribute_value(8, v9_ShapeAspectStyle ? v9_ShapeAspectStyle->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPermit
boost::optional< ::Ifc4x3_rc4::IfcPermitTypeEnum::Value > Ifc4x3_rc4::IfcPermit::PredefinedType() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcPermitTypeEnum::FromString(data_.get_attribute_value(6)); }
void Ifc4x3_rc4::IfcPermit::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcPermitTypeEnum::Value > v) { if (v) {set_attribute_value(6, EnumerationReference(&::Ifc4x3_rc4::IfcPermitTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPermit::Status() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcPermit::setStatus(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPermit::LongDescription() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcPermit::setLongDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPermit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[739]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPermit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[739]); }
Ifc4x3_rc4::IfcPermit::IfcPermit(IfcEntityInstanceData&& e) : IfcControl(std::move(e)) { }
Ifc4x3_rc4::IfcPermit::IfcPermit(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< ::Ifc4x3_rc4::IfcPermitTypeEnum::Value > v7_PredefinedType, boost::optional< std::string > v8_Status, boost::optional< std::string > v9_LongDescription) : IfcControl(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_PredefinedType) {set_attribute_value(6, (EnumerationReference(&::Ifc4x3_rc4::IfcPermitTypeEnum::Class(),(size_t)*v7_PredefinedType))); } if (v8_Status) {set_attribute_value(7, (*v8_Status)); } if (v9_LongDescription) {set_attribute_value(8, (*v9_LongDescription)); }; populate_derived(); }

// Function implementations for IfcPerson
boost::optional< std::string > Ifc4x3_rc4::IfcPerson::Identification() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcPerson::setIdentification(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPerson::FamilyName() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcPerson::setFamilyName(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPerson::GivenName() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcPerson::setGivenName(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcPerson::MiddleNames() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcPerson::setMiddleNames(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcPerson::PrefixTitles() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcPerson::setPrefixTitles(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcPerson::SuffixTitles() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcPerson::setSuffixTitles(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorRole >::ptr > Ifc4x3_rc4::IfcPerson::Roles() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(6); return es->as< ::Ifc4x3_rc4::IfcActorRole >(); }
void Ifc4x3_rc4::IfcPerson::setRoles(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorRole >::ptr > v) { if (v) {set_attribute_value(6, (*v)->generalize());} else {unset_attribute_value(6);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAddress >::ptr > Ifc4x3_rc4::IfcPerson::Addresses() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcAddress >(); }
void Ifc4x3_rc4::IfcPerson::setAddresses(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAddress >::ptr > v) { if (v) {set_attribute_value(7, (*v)->generalize());} else {unset_attribute_value(7);} }

::Ifc4x3_rc4::IfcPersonAndOrganization::list::ptr Ifc4x3_rc4::IfcPerson::EngagedIn() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[742], 0)->as<IfcPersonAndOrganization>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcPerson::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[741]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPerson::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[741]); }
Ifc4x3_rc4::IfcPerson::IfcPerson(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcPerson::IfcPerson(boost::optional< std::string > v1_Identification, boost::optional< std::string > v2_FamilyName, boost::optional< std::string > v3_GivenName, boost::optional< std::vector< std::string > /*[1:?]*/ > v4_MiddleNames, boost::optional< std::vector< std::string > /*[1:?]*/ > v5_PrefixTitles, boost::optional< std::vector< std::string > /*[1:?]*/ > v6_SuffixTitles, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorRole >::ptr > v7_Roles, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAddress >::ptr > v8_Addresses) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(8))) {  if (v1_Identification) {set_attribute_value(0, (*v1_Identification)); } if (v2_FamilyName) {set_attribute_value(1, (*v2_FamilyName)); } if (v3_GivenName) {set_attribute_value(2, (*v3_GivenName)); } if (v4_MiddleNames) {set_attribute_value(3, (*v4_MiddleNames)); } if (v5_PrefixTitles) {set_attribute_value(4, (*v5_PrefixTitles)); } if (v6_SuffixTitles) {set_attribute_value(5, (*v6_SuffixTitles)); } if (v7_Roles) {set_attribute_value(6, (*v7_Roles)->generalize()); } if (v8_Addresses) {set_attribute_value(7, (*v8_Addresses)->generalize()); }; populate_derived(); }

// Function implementations for IfcPersonAndOrganization
::Ifc4x3_rc4::IfcPerson* Ifc4x3_rc4::IfcPersonAndOrganization::ThePerson() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcPerson>(true); }
void Ifc4x3_rc4::IfcPersonAndOrganization::setThePerson(::Ifc4x3_rc4::IfcPerson* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcOrganization* Ifc4x3_rc4::IfcPersonAndOrganization::TheOrganization() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcOrganization>(true); }
void Ifc4x3_rc4::IfcPersonAndOrganization::setTheOrganization(::Ifc4x3_rc4::IfcOrganization* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorRole >::ptr > Ifc4x3_rc4::IfcPersonAndOrganization::Roles() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcActorRole >(); }
void Ifc4x3_rc4::IfcPersonAndOrganization::setRoles(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorRole >::ptr > v) { if (v) {set_attribute_value(2, (*v)->generalize());} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPersonAndOrganization::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[742]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPersonAndOrganization::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[742]); }
Ifc4x3_rc4::IfcPersonAndOrganization::IfcPersonAndOrganization(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcPersonAndOrganization::IfcPersonAndOrganization(::Ifc4x3_rc4::IfcPerson* v1_ThePerson, ::Ifc4x3_rc4::IfcOrganization* v2_TheOrganization, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcActorRole >::ptr > v3_Roles) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_ThePerson ? v1_ThePerson->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_TheOrganization ? v2_TheOrganization->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Roles) {set_attribute_value(2, (*v3_Roles)->generalize()); }; populate_derived(); }

// Function implementations for IfcPhysicalComplexQuantity
aggregate_of< ::Ifc4x3_rc4::IfcPhysicalQuantity >::ptr Ifc4x3_rc4::IfcPhysicalComplexQuantity::HasQuantities() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcPhysicalQuantity >(); }
void Ifc4x3_rc4::IfcPhysicalComplexQuantity::setHasQuantities(aggregate_of< ::Ifc4x3_rc4::IfcPhysicalQuantity >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }
std::string Ifc4x3_rc4::IfcPhysicalComplexQuantity::Discrimination() const {  std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcPhysicalComplexQuantity::setDiscrimination(std::string v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcPhysicalComplexQuantity::Quality() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcPhysicalComplexQuantity::setQuality(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPhysicalComplexQuantity::Usage() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcPhysicalComplexQuantity::setUsage(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPhysicalComplexQuantity::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[744]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPhysicalComplexQuantity::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[744]); }
Ifc4x3_rc4::IfcPhysicalComplexQuantity::IfcPhysicalComplexQuantity(IfcEntityInstanceData&& e) : IfcPhysicalQuantity(std::move(e)) { }
Ifc4x3_rc4::IfcPhysicalComplexQuantity::IfcPhysicalComplexQuantity(std::string v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcPhysicalQuantity >::ptr v3_HasQuantities, std::string v4_Discrimination, boost::optional< std::string > v5_Quality, boost::optional< std::string > v6_Usage) : IfcPhysicalQuantity(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_HasQuantities)->generalize());set_attribute_value(3, (v4_Discrimination)); if (v5_Quality) {set_attribute_value(4, (*v5_Quality)); } if (v6_Usage) {set_attribute_value(5, (*v6_Usage)); }; populate_derived(); }

// Function implementations for IfcPhysicalQuantity
std::string Ifc4x3_rc4::IfcPhysicalQuantity::Name() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcPhysicalQuantity::setName(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcPhysicalQuantity::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcPhysicalQuantity::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcPhysicalQuantity::HasExternalReferences() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }
::Ifc4x3_rc4::IfcPhysicalComplexQuantity::list::ptr Ifc4x3_rc4::IfcPhysicalQuantity::PartOfComplex() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[744], 2)->as<IfcPhysicalComplexQuantity>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcPhysicalQuantity::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[746]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPhysicalQuantity::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[746]); }
Ifc4x3_rc4::IfcPhysicalQuantity::IfcPhysicalQuantity(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcPhysicalQuantity::IfcPhysicalQuantity(std::string v1_Name, boost::optional< std::string > v2_Description) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }; populate_derived(); }

// Function implementations for IfcPhysicalSimpleQuantity
::Ifc4x3_rc4::IfcNamedUnit* Ifc4x3_rc4::IfcPhysicalSimpleQuantity::Unit() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcNamedUnit>(true); }
void Ifc4x3_rc4::IfcPhysicalSimpleQuantity::setUnit(::Ifc4x3_rc4::IfcNamedUnit* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcPhysicalSimpleQuantity::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[747]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPhysicalSimpleQuantity::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[747]); }
Ifc4x3_rc4::IfcPhysicalSimpleQuantity::IfcPhysicalSimpleQuantity(IfcEntityInstanceData&& e) : IfcPhysicalQuantity(std::move(e)) { }
Ifc4x3_rc4::IfcPhysicalSimpleQuantity::IfcPhysicalSimpleQuantity(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcNamedUnit* v3_Unit) : IfcPhysicalQuantity(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_Unit ? v3_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPile
boost::optional< ::Ifc4x3_rc4::IfcPileTypeEnum::Value > Ifc4x3_rc4::IfcPile::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcPileTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcPile::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcPileTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcPileTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }
boost::optional< ::Ifc4x3_rc4::IfcPileConstructionEnum::Value > Ifc4x3_rc4::IfcPile::ConstructionType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcPileConstructionEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcPile::setConstructionType(boost::optional< ::Ifc4x3_rc4::IfcPileConstructionEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcPileConstructionEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPile::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[748]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPile::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[748]); }
Ifc4x3_rc4::IfcPile::IfcPile(IfcEntityInstanceData&& e) : IfcDeepFoundation(std::move(e)) { }
Ifc4x3_rc4::IfcPile::IfcPile(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcPileTypeEnum::Value > v9_PredefinedType, boost::optional< ::Ifc4x3_rc4::IfcPileConstructionEnum::Value > v10_ConstructionType) : IfcDeepFoundation(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcPileTypeEnum::Class(),(size_t)*v9_PredefinedType))); } if (v10_ConstructionType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcPileConstructionEnum::Class(),(size_t)*v10_ConstructionType))); }; populate_derived(); }

// Function implementations for IfcPileType
::Ifc4x3_rc4::IfcPileTypeEnum::Value Ifc4x3_rc4::IfcPileType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcPileTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcPileType::setPredefinedType(::Ifc4x3_rc4::IfcPileTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcPileTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcPileType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[750]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPileType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[750]); }
Ifc4x3_rc4::IfcPileType::IfcPileType(IfcEntityInstanceData&& e) : IfcDeepFoundationType(std::move(e)) { }
Ifc4x3_rc4::IfcPileType::IfcPileType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcPileTypeEnum::Value v10_PredefinedType) : IfcDeepFoundationType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcPileTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcPipeFitting
boost::optional< ::Ifc4x3_rc4::IfcPipeFittingTypeEnum::Value > Ifc4x3_rc4::IfcPipeFitting::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcPipeFittingTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcPipeFitting::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcPipeFittingTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcPipeFittingTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPipeFitting::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[752]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPipeFitting::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[752]); }
Ifc4x3_rc4::IfcPipeFitting::IfcPipeFitting(IfcEntityInstanceData&& e) : IfcFlowFitting(std::move(e)) { }
Ifc4x3_rc4::IfcPipeFitting::IfcPipeFitting(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcPipeFittingTypeEnum::Value > v9_PredefinedType) : IfcFlowFitting(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcPipeFittingTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcPipeFittingType
::Ifc4x3_rc4::IfcPipeFittingTypeEnum::Value Ifc4x3_rc4::IfcPipeFittingType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcPipeFittingTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcPipeFittingType::setPredefinedType(::Ifc4x3_rc4::IfcPipeFittingTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcPipeFittingTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcPipeFittingType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[753]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPipeFittingType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[753]); }
Ifc4x3_rc4::IfcPipeFittingType::IfcPipeFittingType(IfcEntityInstanceData&& e) : IfcFlowFittingType(std::move(e)) { }
Ifc4x3_rc4::IfcPipeFittingType::IfcPipeFittingType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcPipeFittingTypeEnum::Value v10_PredefinedType) : IfcFlowFittingType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcPipeFittingTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcPipeSegment
boost::optional< ::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Value > Ifc4x3_rc4::IfcPipeSegment::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcPipeSegment::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPipeSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[755]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPipeSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[755]); }
Ifc4x3_rc4::IfcPipeSegment::IfcPipeSegment(IfcEntityInstanceData&& e) : IfcFlowSegment(std::move(e)) { }
Ifc4x3_rc4::IfcPipeSegment::IfcPipeSegment(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Value > v9_PredefinedType) : IfcFlowSegment(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcPipeSegmentType
::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Value Ifc4x3_rc4::IfcPipeSegmentType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcPipeSegmentType::setPredefinedType(::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcPipeSegmentType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[756]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPipeSegmentType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[756]); }
Ifc4x3_rc4::IfcPipeSegmentType::IfcPipeSegmentType(IfcEntityInstanceData&& e) : IfcFlowSegmentType(std::move(e)) { }
Ifc4x3_rc4::IfcPipeSegmentType::IfcPipeSegmentType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Value v10_PredefinedType) : IfcFlowSegmentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcPipeSegmentTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcPixelTexture
int Ifc4x3_rc4::IfcPixelTexture::Width() const {  int v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcPixelTexture::setWidth(int v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
int Ifc4x3_rc4::IfcPixelTexture::Height() const {  int v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcPixelTexture::setHeight(int v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
int Ifc4x3_rc4::IfcPixelTexture::ColourComponents() const {  int v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcPixelTexture::setColourComponents(int v) { set_attribute_value(7, v);if constexpr (false)unset_attribute_value(7); }
std::vector< boost::dynamic_bitset<> > /*[1:?]*/ Ifc4x3_rc4::IfcPixelTexture::Pixel() const {  std::vector< boost::dynamic_bitset<> > /*[1:?]*/ v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcPixelTexture::setPixel(std::vector< boost::dynamic_bitset<> > /*[1:?]*/ v) { set_attribute_value(8, v);if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcPixelTexture::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[758]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPixelTexture::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[758]); }
Ifc4x3_rc4::IfcPixelTexture::IfcPixelTexture(IfcEntityInstanceData&& e) : IfcSurfaceTexture(std::move(e)) { }
Ifc4x3_rc4::IfcPixelTexture::IfcPixelTexture(bool v1_RepeatS, bool v2_RepeatT, boost::optional< std::string > v3_Mode, ::Ifc4x3_rc4::IfcCartesianTransformationOperator2D* v4_TextureTransform, boost::optional< std::vector< std::string > /*[1:?]*/ > v5_Parameter, int v6_Width, int v7_Height, int v8_ColourComponents, std::vector< boost::dynamic_bitset<> > /*[1:?]*/ v9_Pixel) : IfcSurfaceTexture(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_RepeatS));set_attribute_value(1, (v2_RepeatT)); if (v3_Mode) {set_attribute_value(2, (*v3_Mode)); }set_attribute_value(3, v4_TextureTransform ? v4_TextureTransform->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Parameter) {set_attribute_value(4, (*v5_Parameter)); }set_attribute_value(5, (v6_Width));set_attribute_value(6, (v7_Height));set_attribute_value(7, (v8_ColourComponents));set_attribute_value(8, (v9_Pixel));; populate_derived(); }

// Function implementations for IfcPlacement
::Ifc4x3_rc4::IfcPoint* Ifc4x3_rc4::IfcPlacement::Location() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcPoint>(true); }
void Ifc4x3_rc4::IfcPlacement::setLocation(::Ifc4x3_rc4::IfcPoint* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcPlacement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[759]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPlacement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[759]); }
Ifc4x3_rc4::IfcPlacement::IfcPlacement(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcPlacement::IfcPlacement(::Ifc4x3_rc4::IfcPoint* v1_Location) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_Location ? v1_Location->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPlanarBox
::Ifc4x3_rc4::IfcAxis2Placement* Ifc4x3_rc4::IfcPlanarBox::Placement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcAxis2Placement>(true); }
void Ifc4x3_rc4::IfcPlanarBox::setPlacement(::Ifc4x3_rc4::IfcAxis2Placement* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcPlanarBox::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[760]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPlanarBox::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[760]); }
Ifc4x3_rc4::IfcPlanarBox::IfcPlanarBox(IfcEntityInstanceData&& e) : IfcPlanarExtent(std::move(e)) { }
Ifc4x3_rc4::IfcPlanarBox::IfcPlanarBox(double v1_SizeInX, double v2_SizeInY, ::Ifc4x3_rc4::IfcAxis2Placement* v3_Placement) : IfcPlanarExtent(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_SizeInX));set_attribute_value(1, (v2_SizeInY));set_attribute_value(2, v3_Placement ? v3_Placement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPlanarExtent
double Ifc4x3_rc4::IfcPlanarExtent::SizeInX() const {  double v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcPlanarExtent::setSizeInX(double v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
double Ifc4x3_rc4::IfcPlanarExtent::SizeInY() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcPlanarExtent::setSizeInY(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcPlanarExtent::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[761]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPlanarExtent::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[761]); }
Ifc4x3_rc4::IfcPlanarExtent::IfcPlanarExtent(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcPlanarExtent::IfcPlanarExtent(double v1_SizeInX, double v2_SizeInY) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_SizeInX));set_attribute_value(1, (v2_SizeInY));; populate_derived(); }

// Function implementations for IfcPlane


const IfcParse::entity& Ifc4x3_rc4::IfcPlane::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[763]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPlane::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[763]); }
Ifc4x3_rc4::IfcPlane::IfcPlane(IfcEntityInstanceData&& e) : IfcElementarySurface(std::move(e)) { }
Ifc4x3_rc4::IfcPlane::IfcPlane(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position) : IfcElementarySurface(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPlant


const IfcParse::entity& Ifc4x3_rc4::IfcPlant::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[765]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPlant::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[765]); }
Ifc4x3_rc4::IfcPlant::IfcPlant(IfcEntityInstanceData&& e) : IfcGeographicElement(std::move(e)) { }
Ifc4x3_rc4::IfcPlant::IfcPlant(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Value > v9_PredefinedType) : IfcGeographicElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGeographicElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcPlate
boost::optional< ::Ifc4x3_rc4::IfcPlateTypeEnum::Value > Ifc4x3_rc4::IfcPlate::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcPlateTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcPlate::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcPlateTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcPlateTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPlate::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[766]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPlate::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[766]); }
Ifc4x3_rc4::IfcPlate::IfcPlate(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcPlate::IfcPlate(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcPlateTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcPlateTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcPlateStandardCase


const IfcParse::entity& Ifc4x3_rc4::IfcPlateStandardCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[767]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPlateStandardCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[767]); }
Ifc4x3_rc4::IfcPlateStandardCase::IfcPlateStandardCase(IfcEntityInstanceData&& e) : IfcPlate(std::move(e)) { }
Ifc4x3_rc4::IfcPlateStandardCase::IfcPlateStandardCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcPlateTypeEnum::Value > v9_PredefinedType) : IfcPlate(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcPlateTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcPlateType
::Ifc4x3_rc4::IfcPlateTypeEnum::Value Ifc4x3_rc4::IfcPlateType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcPlateTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcPlateType::setPredefinedType(::Ifc4x3_rc4::IfcPlateTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcPlateTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcPlateType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[768]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPlateType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[768]); }
Ifc4x3_rc4::IfcPlateType::IfcPlateType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcPlateType::IfcPlateType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcPlateTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcPlateTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcPoint


const IfcParse::entity& Ifc4x3_rc4::IfcPoint::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[770]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPoint::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[770]); }
Ifc4x3_rc4::IfcPoint::IfcPoint(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcPoint::IfcPoint() : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcPointByDistanceExpression
::Ifc4x3_rc4::IfcCurveMeasureSelect* Ifc4x3_rc4::IfcPointByDistanceExpression::DistanceAlong() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurveMeasureSelect>(true); }
void Ifc4x3_rc4::IfcPointByDistanceExpression::setDistanceAlong(::Ifc4x3_rc4::IfcCurveMeasureSelect* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
boost::optional< double > Ifc4x3_rc4::IfcPointByDistanceExpression::OffsetLateral() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcPointByDistanceExpression::setOffsetLateral(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< double > Ifc4x3_rc4::IfcPointByDistanceExpression::OffsetVertical() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcPointByDistanceExpression::setOffsetVertical(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcPointByDistanceExpression::OffsetLongitudinal() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcPointByDistanceExpression::setOffsetLongitudinal(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcPointByDistanceExpression::BasisCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcPointByDistanceExpression::setBasisCurve(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcPointByDistanceExpression::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[771]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPointByDistanceExpression::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[771]); }
Ifc4x3_rc4::IfcPointByDistanceExpression::IfcPointByDistanceExpression(IfcEntityInstanceData&& e) : IfcPoint(std::move(e)) { }
Ifc4x3_rc4::IfcPointByDistanceExpression::IfcPointByDistanceExpression(::Ifc4x3_rc4::IfcCurveMeasureSelect* v1_DistanceAlong, boost::optional< double > v2_OffsetLateral, boost::optional< double > v3_OffsetVertical, boost::optional< double > v4_OffsetLongitudinal, ::Ifc4x3_rc4::IfcCurve* v5_BasisCurve) : IfcPoint(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_DistanceAlong ? v1_DistanceAlong->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_OffsetLateral) {set_attribute_value(1, (*v2_OffsetLateral)); } if (v3_OffsetVertical) {set_attribute_value(2, (*v3_OffsetVertical)); } if (v4_OffsetLongitudinal) {set_attribute_value(3, (*v4_OffsetLongitudinal)); }set_attribute_value(4, v5_BasisCurve ? v5_BasisCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPointOnCurve
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcPointOnCurve::BasisCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcPointOnCurve::setBasisCurve(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
double Ifc4x3_rc4::IfcPointOnCurve::PointParameter() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcPointOnCurve::setPointParameter(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcPointOnCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[772]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPointOnCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[772]); }
Ifc4x3_rc4::IfcPointOnCurve::IfcPointOnCurve(IfcEntityInstanceData&& e) : IfcPoint(std::move(e)) { }
Ifc4x3_rc4::IfcPointOnCurve::IfcPointOnCurve(::Ifc4x3_rc4::IfcCurve* v1_BasisCurve, double v2_PointParameter) : IfcPoint(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_BasisCurve ? v1_BasisCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_PointParameter));; populate_derived(); }

// Function implementations for IfcPointOnSurface
::Ifc4x3_rc4::IfcSurface* Ifc4x3_rc4::IfcPointOnSurface::BasisSurface() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcSurface>(true); }
void Ifc4x3_rc4::IfcPointOnSurface::setBasisSurface(::Ifc4x3_rc4::IfcSurface* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
double Ifc4x3_rc4::IfcPointOnSurface::PointParameterU() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcPointOnSurface::setPointParameterU(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcPointOnSurface::PointParameterV() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcPointOnSurface::setPointParameterV(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcPointOnSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[773]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPointOnSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[773]); }
Ifc4x3_rc4::IfcPointOnSurface::IfcPointOnSurface(IfcEntityInstanceData&& e) : IfcPoint(std::move(e)) { }
Ifc4x3_rc4::IfcPointOnSurface::IfcPointOnSurface(::Ifc4x3_rc4::IfcSurface* v1_BasisSurface, double v2_PointParameterU, double v3_PointParameterV) : IfcPoint(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_BasisSurface ? v1_BasisSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_PointParameterU));set_attribute_value(2, (v3_PointParameterV));; populate_derived(); }

// Function implementations for IfcPolyLoop
aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr Ifc4x3_rc4::IfcPolyLoop::Polygon() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcCartesianPoint >(); }
void Ifc4x3_rc4::IfcPolyLoop::setPolygon(aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcPolyLoop::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[778]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPolyLoop::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[778]); }
Ifc4x3_rc4::IfcPolyLoop::IfcPolyLoop(IfcEntityInstanceData&& e) : IfcLoop(std::move(e)) { }
Ifc4x3_rc4::IfcPolyLoop::IfcPolyLoop(aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v1_Polygon) : IfcLoop(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Polygon)->generalize());; populate_derived(); }

// Function implementations for IfcPolygonalBoundedHalfSpace
::Ifc4x3_rc4::IfcAxis2Placement3D* Ifc4x3_rc4::IfcPolygonalBoundedHalfSpace::Position() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcAxis2Placement3D>(true); }
void Ifc4x3_rc4::IfcPolygonalBoundedHalfSpace::setPosition(::Ifc4x3_rc4::IfcAxis2Placement3D* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcBoundedCurve* Ifc4x3_rc4::IfcPolygonalBoundedHalfSpace::PolygonalBoundary() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcBoundedCurve>(true); }
void Ifc4x3_rc4::IfcPolygonalBoundedHalfSpace::setPolygonalBoundary(::Ifc4x3_rc4::IfcBoundedCurve* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcPolygonalBoundedHalfSpace::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[775]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPolygonalBoundedHalfSpace::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[775]); }
Ifc4x3_rc4::IfcPolygonalBoundedHalfSpace::IfcPolygonalBoundedHalfSpace(IfcEntityInstanceData&& e) : IfcHalfSpaceSolid(std::move(e)) { }
Ifc4x3_rc4::IfcPolygonalBoundedHalfSpace::IfcPolygonalBoundedHalfSpace(::Ifc4x3_rc4::IfcSurface* v1_BaseSurface, bool v2_AgreementFlag, ::Ifc4x3_rc4::IfcAxis2Placement3D* v3_Position, ::Ifc4x3_rc4::IfcBoundedCurve* v4_PolygonalBoundary) : IfcHalfSpaceSolid(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_BaseSurface ? v1_BaseSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_AgreementFlag));set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_PolygonalBoundary ? v4_PolygonalBoundary->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPolygonalFaceSet
boost::optional< bool > Ifc4x3_rc4::IfcPolygonalFaceSet::Closed() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } bool v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcPolygonalFaceSet::setClosed(boost::optional< bool > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
aggregate_of< ::Ifc4x3_rc4::IfcIndexedPolygonalFace >::ptr Ifc4x3_rc4::IfcPolygonalFaceSet::Faces() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcIndexedPolygonalFace >(); }
void Ifc4x3_rc4::IfcPolygonalFaceSet::setFaces(aggregate_of< ::Ifc4x3_rc4::IfcIndexedPolygonalFace >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }
boost::optional< std::vector< int > /*[1:?]*/ > Ifc4x3_rc4::IfcPolygonalFaceSet::PnIndex() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::vector< int > /*[1:?]*/ v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcPolygonalFaceSet::setPnIndex(boost::optional< std::vector< int > /*[1:?]*/ > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPolygonalFaceSet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[776]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPolygonalFaceSet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[776]); }
Ifc4x3_rc4::IfcPolygonalFaceSet::IfcPolygonalFaceSet(IfcEntityInstanceData&& e) : IfcTessellatedFaceSet(std::move(e)) { }
Ifc4x3_rc4::IfcPolygonalFaceSet::IfcPolygonalFaceSet(::Ifc4x3_rc4::IfcCartesianPointList3D* v1_Coordinates, boost::optional< bool > v2_Closed, aggregate_of< ::Ifc4x3_rc4::IfcIndexedPolygonalFace >::ptr v3_Faces, boost::optional< std::vector< int > /*[1:?]*/ > v4_PnIndex) : IfcTessellatedFaceSet(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Coordinates ? v1_Coordinates->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_Closed) {set_attribute_value(1, (*v2_Closed)); }set_attribute_value(2, (v3_Faces)->generalize()); if (v4_PnIndex) {set_attribute_value(3, (*v4_PnIndex)); }; populate_derived(); }

// Function implementations for IfcPolyline
aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr Ifc4x3_rc4::IfcPolyline::Points() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcCartesianPoint >(); }
void Ifc4x3_rc4::IfcPolyline::setPoints(aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcPolyline::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[777]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPolyline::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[777]); }
Ifc4x3_rc4::IfcPolyline::IfcPolyline(IfcEntityInstanceData&& e) : IfcBoundedCurve(std::move(e)) { }
Ifc4x3_rc4::IfcPolyline::IfcPolyline(aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v1_Points) : IfcBoundedCurve(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Points)->generalize());; populate_derived(); }

// Function implementations for IfcPolynomialCurve
::Ifc4x3_rc4::IfcPlacement* Ifc4x3_rc4::IfcPolynomialCurve::Position() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcPlacement>(true); }
void Ifc4x3_rc4::IfcPolynomialCurve::setPosition(::Ifc4x3_rc4::IfcPlacement* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
boost::optional< std::vector< double > /*[2:?]*/ > Ifc4x3_rc4::IfcPolynomialCurve::CoefficientsX() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::vector< double > /*[2:?]*/ v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcPolynomialCurve::setCoefficientsX(boost::optional< std::vector< double > /*[2:?]*/ > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::vector< double > /*[2:?]*/ > Ifc4x3_rc4::IfcPolynomialCurve::CoefficientsY() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::vector< double > /*[2:?]*/ v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcPolynomialCurve::setCoefficientsY(boost::optional< std::vector< double > /*[2:?]*/ > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< std::vector< double > /*[2:?]*/ > Ifc4x3_rc4::IfcPolynomialCurve::CoefficientsZ() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::vector< double > /*[2:?]*/ v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcPolynomialCurve::setCoefficientsZ(boost::optional< std::vector< double > /*[2:?]*/ > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPolynomialCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[779]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPolynomialCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[779]); }
Ifc4x3_rc4::IfcPolynomialCurve::IfcPolynomialCurve(IfcEntityInstanceData&& e) : IfcCurve(std::move(e)) { }
Ifc4x3_rc4::IfcPolynomialCurve::IfcPolynomialCurve(::Ifc4x3_rc4::IfcPlacement* v1_Position, boost::optional< std::vector< double > /*[2:?]*/ > v2_CoefficientsX, boost::optional< std::vector< double > /*[2:?]*/ > v3_CoefficientsY, boost::optional< std::vector< double > /*[2:?]*/ > v4_CoefficientsZ) : IfcCurve(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_CoefficientsX) {set_attribute_value(1, (*v2_CoefficientsX)); } if (v3_CoefficientsY) {set_attribute_value(2, (*v3_CoefficientsY)); } if (v4_CoefficientsZ) {set_attribute_value(3, (*v4_CoefficientsZ)); }; populate_derived(); }

// Function implementations for IfcPort

::Ifc4x3_rc4::IfcRelConnectsPortToElement::list::ptr Ifc4x3_rc4::IfcPort::ContainedIn() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[926], 4)->as<IfcRelConnectsPortToElement>(); }
::Ifc4x3_rc4::IfcRelConnectsPorts::list::ptr Ifc4x3_rc4::IfcPort::ConnectedFrom() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[925], 5)->as<IfcRelConnectsPorts>(); }
::Ifc4x3_rc4::IfcRelConnectsPorts::list::ptr Ifc4x3_rc4::IfcPort::ConnectedTo() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[925], 4)->as<IfcRelConnectsPorts>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcPort::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[780]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPort::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[780]); }
Ifc4x3_rc4::IfcPort::IfcPort(IfcEntityInstanceData&& e) : IfcProduct(std::move(e)) { }
Ifc4x3_rc4::IfcPort::IfcPort(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation) : IfcProduct(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPositioningElement

::Ifc4x3_rc4::IfcRelContainedInSpatialStructure::list::ptr Ifc4x3_rc4::IfcPositioningElement::ContainedInStructure() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[931], 4)->as<IfcRelContainedInSpatialStructure>(); }
::Ifc4x3_rc4::IfcRelPositions::list::ptr Ifc4x3_rc4::IfcPositioningElement::Positions() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[945], 4)->as<IfcRelPositions>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcPositioningElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[781]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPositioningElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[781]); }
Ifc4x3_rc4::IfcPositioningElement::IfcPositioningElement(IfcEntityInstanceData&& e) : IfcProduct(std::move(e)) { }
Ifc4x3_rc4::IfcPositioningElement::IfcPositioningElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation) : IfcProduct(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPostalAddress
boost::optional< std::string > Ifc4x3_rc4::IfcPostalAddress::InternalLocation() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcPostalAddress::setInternalLocation(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcPostalAddress::AddressLines() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcPostalAddress::setAddressLines(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPostalAddress::PostalBox() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcPostalAddress::setPostalBox(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPostalAddress::Town() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcPostalAddress::setTown(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPostalAddress::Region() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcPostalAddress::setRegion(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPostalAddress::PostalCode() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcPostalAddress::setPostalCode(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPostalAddress::Country() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcPostalAddress::setCountry(boost::optional< std::string > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPostalAddress::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[786]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPostalAddress::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[786]); }
Ifc4x3_rc4::IfcPostalAddress::IfcPostalAddress(IfcEntityInstanceData&& e) : IfcAddress(std::move(e)) { }
Ifc4x3_rc4::IfcPostalAddress::IfcPostalAddress(boost::optional< ::Ifc4x3_rc4::IfcAddressTypeEnum::Value > v1_Purpose, boost::optional< std::string > v2_Description, boost::optional< std::string > v3_UserDefinedPurpose, boost::optional< std::string > v4_InternalLocation, boost::optional< std::vector< std::string > /*[1:?]*/ > v5_AddressLines, boost::optional< std::string > v6_PostalBox, boost::optional< std::string > v7_Town, boost::optional< std::string > v8_Region, boost::optional< std::string > v9_PostalCode, boost::optional< std::string > v10_Country) : IfcAddress(IfcEntityInstanceData(storage_t(10))) {  if (v1_Purpose) {set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcAddressTypeEnum::Class(),(size_t)*v1_Purpose))); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_UserDefinedPurpose) {set_attribute_value(2, (*v3_UserDefinedPurpose)); } if (v4_InternalLocation) {set_attribute_value(3, (*v4_InternalLocation)); } if (v5_AddressLines) {set_attribute_value(4, (*v5_AddressLines)); } if (v6_PostalBox) {set_attribute_value(5, (*v6_PostalBox)); } if (v7_Town) {set_attribute_value(6, (*v7_Town)); } if (v8_Region) {set_attribute_value(7, (*v8_Region)); } if (v9_PostalCode) {set_attribute_value(8, (*v9_PostalCode)); } if (v10_Country) {set_attribute_value(9, (*v10_Country)); }; populate_derived(); }

// Function implementations for IfcPreDefinedColour


const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedColour::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[788]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedColour::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[788]); }
Ifc4x3_rc4::IfcPreDefinedColour::IfcPreDefinedColour(IfcEntityInstanceData&& e) : IfcPreDefinedItem(std::move(e)) { }
Ifc4x3_rc4::IfcPreDefinedColour::IfcPreDefinedColour(std::string v1_Name) : IfcPreDefinedItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Name));; populate_derived(); }

// Function implementations for IfcPreDefinedCurveFont


const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedCurveFont::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[789]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedCurveFont::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[789]); }
Ifc4x3_rc4::IfcPreDefinedCurveFont::IfcPreDefinedCurveFont(IfcEntityInstanceData&& e) : IfcPreDefinedItem(std::move(e)) { }
Ifc4x3_rc4::IfcPreDefinedCurveFont::IfcPreDefinedCurveFont(std::string v1_Name) : IfcPreDefinedItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Name));; populate_derived(); }

// Function implementations for IfcPreDefinedItem
std::string Ifc4x3_rc4::IfcPreDefinedItem::Name() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcPreDefinedItem::setName(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedItem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[790]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedItem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[790]); }
Ifc4x3_rc4::IfcPreDefinedItem::IfcPreDefinedItem(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcPreDefinedItem::IfcPreDefinedItem(std::string v1_Name) : IfcPresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Name));; populate_derived(); }

// Function implementations for IfcPreDefinedProperties


const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[791]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[791]); }
Ifc4x3_rc4::IfcPreDefinedProperties::IfcPreDefinedProperties(IfcEntityInstanceData&& e) : IfcPropertyAbstraction(std::move(e)) { }
Ifc4x3_rc4::IfcPreDefinedProperties::IfcPreDefinedProperties() : IfcPropertyAbstraction(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcPreDefinedPropertySet


const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedPropertySet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[792]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedPropertySet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[792]); }
Ifc4x3_rc4::IfcPreDefinedPropertySet::IfcPreDefinedPropertySet(IfcEntityInstanceData&& e) : IfcPropertySetDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcPreDefinedPropertySet::IfcPreDefinedPropertySet(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcPropertySetDefinition(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcPreDefinedTextFont


const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedTextFont::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[793]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPreDefinedTextFont::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[793]); }
Ifc4x3_rc4::IfcPreDefinedTextFont::IfcPreDefinedTextFont(IfcEntityInstanceData&& e) : IfcPreDefinedItem(std::move(e)) { }
Ifc4x3_rc4::IfcPreDefinedTextFont::IfcPreDefinedTextFont(std::string v1_Name) : IfcPreDefinedItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Name));; populate_derived(); }

// Function implementations for IfcPresentationItem


const IfcParse::entity& Ifc4x3_rc4::IfcPresentationItem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[796]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPresentationItem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[796]); }
Ifc4x3_rc4::IfcPresentationItem::IfcPresentationItem(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcPresentationItem::IfcPresentationItem() : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcPresentationLayerAssignment
std::string Ifc4x3_rc4::IfcPresentationLayerAssignment::Name() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcPresentationLayerAssignment::setName(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcPresentationLayerAssignment::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcPresentationLayerAssignment::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
aggregate_of< ::Ifc4x3_rc4::IfcLayeredItem >::ptr Ifc4x3_rc4::IfcPresentationLayerAssignment::AssignedItems() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcLayeredItem >(); }
void Ifc4x3_rc4::IfcPresentationLayerAssignment::setAssignedItems(aggregate_of< ::Ifc4x3_rc4::IfcLayeredItem >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }
boost::optional< std::string > Ifc4x3_rc4::IfcPresentationLayerAssignment::Identifier() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcPresentationLayerAssignment::setIdentifier(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPresentationLayerAssignment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[797]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPresentationLayerAssignment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[797]); }
Ifc4x3_rc4::IfcPresentationLayerAssignment::IfcPresentationLayerAssignment(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcPresentationLayerAssignment::IfcPresentationLayerAssignment(std::string v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcLayeredItem >::ptr v3_AssignedItems, boost::optional< std::string > v4_Identifier) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_AssignedItems)->generalize()); if (v4_Identifier) {set_attribute_value(3, (*v4_Identifier)); }; populate_derived(); }

// Function implementations for IfcPresentationLayerWithStyle
boost::logic::tribool Ifc4x3_rc4::IfcPresentationLayerWithStyle::LayerOn() const {  boost::logic::tribool v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcPresentationLayerWithStyle::setLayerOn(boost::logic::tribool v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
boost::logic::tribool Ifc4x3_rc4::IfcPresentationLayerWithStyle::LayerFrozen() const {  boost::logic::tribool v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcPresentationLayerWithStyle::setLayerFrozen(boost::logic::tribool v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
boost::logic::tribool Ifc4x3_rc4::IfcPresentationLayerWithStyle::LayerBlocked() const {  boost::logic::tribool v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcPresentationLayerWithStyle::setLayerBlocked(boost::logic::tribool v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
aggregate_of< ::Ifc4x3_rc4::IfcPresentationStyle >::ptr Ifc4x3_rc4::IfcPresentationLayerWithStyle::LayerStyles() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcPresentationStyle >(); }
void Ifc4x3_rc4::IfcPresentationLayerWithStyle::setLayerStyles(aggregate_of< ::Ifc4x3_rc4::IfcPresentationStyle >::ptr v) { set_attribute_value(7, (v)->generalize());if constexpr (false)unset_attribute_value(7); }


const IfcParse::entity& Ifc4x3_rc4::IfcPresentationLayerWithStyle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[798]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPresentationLayerWithStyle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[798]); }
Ifc4x3_rc4::IfcPresentationLayerWithStyle::IfcPresentationLayerWithStyle(IfcEntityInstanceData&& e) : IfcPresentationLayerAssignment(std::move(e)) { }
Ifc4x3_rc4::IfcPresentationLayerWithStyle::IfcPresentationLayerWithStyle(std::string v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcLayeredItem >::ptr v3_AssignedItems, boost::optional< std::string > v4_Identifier, boost::logic::tribool v5_LayerOn, boost::logic::tribool v6_LayerFrozen, boost::logic::tribool v7_LayerBlocked, aggregate_of< ::Ifc4x3_rc4::IfcPresentationStyle >::ptr v8_LayerStyles) : IfcPresentationLayerAssignment(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_AssignedItems)->generalize()); if (v4_Identifier) {set_attribute_value(3, (*v4_Identifier)); }set_attribute_value(4, (v5_LayerOn));set_attribute_value(5, (v6_LayerFrozen));set_attribute_value(6, (v7_LayerBlocked));set_attribute_value(7, (v8_LayerStyles)->generalize());; populate_derived(); }

// Function implementations for IfcPresentationStyle
boost::optional< std::string > Ifc4x3_rc4::IfcPresentationStyle::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcPresentationStyle::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPresentationStyle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[799]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPresentationStyle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[799]); }
Ifc4x3_rc4::IfcPresentationStyle::IfcPresentationStyle(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcPresentationStyle::IfcPresentationStyle(boost::optional< std::string > v1_Name) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(1))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }; populate_derived(); }

// Function implementations for IfcProcedure
boost::optional< ::Ifc4x3_rc4::IfcProcedureTypeEnum::Value > Ifc4x3_rc4::IfcProcedure::PredefinedType() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcProcedureTypeEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcProcedure::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcProcedureTypeEnum::Value > v) { if (v) {set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcProcedureTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(7);} }


const IfcParse::entity& Ifc4x3_rc4::IfcProcedure::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[801]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProcedure::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[801]); }
Ifc4x3_rc4::IfcProcedure::IfcProcedure(IfcEntityInstanceData&& e) : IfcProcess(std::move(e)) { }
Ifc4x3_rc4::IfcProcedure::IfcProcedure(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription, boost::optional< ::Ifc4x3_rc4::IfcProcedureTypeEnum::Value > v8_PredefinedType) : IfcProcess(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); } if (v8_PredefinedType) {set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcProcedureTypeEnum::Class(),(size_t)*v8_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcProcedureType
::Ifc4x3_rc4::IfcProcedureTypeEnum::Value Ifc4x3_rc4::IfcProcedureType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcProcedureTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcProcedureType::setPredefinedType(::Ifc4x3_rc4::IfcProcedureTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcProcedureTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcProcedureType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[802]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProcedureType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[802]); }
Ifc4x3_rc4::IfcProcedureType::IfcProcedureType(IfcEntityInstanceData&& e) : IfcTypeProcess(std::move(e)) { }
Ifc4x3_rc4::IfcProcedureType::IfcProcedureType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ProcessType, ::Ifc4x3_rc4::IfcProcedureTypeEnum::Value v10_PredefinedType) : IfcTypeProcess(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ProcessType) {set_attribute_value(8, (*v9_ProcessType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcProcedureTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcProcess
boost::optional< std::string > Ifc4x3_rc4::IfcProcess::Identification() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcProcess::setIdentification(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcProcess::LongDescription() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcProcess::setLongDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }

::Ifc4x3_rc4::IfcRelSequence::list::ptr Ifc4x3_rc4::IfcProcess::IsPredecessorTo() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[948], 4)->as<IfcRelSequence>(); }
::Ifc4x3_rc4::IfcRelSequence::list::ptr Ifc4x3_rc4::IfcProcess::IsSuccessorFrom() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[948], 5)->as<IfcRelSequence>(); }
::Ifc4x3_rc4::IfcRelAssignsToProcess::list::ptr Ifc4x3_rc4::IfcProcess::OperatesOn() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[910], 6)->as<IfcRelAssignsToProcess>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcProcess::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[804]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProcess::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[804]); }
Ifc4x3_rc4::IfcProcess::IfcProcess(IfcEntityInstanceData&& e) : IfcObject(std::move(e)) { }
Ifc4x3_rc4::IfcProcess::IfcProcess(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription) : IfcObject(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); }; populate_derived(); }

// Function implementations for IfcProduct
::Ifc4x3_rc4::IfcObjectPlacement* Ifc4x3_rc4::IfcProduct::ObjectPlacement() const { if(data_.get_attribute_value(5).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcObjectPlacement>(true); }
void Ifc4x3_rc4::IfcProduct::setObjectPlacement(::Ifc4x3_rc4::IfcObjectPlacement* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcProductRepresentation* Ifc4x3_rc4::IfcProduct::Representation() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcProductRepresentation>(true); }
void Ifc4x3_rc4::IfcProduct::setRepresentation(::Ifc4x3_rc4::IfcProductRepresentation* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }

::Ifc4x3_rc4::IfcRelAssignsToProduct::list::ptr Ifc4x3_rc4::IfcProduct::ReferencedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[911], 6)->as<IfcRelAssignsToProduct>(); }
::Ifc4x3_rc4::IfcRelPositions::list::ptr Ifc4x3_rc4::IfcProduct::PositionedRelativeTo() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[945], 5)->as<IfcRelPositions>(); }
::Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::list::ptr Ifc4x3_rc4::IfcProduct::ReferencedInStructures() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[947], 4)->as<IfcRelReferencedInSpatialStructure>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcProduct::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[806]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProduct::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[806]); }
Ifc4x3_rc4::IfcProduct::IfcProduct(IfcEntityInstanceData&& e) : IfcObject(std::move(e)) { }
Ifc4x3_rc4::IfcProduct::IfcProduct(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation) : IfcObject(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcProductDefinitionShape

::Ifc4x3_rc4::IfcProduct::list::ptr Ifc4x3_rc4::IfcProductDefinitionShape::ShapeOfProduct() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[806], 6)->as<IfcProduct>(); }
::Ifc4x3_rc4::IfcShapeAspect::list::ptr Ifc4x3_rc4::IfcProductDefinitionShape::HasShapeAspects() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1009], 4)->as<IfcShapeAspect>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcProductDefinitionShape::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[807]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProductDefinitionShape::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[807]); }
Ifc4x3_rc4::IfcProductDefinitionShape::IfcProductDefinitionShape(IfcEntityInstanceData&& e) : IfcProductRepresentation(std::move(e)) { }
Ifc4x3_rc4::IfcProductDefinitionShape::IfcProductDefinitionShape(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcRepresentation >::ptr v3_Representations) : IfcProductRepresentation(IfcEntityInstanceData(storage_t(3))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_Representations)->generalize());; populate_derived(); }

// Function implementations for IfcProductRepresentation
boost::optional< std::string > Ifc4x3_rc4::IfcProductRepresentation::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcProductRepresentation::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcProductRepresentation::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcProductRepresentation::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
aggregate_of< ::Ifc4x3_rc4::IfcRepresentation >::ptr Ifc4x3_rc4::IfcProductRepresentation::Representations() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcRepresentation >(); }
void Ifc4x3_rc4::IfcProductRepresentation::setRepresentations(aggregate_of< ::Ifc4x3_rc4::IfcRepresentation >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcProductRepresentation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[808]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProductRepresentation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[808]); }
Ifc4x3_rc4::IfcProductRepresentation::IfcProductRepresentation(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcProductRepresentation::IfcProductRepresentation(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcRepresentation >::ptr v3_Representations) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(3))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_Representations)->generalize());; populate_derived(); }

// Function implementations for IfcProfileDef
::Ifc4x3_rc4::IfcProfileTypeEnum::Value Ifc4x3_rc4::IfcProfileDef::ProfileType() const {  return ::Ifc4x3_rc4::IfcProfileTypeEnum::FromString(data_.get_attribute_value(0)); }
void Ifc4x3_rc4::IfcProfileDef::setProfileType(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v) { set_attribute_value(0, EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcProfileDef::ProfileName() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcProfileDef::setProfileName(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcProfileDef::HasExternalReference() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }
::Ifc4x3_rc4::IfcProfileProperties::list::ptr Ifc4x3_rc4::IfcProfileDef::HasProperties() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[812], 3)->as<IfcProfileProperties>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[811]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[811]); }
Ifc4x3_rc4::IfcProfileDef::IfcProfileDef(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcProfileDef::IfcProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }; populate_derived(); }

// Function implementations for IfcProfileProperties
::Ifc4x3_rc4::IfcProfileDef* Ifc4x3_rc4::IfcProfileProperties::ProfileDefinition() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcProfileDef>(true); }
void Ifc4x3_rc4::IfcProfileProperties::setProfileDefinition(::Ifc4x3_rc4::IfcProfileDef* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcProfileProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[812]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProfileProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[812]); }
Ifc4x3_rc4::IfcProfileProperties::IfcProfileProperties(IfcEntityInstanceData&& e) : IfcExtendedProperties(std::move(e)) { }
Ifc4x3_rc4::IfcProfileProperties::IfcProfileProperties(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr v3_Properties, ::Ifc4x3_rc4::IfcProfileDef* v4_ProfileDefinition) : IfcExtendedProperties(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_Properties)->generalize());set_attribute_value(3, v4_ProfileDefinition ? v4_ProfileDefinition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcProject


const IfcParse::entity& Ifc4x3_rc4::IfcProject::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[814]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProject::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[814]); }
Ifc4x3_rc4::IfcProject::IfcProject(IfcEntityInstanceData&& e) : IfcContext(std::move(e)) { }
Ifc4x3_rc4::IfcProject::IfcProject(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_LongName, boost::optional< std::string > v7_Phase, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationContext >::ptr > v8_RepresentationContexts, ::Ifc4x3_rc4::IfcUnitAssignment* v9_UnitsInContext) : IfcContext(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_LongName) {set_attribute_value(5, (*v6_LongName)); } if (v7_Phase) {set_attribute_value(6, (*v7_Phase)); } if (v8_RepresentationContexts) {set_attribute_value(7, (*v8_RepresentationContexts)->generalize()); }set_attribute_value(8, v9_UnitsInContext ? v9_UnitsInContext->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcProjectLibrary


const IfcParse::entity& Ifc4x3_rc4::IfcProjectLibrary::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[819]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProjectLibrary::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[819]); }
Ifc4x3_rc4::IfcProjectLibrary::IfcProjectLibrary(IfcEntityInstanceData&& e) : IfcContext(std::move(e)) { }
Ifc4x3_rc4::IfcProjectLibrary::IfcProjectLibrary(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_LongName, boost::optional< std::string > v7_Phase, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationContext >::ptr > v8_RepresentationContexts, ::Ifc4x3_rc4::IfcUnitAssignment* v9_UnitsInContext) : IfcContext(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_LongName) {set_attribute_value(5, (*v6_LongName)); } if (v7_Phase) {set_attribute_value(6, (*v7_Phase)); } if (v8_RepresentationContexts) {set_attribute_value(7, (*v8_RepresentationContexts)->generalize()); }set_attribute_value(8, v9_UnitsInContext ? v9_UnitsInContext->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcProjectOrder
boost::optional< ::Ifc4x3_rc4::IfcProjectOrderTypeEnum::Value > Ifc4x3_rc4::IfcProjectOrder::PredefinedType() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcProjectOrderTypeEnum::FromString(data_.get_attribute_value(6)); }
void Ifc4x3_rc4::IfcProjectOrder::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcProjectOrderTypeEnum::Value > v) { if (v) {set_attribute_value(6, EnumerationReference(&::Ifc4x3_rc4::IfcProjectOrderTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcProjectOrder::Status() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcProjectOrder::setStatus(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcProjectOrder::LongDescription() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcProjectOrder::setLongDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcProjectOrder::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[820]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProjectOrder::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[820]); }
Ifc4x3_rc4::IfcProjectOrder::IfcProjectOrder(IfcEntityInstanceData&& e) : IfcControl(std::move(e)) { }
Ifc4x3_rc4::IfcProjectOrder::IfcProjectOrder(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< ::Ifc4x3_rc4::IfcProjectOrderTypeEnum::Value > v7_PredefinedType, boost::optional< std::string > v8_Status, boost::optional< std::string > v9_LongDescription) : IfcControl(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_PredefinedType) {set_attribute_value(6, (EnumerationReference(&::Ifc4x3_rc4::IfcProjectOrderTypeEnum::Class(),(size_t)*v7_PredefinedType))); } if (v8_Status) {set_attribute_value(7, (*v8_Status)); } if (v9_LongDescription) {set_attribute_value(8, (*v9_LongDescription)); }; populate_derived(); }

// Function implementations for IfcProjectedCRS
boost::optional< std::string > Ifc4x3_rc4::IfcProjectedCRS::MapProjection() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcProjectedCRS::setMapProjection(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcProjectedCRS::MapZone() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcProjectedCRS::setMapZone(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
::Ifc4x3_rc4::IfcNamedUnit* Ifc4x3_rc4::IfcProjectedCRS::MapUnit() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcNamedUnit>(true); }
void Ifc4x3_rc4::IfcProjectedCRS::setMapUnit(::Ifc4x3_rc4::IfcNamedUnit* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcProjectedCRS::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[815]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProjectedCRS::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[815]); }
Ifc4x3_rc4::IfcProjectedCRS::IfcProjectedCRS(IfcEntityInstanceData&& e) : IfcCoordinateReferenceSystem(std::move(e)) { }
Ifc4x3_rc4::IfcProjectedCRS::IfcProjectedCRS(std::string v1_Name, boost::optional< std::string > v2_Description, boost::optional< std::string > v3_GeodeticDatum, boost::optional< std::string > v4_VerticalDatum, boost::optional< std::string > v5_MapProjection, boost::optional< std::string > v6_MapZone, ::Ifc4x3_rc4::IfcNamedUnit* v7_MapUnit) : IfcCoordinateReferenceSystem(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_GeodeticDatum) {set_attribute_value(2, (*v3_GeodeticDatum)); } if (v4_VerticalDatum) {set_attribute_value(3, (*v4_VerticalDatum)); } if (v5_MapProjection) {set_attribute_value(4, (*v5_MapProjection)); } if (v6_MapZone) {set_attribute_value(5, (*v6_MapZone)); }set_attribute_value(6, v7_MapUnit ? v7_MapUnit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcProjectionElement
boost::optional< ::Ifc4x3_rc4::IfcProjectionElementTypeEnum::Value > Ifc4x3_rc4::IfcProjectionElement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcProjectionElementTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcProjectionElement::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcProjectionElementTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcProjectionElementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcProjectionElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[817]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProjectionElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[817]); }
Ifc4x3_rc4::IfcProjectionElement::IfcProjectionElement(IfcEntityInstanceData&& e) : IfcFeatureElementAddition(std::move(e)) { }
Ifc4x3_rc4::IfcProjectionElement::IfcProjectionElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcProjectionElementTypeEnum::Value > v9_PredefinedType) : IfcFeatureElementAddition(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcProjectionElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcProperty
std::string Ifc4x3_rc4::IfcProperty::Name() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcProperty::setName(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcProperty::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcProperty::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }

::Ifc4x3_rc4::IfcPropertySet::list::ptr Ifc4x3_rc4::IfcProperty::PartOfPset() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[831], 4)->as<IfcPropertySet>(); }
::Ifc4x3_rc4::IfcPropertyDependencyRelationship::list::ptr Ifc4x3_rc4::IfcProperty::PropertyForDependance() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[826], 2)->as<IfcPropertyDependencyRelationship>(); }
::Ifc4x3_rc4::IfcPropertyDependencyRelationship::list::ptr Ifc4x3_rc4::IfcProperty::PropertyDependsOn() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[826], 3)->as<IfcPropertyDependencyRelationship>(); }
::Ifc4x3_rc4::IfcComplexProperty::list::ptr Ifc4x3_rc4::IfcProperty::PartOfComplex() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[191], 3)->as<IfcComplexProperty>(); }
::Ifc4x3_rc4::IfcResourceConstraintRelationship::list::ptr Ifc4x3_rc4::IfcProperty::HasConstraints() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[961], 3)->as<IfcResourceConstraintRelationship>(); }
::Ifc4x3_rc4::IfcResourceApprovalRelationship::list::ptr Ifc4x3_rc4::IfcProperty::HasApprovals() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[960], 2)->as<IfcResourceApprovalRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcProperty::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[822]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProperty::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[822]); }
Ifc4x3_rc4::IfcProperty::IfcProperty(IfcEntityInstanceData&& e) : IfcPropertyAbstraction(std::move(e)) { }
Ifc4x3_rc4::IfcProperty::IfcProperty(std::string v1_Name, boost::optional< std::string > v2_Description) : IfcPropertyAbstraction(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }; populate_derived(); }

// Function implementations for IfcPropertyAbstraction

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcPropertyAbstraction::HasExternalReferences() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcPropertyAbstraction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[823]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyAbstraction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[823]); }
Ifc4x3_rc4::IfcPropertyAbstraction::IfcPropertyAbstraction(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyAbstraction::IfcPropertyAbstraction() : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcPropertyBoundedValue
::Ifc4x3_rc4::IfcValue* Ifc4x3_rc4::IfcPropertyBoundedValue::UpperBoundValue() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcValue>(true); }
void Ifc4x3_rc4::IfcPropertyBoundedValue::setUpperBoundValue(::Ifc4x3_rc4::IfcValue* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcValue* Ifc4x3_rc4::IfcPropertyBoundedValue::LowerBoundValue() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcValue>(true); }
void Ifc4x3_rc4::IfcPropertyBoundedValue::setLowerBoundValue(::Ifc4x3_rc4::IfcValue* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcPropertyBoundedValue::Unit() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcPropertyBoundedValue::setUnit(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcValue* Ifc4x3_rc4::IfcPropertyBoundedValue::SetPointValue() const { if(data_.get_attribute_value(5).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcValue>(true); }
void Ifc4x3_rc4::IfcPropertyBoundedValue::setSetPointValue(::Ifc4x3_rc4::IfcValue* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcPropertyBoundedValue::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[824]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyBoundedValue::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[824]); }
Ifc4x3_rc4::IfcPropertyBoundedValue::IfcPropertyBoundedValue(IfcEntityInstanceData&& e) : IfcSimpleProperty(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyBoundedValue::IfcPropertyBoundedValue(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcValue* v3_UpperBoundValue, ::Ifc4x3_rc4::IfcValue* v4_LowerBoundValue, ::Ifc4x3_rc4::IfcUnit* v5_Unit, ::Ifc4x3_rc4::IfcValue* v6_SetPointValue) : IfcSimpleProperty(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_UpperBoundValue ? v3_UpperBoundValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_LowerBoundValue ? v4_LowerBoundValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_Unit ? v5_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_SetPointValue ? v6_SetPointValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPropertyDefinition

::Ifc4x3_rc4::IfcRelDeclares::list::ptr Ifc4x3_rc4::IfcPropertyDefinition::HasContext() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[934], 5)->as<IfcRelDeclares>(); }
::Ifc4x3_rc4::IfcRelAssociates::list::ptr Ifc4x3_rc4::IfcPropertyDefinition::HasAssociations() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[913], 4)->as<IfcRelAssociates>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcPropertyDefinition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[825]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyDefinition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[825]); }
Ifc4x3_rc4::IfcPropertyDefinition::IfcPropertyDefinition(IfcEntityInstanceData&& e) : IfcRoot(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyDefinition::IfcPropertyDefinition(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcRoot(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcPropertyDependencyRelationship
::Ifc4x3_rc4::IfcProperty* Ifc4x3_rc4::IfcPropertyDependencyRelationship::DependingProperty() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcProperty>(true); }
void Ifc4x3_rc4::IfcPropertyDependencyRelationship::setDependingProperty(::Ifc4x3_rc4::IfcProperty* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcProperty* Ifc4x3_rc4::IfcPropertyDependencyRelationship::DependantProperty() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcProperty>(true); }
void Ifc4x3_rc4::IfcPropertyDependencyRelationship::setDependantProperty(::Ifc4x3_rc4::IfcProperty* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcPropertyDependencyRelationship::Expression() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcPropertyDependencyRelationship::setExpression(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPropertyDependencyRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[826]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyDependencyRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[826]); }
Ifc4x3_rc4::IfcPropertyDependencyRelationship::IfcPropertyDependencyRelationship(IfcEntityInstanceData&& e) : IfcResourceLevelRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyDependencyRelationship::IfcPropertyDependencyRelationship(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcProperty* v3_DependingProperty, ::Ifc4x3_rc4::IfcProperty* v4_DependantProperty, boost::optional< std::string > v5_Expression) : IfcResourceLevelRelationship(IfcEntityInstanceData(storage_t(5))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_DependingProperty ? v3_DependingProperty->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_DependantProperty ? v4_DependantProperty->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Expression) {set_attribute_value(4, (*v5_Expression)); }; populate_derived(); }

// Function implementations for IfcPropertyEnumeratedValue
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > Ifc4x3_rc4::IfcPropertyEnumeratedValue::EnumerationValues() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcValue >(); }
void Ifc4x3_rc4::IfcPropertyEnumeratedValue::setEnumerationValues(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > v) { if (v) {set_attribute_value(2, (*v)->generalize());} else {unset_attribute_value(2);} }
::Ifc4x3_rc4::IfcPropertyEnumeration* Ifc4x3_rc4::IfcPropertyEnumeratedValue::EnumerationReference() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcPropertyEnumeration>(true); }
void Ifc4x3_rc4::IfcPropertyEnumeratedValue::setEnumerationReference(::Ifc4x3_rc4::IfcPropertyEnumeration* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcPropertyEnumeratedValue::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[827]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyEnumeratedValue::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[827]); }
Ifc4x3_rc4::IfcPropertyEnumeratedValue::IfcPropertyEnumeratedValue(IfcEntityInstanceData&& e) : IfcSimpleProperty(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyEnumeratedValue::IfcPropertyEnumeratedValue(std::string v1_Name, boost::optional< std::string > v2_Description, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > v3_EnumerationValues, ::Ifc4x3_rc4::IfcPropertyEnumeration* v4_EnumerationReference) : IfcSimpleProperty(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_EnumerationValues) {set_attribute_value(2, (*v3_EnumerationValues)->generalize()); }set_attribute_value(3, v4_EnumerationReference ? v4_EnumerationReference->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPropertyEnumeration
std::string Ifc4x3_rc4::IfcPropertyEnumeration::Name() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcPropertyEnumeration::setName(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr Ifc4x3_rc4::IfcPropertyEnumeration::EnumerationValues() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcValue >(); }
void Ifc4x3_rc4::IfcPropertyEnumeration::setEnumerationValues(aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcPropertyEnumeration::Unit() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcPropertyEnumeration::setUnit(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcPropertyEnumeration::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[828]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyEnumeration::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[828]); }
Ifc4x3_rc4::IfcPropertyEnumeration::IfcPropertyEnumeration(IfcEntityInstanceData&& e) : IfcPropertyAbstraction(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyEnumeration::IfcPropertyEnumeration(std::string v1_Name, aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr v2_EnumerationValues, ::Ifc4x3_rc4::IfcUnit* v3_Unit) : IfcPropertyAbstraction(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_Name));set_attribute_value(1, (v2_EnumerationValues)->generalize());set_attribute_value(2, v3_Unit ? v3_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPropertyListValue
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > Ifc4x3_rc4::IfcPropertyListValue::ListValues() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcValue >(); }
void Ifc4x3_rc4::IfcPropertyListValue::setListValues(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > v) { if (v) {set_attribute_value(2, (*v)->generalize());} else {unset_attribute_value(2);} }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcPropertyListValue::Unit() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcPropertyListValue::setUnit(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcPropertyListValue::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[829]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyListValue::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[829]); }
Ifc4x3_rc4::IfcPropertyListValue::IfcPropertyListValue(IfcEntityInstanceData&& e) : IfcSimpleProperty(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyListValue::IfcPropertyListValue(std::string v1_Name, boost::optional< std::string > v2_Description, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > v3_ListValues, ::Ifc4x3_rc4::IfcUnit* v4_Unit) : IfcSimpleProperty(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_ListValues) {set_attribute_value(2, (*v3_ListValues)->generalize()); }set_attribute_value(3, v4_Unit ? v4_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPropertyReferenceValue
boost::optional< std::string > Ifc4x3_rc4::IfcPropertyReferenceValue::UsageName() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcPropertyReferenceValue::setUsageName(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
::Ifc4x3_rc4::IfcObjectReferenceSelect* Ifc4x3_rc4::IfcPropertyReferenceValue::PropertyReference() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcObjectReferenceSelect>(true); }
void Ifc4x3_rc4::IfcPropertyReferenceValue::setPropertyReference(::Ifc4x3_rc4::IfcObjectReferenceSelect* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcPropertyReferenceValue::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[830]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyReferenceValue::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[830]); }
Ifc4x3_rc4::IfcPropertyReferenceValue::IfcPropertyReferenceValue(IfcEntityInstanceData&& e) : IfcSimpleProperty(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyReferenceValue::IfcPropertyReferenceValue(std::string v1_Name, boost::optional< std::string > v2_Description, boost::optional< std::string > v3_UsageName, ::Ifc4x3_rc4::IfcObjectReferenceSelect* v4_PropertyReference) : IfcSimpleProperty(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_UsageName) {set_attribute_value(2, (*v3_UsageName)); }set_attribute_value(3, v4_PropertyReference ? v4_PropertyReference->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPropertySet
aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr Ifc4x3_rc4::IfcPropertySet::HasProperties() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcProperty >(); }
void Ifc4x3_rc4::IfcPropertySet::setHasProperties(aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr v) { set_attribute_value(4, (v)->generalize());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcPropertySet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[831]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertySet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[831]); }
Ifc4x3_rc4::IfcPropertySet::IfcPropertySet(IfcEntityInstanceData&& e) : IfcPropertySetDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcPropertySet::IfcPropertySet(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcProperty >::ptr v5_HasProperties) : IfcPropertySetDefinition(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_HasProperties)->generalize());; populate_derived(); }

// Function implementations for IfcPropertySetDefinition

::Ifc4x3_rc4::IfcTypeObject::list::ptr Ifc4x3_rc4::IfcPropertySetDefinition::DefinesType() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1244], 5)->as<IfcTypeObject>(); }
::Ifc4x3_rc4::IfcRelDefinesByTemplate::list::ptr Ifc4x3_rc4::IfcPropertySetDefinition::IsDefinedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[939], 4)->as<IfcRelDefinesByTemplate>(); }
::Ifc4x3_rc4::IfcRelDefinesByProperties::list::ptr Ifc4x3_rc4::IfcPropertySetDefinition::DefinesOccurrence() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[938], 5)->as<IfcRelDefinesByProperties>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcPropertySetDefinition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[832]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertySetDefinition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[832]); }
Ifc4x3_rc4::IfcPropertySetDefinition::IfcPropertySetDefinition(IfcEntityInstanceData&& e) : IfcPropertyDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcPropertySetDefinition::IfcPropertySetDefinition(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcPropertyDefinition(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcPropertySetTemplate
boost::optional< ::Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::Value > Ifc4x3_rc4::IfcPropertySetTemplate::TemplateType() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::FromString(data_.get_attribute_value(4)); }
void Ifc4x3_rc4::IfcPropertySetTemplate::setTemplateType(boost::optional< ::Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::Value > v) { if (v) {set_attribute_value(4, EnumerationReference(&::Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPropertySetTemplate::ApplicableEntity() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcPropertySetTemplate::setApplicableEntity(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
aggregate_of< ::Ifc4x3_rc4::IfcPropertyTemplate >::ptr Ifc4x3_rc4::IfcPropertySetTemplate::HasPropertyTemplates() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(6); return es->as< ::Ifc4x3_rc4::IfcPropertyTemplate >(); }
void Ifc4x3_rc4::IfcPropertySetTemplate::setHasPropertyTemplates(aggregate_of< ::Ifc4x3_rc4::IfcPropertyTemplate >::ptr v) { set_attribute_value(6, (v)->generalize());if constexpr (false)unset_attribute_value(6); }

::Ifc4x3_rc4::IfcRelDefinesByTemplate::list::ptr Ifc4x3_rc4::IfcPropertySetTemplate::Defines() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[939], 5)->as<IfcRelDefinesByTemplate>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcPropertySetTemplate::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[835]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertySetTemplate::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[835]); }
Ifc4x3_rc4::IfcPropertySetTemplate::IfcPropertySetTemplate(IfcEntityInstanceData&& e) : IfcPropertyTemplateDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcPropertySetTemplate::IfcPropertySetTemplate(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< ::Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::Value > v5_TemplateType, boost::optional< std::string > v6_ApplicableEntity, aggregate_of< ::Ifc4x3_rc4::IfcPropertyTemplate >::ptr v7_HasPropertyTemplates) : IfcPropertyTemplateDefinition(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_TemplateType) {set_attribute_value(4, (EnumerationReference(&::Ifc4x3_rc4::IfcPropertySetTemplateTypeEnum::Class(),(size_t)*v5_TemplateType))); } if (v6_ApplicableEntity) {set_attribute_value(5, (*v6_ApplicableEntity)); }set_attribute_value(6, (v7_HasPropertyTemplates)->generalize());; populate_derived(); }

// Function implementations for IfcPropertySingleValue
::Ifc4x3_rc4::IfcValue* Ifc4x3_rc4::IfcPropertySingleValue::NominalValue() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcValue>(true); }
void Ifc4x3_rc4::IfcPropertySingleValue::setNominalValue(::Ifc4x3_rc4::IfcValue* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcPropertySingleValue::Unit() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcPropertySingleValue::setUnit(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcPropertySingleValue::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[837]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertySingleValue::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[837]); }
Ifc4x3_rc4::IfcPropertySingleValue::IfcPropertySingleValue(IfcEntityInstanceData&& e) : IfcSimpleProperty(std::move(e)) { }
Ifc4x3_rc4::IfcPropertySingleValue::IfcPropertySingleValue(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcValue* v3_NominalValue, ::Ifc4x3_rc4::IfcUnit* v4_Unit) : IfcSimpleProperty(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_NominalValue ? v3_NominalValue->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_Unit ? v4_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcPropertyTableValue
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > Ifc4x3_rc4::IfcPropertyTableValue::DefiningValues() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcValue >(); }
void Ifc4x3_rc4::IfcPropertyTableValue::setDefiningValues(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > v) { if (v) {set_attribute_value(2, (*v)->generalize());} else {unset_attribute_value(2);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > Ifc4x3_rc4::IfcPropertyTableValue::DefinedValues() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcValue >(); }
void Ifc4x3_rc4::IfcPropertyTableValue::setDefinedValues(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > v) { if (v) {set_attribute_value(3, (*v)->generalize());} else {unset_attribute_value(3);} }
boost::optional< std::string > Ifc4x3_rc4::IfcPropertyTableValue::Expression() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcPropertyTableValue::setExpression(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcPropertyTableValue::DefiningUnit() const { if(data_.get_attribute_value(5).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcPropertyTableValue::setDefiningUnit(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcPropertyTableValue::DefinedUnit() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcPropertyTableValue::setDefinedUnit(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
boost::optional< ::Ifc4x3_rc4::IfcCurveInterpolationEnum::Value > Ifc4x3_rc4::IfcPropertyTableValue::CurveInterpolation() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcCurveInterpolationEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcPropertyTableValue::setCurveInterpolation(boost::optional< ::Ifc4x3_rc4::IfcCurveInterpolationEnum::Value > v) { if (v) {set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcCurveInterpolationEnum::Class(), (size_t) *v));} else {unset_attribute_value(7);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPropertyTableValue::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[838]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyTableValue::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[838]); }
Ifc4x3_rc4::IfcPropertyTableValue::IfcPropertyTableValue(IfcEntityInstanceData&& e) : IfcSimpleProperty(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyTableValue::IfcPropertyTableValue(std::string v1_Name, boost::optional< std::string > v2_Description, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > v3_DefiningValues, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > v4_DefinedValues, boost::optional< std::string > v5_Expression, ::Ifc4x3_rc4::IfcUnit* v6_DefiningUnit, ::Ifc4x3_rc4::IfcUnit* v7_DefinedUnit, boost::optional< ::Ifc4x3_rc4::IfcCurveInterpolationEnum::Value > v8_CurveInterpolation) : IfcSimpleProperty(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_DefiningValues) {set_attribute_value(2, (*v3_DefiningValues)->generalize()); } if (v4_DefinedValues) {set_attribute_value(3, (*v4_DefinedValues)->generalize()); } if (v5_Expression) {set_attribute_value(4, (*v5_Expression)); }set_attribute_value(5, v6_DefiningUnit ? v6_DefiningUnit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_DefinedUnit ? v7_DefinedUnit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_CurveInterpolation) {set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcCurveInterpolationEnum::Class(),(size_t)*v8_CurveInterpolation))); }; populate_derived(); }

// Function implementations for IfcPropertyTemplate

::Ifc4x3_rc4::IfcComplexPropertyTemplate::list::ptr Ifc4x3_rc4::IfcPropertyTemplate::PartOfComplexTemplate() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[192], 6)->as<IfcComplexPropertyTemplate>(); }
::Ifc4x3_rc4::IfcPropertySetTemplate::list::ptr Ifc4x3_rc4::IfcPropertyTemplate::PartOfPsetTemplate() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[835], 6)->as<IfcPropertySetTemplate>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcPropertyTemplate::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[839]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyTemplate::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[839]); }
Ifc4x3_rc4::IfcPropertyTemplate::IfcPropertyTemplate(IfcEntityInstanceData&& e) : IfcPropertyTemplateDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyTemplate::IfcPropertyTemplate(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcPropertyTemplateDefinition(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcPropertyTemplateDefinition


const IfcParse::entity& Ifc4x3_rc4::IfcPropertyTemplateDefinition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[840]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPropertyTemplateDefinition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[840]); }
Ifc4x3_rc4::IfcPropertyTemplateDefinition::IfcPropertyTemplateDefinition(IfcEntityInstanceData&& e) : IfcPropertyDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcPropertyTemplateDefinition::IfcPropertyTemplateDefinition(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcPropertyDefinition(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcProtectiveDevice
boost::optional< ::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Value > Ifc4x3_rc4::IfcProtectiveDevice::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcProtectiveDevice::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcProtectiveDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[841]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProtectiveDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[841]); }
Ifc4x3_rc4::IfcProtectiveDevice::IfcProtectiveDevice(IfcEntityInstanceData&& e) : IfcFlowController(std::move(e)) { }
Ifc4x3_rc4::IfcProtectiveDevice::IfcProtectiveDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Value > v9_PredefinedType) : IfcFlowController(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcProtectiveDeviceTrippingUnit
boost::optional< ::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Value > Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnit::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnit::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[842]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[842]); }
Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnit::IfcProtectiveDeviceTrippingUnit(IfcEntityInstanceData&& e) : IfcDistributionControlElement(std::move(e)) { }
Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnit::IfcProtectiveDeviceTrippingUnit(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Value > v9_PredefinedType) : IfcDistributionControlElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcProtectiveDeviceTrippingUnitType
::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Value Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitType::setPredefinedType(::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[843]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[843]); }
Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitType::IfcProtectiveDeviceTrippingUnitType(IfcEntityInstanceData&& e) : IfcDistributionControlElementType(std::move(e)) { }
Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitType::IfcProtectiveDeviceTrippingUnitType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Value v10_PredefinedType) : IfcDistributionControlElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcProtectiveDeviceTrippingUnitTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcProtectiveDeviceType
::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Value Ifc4x3_rc4::IfcProtectiveDeviceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcProtectiveDeviceType::setPredefinedType(::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcProtectiveDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[845]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProtectiveDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[845]); }
Ifc4x3_rc4::IfcProtectiveDeviceType::IfcProtectiveDeviceType(IfcEntityInstanceData&& e) : IfcFlowControllerType(std::move(e)) { }
Ifc4x3_rc4::IfcProtectiveDeviceType::IfcProtectiveDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Value v10_PredefinedType) : IfcFlowControllerType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcProtectiveDeviceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcProxy
::Ifc4x3_rc4::IfcObjectTypeEnum::Value Ifc4x3_rc4::IfcProxy::ProxyType() const {  return ::Ifc4x3_rc4::IfcObjectTypeEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcProxy::setProxyType(::Ifc4x3_rc4::IfcObjectTypeEnum::Value v) { set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(7); }
boost::optional< std::string > Ifc4x3_rc4::IfcProxy::Tag() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcProxy::setTag(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcProxy::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[847]); }
const IfcParse::entity& Ifc4x3_rc4::IfcProxy::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[847]); }
Ifc4x3_rc4::IfcProxy::IfcProxy(IfcEntityInstanceData&& e) : IfcProduct(std::move(e)) { }
Ifc4x3_rc4::IfcProxy::IfcProxy(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcObjectTypeEnum::Value v8_ProxyType, boost::optional< std::string > v9_Tag) : IfcProduct(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(),(size_t)v8_ProxyType))); if (v9_Tag) {set_attribute_value(8, (*v9_Tag)); }; populate_derived(); }

// Function implementations for IfcPump
boost::optional< ::Ifc4x3_rc4::IfcPumpTypeEnum::Value > Ifc4x3_rc4::IfcPump::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcPumpTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcPump::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcPumpTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcPumpTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcPump::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[848]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPump::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[848]); }
Ifc4x3_rc4::IfcPump::IfcPump(IfcEntityInstanceData&& e) : IfcFlowMovingDevice(std::move(e)) { }
Ifc4x3_rc4::IfcPump::IfcPump(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcPumpTypeEnum::Value > v9_PredefinedType) : IfcFlowMovingDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcPumpTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcPumpType
::Ifc4x3_rc4::IfcPumpTypeEnum::Value Ifc4x3_rc4::IfcPumpType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcPumpTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcPumpType::setPredefinedType(::Ifc4x3_rc4::IfcPumpTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcPumpTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcPumpType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[849]); }
const IfcParse::entity& Ifc4x3_rc4::IfcPumpType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[849]); }
Ifc4x3_rc4::IfcPumpType::IfcPumpType(IfcEntityInstanceData&& e) : IfcFlowMovingDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcPumpType::IfcPumpType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcPumpTypeEnum::Value v10_PredefinedType) : IfcFlowMovingDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcPumpTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcQuantityArea
double Ifc4x3_rc4::IfcQuantityArea::AreaValue() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcQuantityArea::setAreaValue(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcQuantityArea::Formula() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcQuantityArea::setFormula(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcQuantityArea::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[851]); }
const IfcParse::entity& Ifc4x3_rc4::IfcQuantityArea::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[851]); }
Ifc4x3_rc4::IfcQuantityArea::IfcQuantityArea(IfcEntityInstanceData&& e) : IfcPhysicalSimpleQuantity(std::move(e)) { }
Ifc4x3_rc4::IfcQuantityArea::IfcQuantityArea(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcNamedUnit* v3_Unit, double v4_AreaValue, boost::optional< std::string > v5_Formula) : IfcPhysicalSimpleQuantity(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_Unit ? v3_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_AreaValue)); if (v5_Formula) {set_attribute_value(4, (*v5_Formula)); }; populate_derived(); }

// Function implementations for IfcQuantityCount
double Ifc4x3_rc4::IfcQuantityCount::CountValue() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcQuantityCount::setCountValue(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcQuantityCount::Formula() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcQuantityCount::setFormula(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcQuantityCount::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[852]); }
const IfcParse::entity& Ifc4x3_rc4::IfcQuantityCount::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[852]); }
Ifc4x3_rc4::IfcQuantityCount::IfcQuantityCount(IfcEntityInstanceData&& e) : IfcPhysicalSimpleQuantity(std::move(e)) { }
Ifc4x3_rc4::IfcQuantityCount::IfcQuantityCount(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcNamedUnit* v3_Unit, double v4_CountValue, boost::optional< std::string > v5_Formula) : IfcPhysicalSimpleQuantity(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_Unit ? v3_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_CountValue)); if (v5_Formula) {set_attribute_value(4, (*v5_Formula)); }; populate_derived(); }

// Function implementations for IfcQuantityLength
double Ifc4x3_rc4::IfcQuantityLength::LengthValue() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcQuantityLength::setLengthValue(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcQuantityLength::Formula() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcQuantityLength::setFormula(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcQuantityLength::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[853]); }
const IfcParse::entity& Ifc4x3_rc4::IfcQuantityLength::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[853]); }
Ifc4x3_rc4::IfcQuantityLength::IfcQuantityLength(IfcEntityInstanceData&& e) : IfcPhysicalSimpleQuantity(std::move(e)) { }
Ifc4x3_rc4::IfcQuantityLength::IfcQuantityLength(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcNamedUnit* v3_Unit, double v4_LengthValue, boost::optional< std::string > v5_Formula) : IfcPhysicalSimpleQuantity(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_Unit ? v3_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_LengthValue)); if (v5_Formula) {set_attribute_value(4, (*v5_Formula)); }; populate_derived(); }

// Function implementations for IfcQuantitySet


const IfcParse::entity& Ifc4x3_rc4::IfcQuantitySet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[854]); }
const IfcParse::entity& Ifc4x3_rc4::IfcQuantitySet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[854]); }
Ifc4x3_rc4::IfcQuantitySet::IfcQuantitySet(IfcEntityInstanceData&& e) : IfcPropertySetDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcQuantitySet::IfcQuantitySet(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcPropertySetDefinition(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcQuantityTime
double Ifc4x3_rc4::IfcQuantityTime::TimeValue() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcQuantityTime::setTimeValue(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcQuantityTime::Formula() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcQuantityTime::setFormula(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcQuantityTime::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[855]); }
const IfcParse::entity& Ifc4x3_rc4::IfcQuantityTime::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[855]); }
Ifc4x3_rc4::IfcQuantityTime::IfcQuantityTime(IfcEntityInstanceData&& e) : IfcPhysicalSimpleQuantity(std::move(e)) { }
Ifc4x3_rc4::IfcQuantityTime::IfcQuantityTime(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcNamedUnit* v3_Unit, double v4_TimeValue, boost::optional< std::string > v5_Formula) : IfcPhysicalSimpleQuantity(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_Unit ? v3_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_TimeValue)); if (v5_Formula) {set_attribute_value(4, (*v5_Formula)); }; populate_derived(); }

// Function implementations for IfcQuantityVolume
double Ifc4x3_rc4::IfcQuantityVolume::VolumeValue() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcQuantityVolume::setVolumeValue(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcQuantityVolume::Formula() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcQuantityVolume::setFormula(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcQuantityVolume::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[856]); }
const IfcParse::entity& Ifc4x3_rc4::IfcQuantityVolume::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[856]); }
Ifc4x3_rc4::IfcQuantityVolume::IfcQuantityVolume(IfcEntityInstanceData&& e) : IfcPhysicalSimpleQuantity(std::move(e)) { }
Ifc4x3_rc4::IfcQuantityVolume::IfcQuantityVolume(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcNamedUnit* v3_Unit, double v4_VolumeValue, boost::optional< std::string > v5_Formula) : IfcPhysicalSimpleQuantity(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_Unit ? v3_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_VolumeValue)); if (v5_Formula) {set_attribute_value(4, (*v5_Formula)); }; populate_derived(); }

// Function implementations for IfcQuantityWeight
double Ifc4x3_rc4::IfcQuantityWeight::WeightValue() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcQuantityWeight::setWeightValue(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcQuantityWeight::Formula() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcQuantityWeight::setFormula(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcQuantityWeight::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[857]); }
const IfcParse::entity& Ifc4x3_rc4::IfcQuantityWeight::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[857]); }
Ifc4x3_rc4::IfcQuantityWeight::IfcQuantityWeight(IfcEntityInstanceData&& e) : IfcPhysicalSimpleQuantity(std::move(e)) { }
Ifc4x3_rc4::IfcQuantityWeight::IfcQuantityWeight(std::string v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcNamedUnit* v3_Unit, double v4_WeightValue, boost::optional< std::string > v5_Formula) : IfcPhysicalSimpleQuantity(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_Unit ? v3_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_WeightValue)); if (v5_Formula) {set_attribute_value(4, (*v5_Formula)); }; populate_derived(); }

// Function implementations for IfcRail
boost::optional< ::Ifc4x3_rc4::IfcRailTypeEnum::Value > Ifc4x3_rc4::IfcRail::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcRailTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcRail::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcRailTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcRailTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRail::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[859]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRail::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[859]); }
Ifc4x3_rc4::IfcRail::IfcRail(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcRail::IfcRail(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcRailTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcRailTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcRailType
::Ifc4x3_rc4::IfcRailTypeEnum::Value Ifc4x3_rc4::IfcRailType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcRailTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcRailType::setPredefinedType(::Ifc4x3_rc4::IfcRailTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcRailTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcRailType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[863]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRailType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[863]); }
Ifc4x3_rc4::IfcRailType::IfcRailType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcRailType::IfcRailType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcRailTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcRailTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcRailing
boost::optional< ::Ifc4x3_rc4::IfcRailingTypeEnum::Value > Ifc4x3_rc4::IfcRailing::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcRailingTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcRailing::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcRailingTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcRailingTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRailing::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[860]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRailing::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[860]); }
Ifc4x3_rc4::IfcRailing::IfcRailing(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcRailing::IfcRailing(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcRailingTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcRailingTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcRailingType
::Ifc4x3_rc4::IfcRailingTypeEnum::Value Ifc4x3_rc4::IfcRailingType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcRailingTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcRailingType::setPredefinedType(::Ifc4x3_rc4::IfcRailingTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcRailingTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcRailingType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[861]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRailingType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[861]); }
Ifc4x3_rc4::IfcRailingType::IfcRailingType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcRailingType::IfcRailingType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcRailingTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcRailingTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcRailway
boost::optional< ::Ifc4x3_rc4::IfcRailwayTypeEnum::Value > Ifc4x3_rc4::IfcRailway::PredefinedType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcRailwayTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcRailway::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcRailwayTypeEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcRailwayTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRailway::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[865]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRailway::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[865]); }
Ifc4x3_rc4::IfcRailway::IfcRailway(IfcEntityInstanceData&& e) : IfcFacility(std::move(e)) { }
Ifc4x3_rc4::IfcRailway::IfcRailway(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType, boost::optional< ::Ifc4x3_rc4::IfcRailwayTypeEnum::Value > v10_PredefinedType) : IfcFacility(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); } if (v10_PredefinedType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcRailwayTypeEnum::Class(),(size_t)*v10_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcRamp
boost::optional< ::Ifc4x3_rc4::IfcRampTypeEnum::Value > Ifc4x3_rc4::IfcRamp::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcRampTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcRamp::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcRampTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcRampTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRamp::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[868]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRamp::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[868]); }
Ifc4x3_rc4::IfcRamp::IfcRamp(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcRamp::IfcRamp(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcRampTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcRampTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcRampFlight
boost::optional< ::Ifc4x3_rc4::IfcRampFlightTypeEnum::Value > Ifc4x3_rc4::IfcRampFlight::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcRampFlightTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcRampFlight::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcRampFlightTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcRampFlightTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRampFlight::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[869]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRampFlight::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[869]); }
Ifc4x3_rc4::IfcRampFlight::IfcRampFlight(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcRampFlight::IfcRampFlight(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcRampFlightTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcRampFlightTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcRampFlightType
::Ifc4x3_rc4::IfcRampFlightTypeEnum::Value Ifc4x3_rc4::IfcRampFlightType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcRampFlightTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcRampFlightType::setPredefinedType(::Ifc4x3_rc4::IfcRampFlightTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcRampFlightTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcRampFlightType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[870]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRampFlightType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[870]); }
Ifc4x3_rc4::IfcRampFlightType::IfcRampFlightType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcRampFlightType::IfcRampFlightType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcRampFlightTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcRampFlightTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcRampType
::Ifc4x3_rc4::IfcRampTypeEnum::Value Ifc4x3_rc4::IfcRampType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcRampTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcRampType::setPredefinedType(::Ifc4x3_rc4::IfcRampTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcRampTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcRampType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[872]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRampType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[872]); }
Ifc4x3_rc4::IfcRampType::IfcRampType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcRampType::IfcRampType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcRampTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcRampTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcRationalBSplineCurveWithKnots
std::vector< double > /*[2:?]*/ Ifc4x3_rc4::IfcRationalBSplineCurveWithKnots::WeightsData() const {  std::vector< double > /*[2:?]*/ v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcRationalBSplineCurveWithKnots::setWeightsData(std::vector< double > /*[2:?]*/ v) { set_attribute_value(8, v);if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcRationalBSplineCurveWithKnots::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[875]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRationalBSplineCurveWithKnots::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[875]); }
Ifc4x3_rc4::IfcRationalBSplineCurveWithKnots::IfcRationalBSplineCurveWithKnots(IfcEntityInstanceData&& e) : IfcBSplineCurveWithKnots(std::move(e)) { }
Ifc4x3_rc4::IfcRationalBSplineCurveWithKnots::IfcRationalBSplineCurveWithKnots(int v1_Degree, aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v2_ControlPointsList, ::Ifc4x3_rc4::IfcBSplineCurveForm::Value v3_CurveForm, boost::logic::tribool v4_ClosedCurve, boost::logic::tribool v5_SelfIntersect, std::vector< int > /*[2:?]*/ v6_KnotMultiplicities, std::vector< double > /*[2:?]*/ v7_Knots, ::Ifc4x3_rc4::IfcKnotType::Value v8_KnotSpec, std::vector< double > /*[2:?]*/ v9_WeightsData) : IfcBSplineCurveWithKnots(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_Degree));set_attribute_value(1, (v2_ControlPointsList)->generalize());set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcBSplineCurveForm::Class(),(size_t)v3_CurveForm)));set_attribute_value(3, (v4_ClosedCurve));set_attribute_value(4, (v5_SelfIntersect));set_attribute_value(5, (v6_KnotMultiplicities));set_attribute_value(6, (v7_Knots));set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcKnotType::Class(),(size_t)v8_KnotSpec)));set_attribute_value(8, (v9_WeightsData));; populate_derived(); }

// Function implementations for IfcRationalBSplineSurfaceWithKnots
std::vector< std::vector< double > > Ifc4x3_rc4::IfcRationalBSplineSurfaceWithKnots::WeightsData() const {  std::vector< std::vector< double > > v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcRationalBSplineSurfaceWithKnots::setWeightsData(std::vector< std::vector< double > > v) { set_attribute_value(12, v);if constexpr (false)unset_attribute_value(12); }


const IfcParse::entity& Ifc4x3_rc4::IfcRationalBSplineSurfaceWithKnots::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[876]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRationalBSplineSurfaceWithKnots::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[876]); }
Ifc4x3_rc4::IfcRationalBSplineSurfaceWithKnots::IfcRationalBSplineSurfaceWithKnots(IfcEntityInstanceData&& e) : IfcBSplineSurfaceWithKnots(std::move(e)) { }
Ifc4x3_rc4::IfcRationalBSplineSurfaceWithKnots::IfcRationalBSplineSurfaceWithKnots(int v1_UDegree, int v2_VDegree, aggregate_of_aggregate_of< ::Ifc4x3_rc4::IfcCartesianPoint >::ptr v3_ControlPointsList, ::Ifc4x3_rc4::IfcBSplineSurfaceForm::Value v4_SurfaceForm, boost::logic::tribool v5_UClosed, boost::logic::tribool v6_VClosed, boost::logic::tribool v7_SelfIntersect, std::vector< int > /*[2:?]*/ v8_UMultiplicities, std::vector< int > /*[2:?]*/ v9_VMultiplicities, std::vector< double > /*[2:?]*/ v10_UKnots, std::vector< double > /*[2:?]*/ v11_VKnots, ::Ifc4x3_rc4::IfcKnotType::Value v12_KnotSpec, std::vector< std::vector< double > > v13_WeightsData) : IfcBSplineSurfaceWithKnots(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_UDegree));set_attribute_value(1, (v2_VDegree));set_attribute_value(2, (v3_ControlPointsList)->generalize());set_attribute_value(3, (EnumerationReference(&::Ifc4x3_rc4::IfcBSplineSurfaceForm::Class(),(size_t)v4_SurfaceForm)));set_attribute_value(4, (v5_UClosed));set_attribute_value(5, (v6_VClosed));set_attribute_value(6, (v7_SelfIntersect));set_attribute_value(7, (v8_UMultiplicities));set_attribute_value(8, (v9_VMultiplicities));set_attribute_value(9, (v10_UKnots));set_attribute_value(10, (v11_VKnots));set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcKnotType::Class(),(size_t)v12_KnotSpec)));set_attribute_value(12, (v13_WeightsData));; populate_derived(); }

// Function implementations for IfcRectangleHollowProfileDef
double Ifc4x3_rc4::IfcRectangleHollowProfileDef::WallThickness() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcRectangleHollowProfileDef::setWallThickness(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
boost::optional< double > Ifc4x3_rc4::IfcRectangleHollowProfileDef::InnerFilletRadius() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcRectangleHollowProfileDef::setInnerFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< double > Ifc4x3_rc4::IfcRectangleHollowProfileDef::OuterFilletRadius() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcRectangleHollowProfileDef::setOuterFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRectangleHollowProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[878]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRectangleHollowProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[878]); }
Ifc4x3_rc4::IfcRectangleHollowProfileDef::IfcRectangleHollowProfileDef(IfcEntityInstanceData&& e) : IfcRectangleProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcRectangleHollowProfileDef::IfcRectangleHollowProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_XDim, double v5_YDim, double v6_WallThickness, boost::optional< double > v7_InnerFilletRadius, boost::optional< double > v8_OuterFilletRadius) : IfcRectangleProfileDef(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_XDim));set_attribute_value(4, (v5_YDim));set_attribute_value(5, (v6_WallThickness)); if (v7_InnerFilletRadius) {set_attribute_value(6, (*v7_InnerFilletRadius)); } if (v8_OuterFilletRadius) {set_attribute_value(7, (*v8_OuterFilletRadius)); }; populate_derived(); }

// Function implementations for IfcRectangleProfileDef
double Ifc4x3_rc4::IfcRectangleProfileDef::XDim() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcRectangleProfileDef::setXDim(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcRectangleProfileDef::YDim() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcRectangleProfileDef::setYDim(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcRectangleProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[879]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRectangleProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[879]); }
Ifc4x3_rc4::IfcRectangleProfileDef::IfcRectangleProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcRectangleProfileDef::IfcRectangleProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_XDim, double v5_YDim) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_XDim));set_attribute_value(4, (v5_YDim));; populate_derived(); }

// Function implementations for IfcRectangularPyramid
double Ifc4x3_rc4::IfcRectangularPyramid::XLength() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcRectangularPyramid::setXLength(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcRectangularPyramid::YLength() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcRectangularPyramid::setYLength(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcRectangularPyramid::Height() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcRectangularPyramid::setHeight(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcRectangularPyramid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[880]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRectangularPyramid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[880]); }
Ifc4x3_rc4::IfcRectangularPyramid::IfcRectangularPyramid(IfcEntityInstanceData&& e) : IfcCsgPrimitive3D(std::move(e)) { }
Ifc4x3_rc4::IfcRectangularPyramid::IfcRectangularPyramid(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position, double v2_XLength, double v3_YLength, double v4_Height) : IfcCsgPrimitive3D(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_XLength));set_attribute_value(2, (v3_YLength));set_attribute_value(3, (v4_Height));; populate_derived(); }

// Function implementations for IfcRectangularTrimmedSurface
::Ifc4x3_rc4::IfcSurface* Ifc4x3_rc4::IfcRectangularTrimmedSurface::BasisSurface() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcSurface>(true); }
void Ifc4x3_rc4::IfcRectangularTrimmedSurface::setBasisSurface(::Ifc4x3_rc4::IfcSurface* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
double Ifc4x3_rc4::IfcRectangularTrimmedSurface::U1() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcRectangularTrimmedSurface::setU1(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcRectangularTrimmedSurface::V1() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcRectangularTrimmedSurface::setV1(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcRectangularTrimmedSurface::U2() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcRectangularTrimmedSurface::setU2(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcRectangularTrimmedSurface::V2() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcRectangularTrimmedSurface::setV2(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
bool Ifc4x3_rc4::IfcRectangularTrimmedSurface::Usense() const {  bool v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcRectangularTrimmedSurface::setUsense(bool v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
bool Ifc4x3_rc4::IfcRectangularTrimmedSurface::Vsense() const {  bool v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcRectangularTrimmedSurface::setVsense(bool v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcRectangularTrimmedSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[881]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRectangularTrimmedSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[881]); }
Ifc4x3_rc4::IfcRectangularTrimmedSurface::IfcRectangularTrimmedSurface(IfcEntityInstanceData&& e) : IfcBoundedSurface(std::move(e)) { }
Ifc4x3_rc4::IfcRectangularTrimmedSurface::IfcRectangularTrimmedSurface(::Ifc4x3_rc4::IfcSurface* v1_BasisSurface, double v2_U1, double v3_V1, double v4_U2, double v5_V2, bool v6_Usense, bool v7_Vsense) : IfcBoundedSurface(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, v1_BasisSurface ? v1_BasisSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_U1));set_attribute_value(2, (v3_V1));set_attribute_value(3, (v4_U2));set_attribute_value(4, (v5_V2));set_attribute_value(5, (v6_Usense));set_attribute_value(6, (v7_Vsense));; populate_derived(); }

// Function implementations for IfcRecurrencePattern
::Ifc4x3_rc4::IfcRecurrenceTypeEnum::Value Ifc4x3_rc4::IfcRecurrencePattern::RecurrenceType() const {  return ::Ifc4x3_rc4::IfcRecurrenceTypeEnum::FromString(data_.get_attribute_value(0)); }
void Ifc4x3_rc4::IfcRecurrencePattern::setRecurrenceType(::Ifc4x3_rc4::IfcRecurrenceTypeEnum::Value v) { set_attribute_value(0, EnumerationReference(&::Ifc4x3_rc4::IfcRecurrenceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(0); }
boost::optional< std::vector< int > /*[1:?]*/ > Ifc4x3_rc4::IfcRecurrencePattern::DayComponent() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::vector< int > /*[1:?]*/ v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcRecurrencePattern::setDayComponent(boost::optional< std::vector< int > /*[1:?]*/ > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::vector< int > /*[1:?]*/ > Ifc4x3_rc4::IfcRecurrencePattern::WeekdayComponent() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::vector< int > /*[1:?]*/ v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcRecurrencePattern::setWeekdayComponent(boost::optional< std::vector< int > /*[1:?]*/ > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< std::vector< int > /*[1:?]*/ > Ifc4x3_rc4::IfcRecurrencePattern::MonthComponent() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::vector< int > /*[1:?]*/ v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcRecurrencePattern::setMonthComponent(boost::optional< std::vector< int > /*[1:?]*/ > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< int > Ifc4x3_rc4::IfcRecurrencePattern::Position() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } int v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcRecurrencePattern::setPosition(boost::optional< int > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< int > Ifc4x3_rc4::IfcRecurrencePattern::Interval() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } int v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcRecurrencePattern::setInterval(boost::optional< int > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< int > Ifc4x3_rc4::IfcRecurrencePattern::Occurrences() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } int v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcRecurrencePattern::setOccurrences(boost::optional< int > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcTimePeriod >::ptr > Ifc4x3_rc4::IfcRecurrencePattern::TimePeriods() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcTimePeriod >(); }
void Ifc4x3_rc4::IfcRecurrencePattern::setTimePeriods(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcTimePeriod >::ptr > v) { if (v) {set_attribute_value(7, (*v)->generalize());} else {unset_attribute_value(7);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRecurrencePattern::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[882]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRecurrencePattern::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[882]); }
Ifc4x3_rc4::IfcRecurrencePattern::IfcRecurrencePattern(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcRecurrencePattern::IfcRecurrencePattern(::Ifc4x3_rc4::IfcRecurrenceTypeEnum::Value v1_RecurrenceType, boost::optional< std::vector< int > /*[1:?]*/ > v2_DayComponent, boost::optional< std::vector< int > /*[1:?]*/ > v3_WeekdayComponent, boost::optional< std::vector< int > /*[1:?]*/ > v4_MonthComponent, boost::optional< int > v5_Position, boost::optional< int > v6_Interval, boost::optional< int > v7_Occurrences, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcTimePeriod >::ptr > v8_TimePeriods) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcRecurrenceTypeEnum::Class(),(size_t)v1_RecurrenceType))); if (v2_DayComponent) {set_attribute_value(1, (*v2_DayComponent)); } if (v3_WeekdayComponent) {set_attribute_value(2, (*v3_WeekdayComponent)); } if (v4_MonthComponent) {set_attribute_value(3, (*v4_MonthComponent)); } if (v5_Position) {set_attribute_value(4, (*v5_Position)); } if (v6_Interval) {set_attribute_value(5, (*v6_Interval)); } if (v7_Occurrences) {set_attribute_value(6, (*v7_Occurrences)); } if (v8_TimePeriods) {set_attribute_value(7, (*v8_TimePeriods)->generalize()); }; populate_derived(); }

// Function implementations for IfcReference
boost::optional< std::string > Ifc4x3_rc4::IfcReference::TypeIdentifier() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcReference::setTypeIdentifier(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcReference::AttributeIdentifier() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcReference::setAttributeIdentifier(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcReference::InstanceName() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcReference::setInstanceName(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< std::vector< int > /*[1:?]*/ > Ifc4x3_rc4::IfcReference::ListPositions() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::vector< int > /*[1:?]*/ v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcReference::setListPositions(boost::optional< std::vector< int > /*[1:?]*/ > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
::Ifc4x3_rc4::IfcReference* Ifc4x3_rc4::IfcReference::InnerReference() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcReference>(true); }
void Ifc4x3_rc4::IfcReference::setInnerReference(::Ifc4x3_rc4::IfcReference* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcReference::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[884]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReference::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[884]); }
Ifc4x3_rc4::IfcReference::IfcReference(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcReference::IfcReference(boost::optional< std::string > v1_TypeIdentifier, boost::optional< std::string > v2_AttributeIdentifier, boost::optional< std::string > v3_InstanceName, boost::optional< std::vector< int > /*[1:?]*/ > v4_ListPositions, ::Ifc4x3_rc4::IfcReference* v5_InnerReference) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(5))) {  if (v1_TypeIdentifier) {set_attribute_value(0, (*v1_TypeIdentifier)); } if (v2_AttributeIdentifier) {set_attribute_value(1, (*v2_AttributeIdentifier)); } if (v3_InstanceName) {set_attribute_value(2, (*v3_InstanceName)); } if (v4_ListPositions) {set_attribute_value(3, (*v4_ListPositions)); }set_attribute_value(4, v5_InnerReference ? v5_InnerReference->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcReferent
boost::optional< ::Ifc4x3_rc4::IfcReferentTypeEnum::Value > Ifc4x3_rc4::IfcReferent::PredefinedType() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcReferentTypeEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcReferent::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcReferentTypeEnum::Value > v) { if (v) {set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcReferentTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(7);} }
boost::optional< double > Ifc4x3_rc4::IfcReferent::RestartDistance() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcReferent::setRestartDistance(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcReferent::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[885]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReferent::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[885]); }
Ifc4x3_rc4::IfcReferent::IfcReferent(IfcEntityInstanceData&& e) : IfcPositioningElement(std::move(e)) { }
Ifc4x3_rc4::IfcReferent::IfcReferent(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< ::Ifc4x3_rc4::IfcReferentTypeEnum::Value > v8_PredefinedType, boost::optional< double > v9_RestartDistance) : IfcPositioningElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_PredefinedType) {set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcReferentTypeEnum::Class(),(size_t)*v8_PredefinedType))); } if (v9_RestartDistance) {set_attribute_value(8, (*v9_RestartDistance)); }; populate_derived(); }

// Function implementations for IfcRegularTimeSeries
double Ifc4x3_rc4::IfcRegularTimeSeries::TimeStep() const {  double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcRegularTimeSeries::setTimeStep(double v) { set_attribute_value(8, v);if constexpr (false)unset_attribute_value(8); }
aggregate_of< ::Ifc4x3_rc4::IfcTimeSeriesValue >::ptr Ifc4x3_rc4::IfcRegularTimeSeries::Values() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(9); return es->as< ::Ifc4x3_rc4::IfcTimeSeriesValue >(); }
void Ifc4x3_rc4::IfcRegularTimeSeries::setValues(aggregate_of< ::Ifc4x3_rc4::IfcTimeSeriesValue >::ptr v) { set_attribute_value(9, (v)->generalize());if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcRegularTimeSeries::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[888]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRegularTimeSeries::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[888]); }
Ifc4x3_rc4::IfcRegularTimeSeries::IfcRegularTimeSeries(IfcEntityInstanceData&& e) : IfcTimeSeries(std::move(e)) { }
Ifc4x3_rc4::IfcRegularTimeSeries::IfcRegularTimeSeries(std::string v1_Name, boost::optional< std::string > v2_Description, std::string v3_StartTime, std::string v4_EndTime, ::Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Value v5_TimeSeriesDataType, ::Ifc4x3_rc4::IfcDataOriginEnum::Value v6_DataOrigin, boost::optional< std::string > v7_UserDefinedDataOrigin, ::Ifc4x3_rc4::IfcUnit* v8_Unit, double v9_TimeStep, aggregate_of< ::Ifc4x3_rc4::IfcTimeSeriesValue >::ptr v10_Values) : IfcTimeSeries(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_StartTime));set_attribute_value(3, (v4_EndTime));set_attribute_value(4, (EnumerationReference(&::Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Class(),(size_t)v5_TimeSeriesDataType)));set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(),(size_t)v6_DataOrigin))); if (v7_UserDefinedDataOrigin) {set_attribute_value(6, (*v7_UserDefinedDataOrigin)); }set_attribute_value(7, v8_Unit ? v8_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (v9_TimeStep));set_attribute_value(9, (v10_Values)->generalize());; populate_derived(); }

// Function implementations for IfcReinforcedSoil
boost::optional< ::Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::Value > Ifc4x3_rc4::IfcReinforcedSoil::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcReinforcedSoil::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcReinforcedSoil::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[889]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReinforcedSoil::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[889]); }
Ifc4x3_rc4::IfcReinforcedSoil::IfcReinforcedSoil(IfcEntityInstanceData&& e) : IfcEarthworksElement(std::move(e)) { }
Ifc4x3_rc4::IfcReinforcedSoil::IfcReinforcedSoil(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::Value > v9_PredefinedType) : IfcEarthworksElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcReinforcedSoilTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcReinforcementBarProperties
double Ifc4x3_rc4::IfcReinforcementBarProperties::TotalCrossSectionArea() const {  double v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcReinforcementBarProperties::setTotalCrossSectionArea(double v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
std::string Ifc4x3_rc4::IfcReinforcementBarProperties::SteelGrade() const {  std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcReinforcementBarProperties::setSteelGrade(std::string v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value > Ifc4x3_rc4::IfcReinforcementBarProperties::BarSurface() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::FromString(data_.get_attribute_value(2)); }
void Ifc4x3_rc4::IfcReinforcementBarProperties::setBarSurface(boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value > v) { if (v) {set_attribute_value(2, EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Class(), (size_t) *v));} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcementBarProperties::EffectiveDepth() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcReinforcementBarProperties::setEffectiveDepth(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcementBarProperties::NominalBarDiameter() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcReinforcementBarProperties::setNominalBarDiameter(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcementBarProperties::BarCount() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcReinforcementBarProperties::setBarCount(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }


const IfcParse::entity& Ifc4x3_rc4::IfcReinforcementBarProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[891]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReinforcementBarProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[891]); }
Ifc4x3_rc4::IfcReinforcementBarProperties::IfcReinforcementBarProperties(IfcEntityInstanceData&& e) : IfcPreDefinedProperties(std::move(e)) { }
Ifc4x3_rc4::IfcReinforcementBarProperties::IfcReinforcementBarProperties(double v1_TotalCrossSectionArea, std::string v2_SteelGrade, boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value > v3_BarSurface, boost::optional< double > v4_EffectiveDepth, boost::optional< double > v5_NominalBarDiameter, boost::optional< double > v6_BarCount) : IfcPreDefinedProperties(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_TotalCrossSectionArea));set_attribute_value(1, (v2_SteelGrade)); if (v3_BarSurface) {set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Class(),(size_t)*v3_BarSurface))); } if (v4_EffectiveDepth) {set_attribute_value(3, (*v4_EffectiveDepth)); } if (v5_NominalBarDiameter) {set_attribute_value(4, (*v5_NominalBarDiameter)); } if (v6_BarCount) {set_attribute_value(5, (*v6_BarCount)); }; populate_derived(); }

// Function implementations for IfcReinforcementDefinitionProperties
boost::optional< std::string > Ifc4x3_rc4::IfcReinforcementDefinitionProperties::DefinitionType() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcReinforcementDefinitionProperties::setDefinitionType(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
aggregate_of< ::Ifc4x3_rc4::IfcSectionReinforcementProperties >::ptr Ifc4x3_rc4::IfcReinforcementDefinitionProperties::ReinforcementSectionDefinitions() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcSectionReinforcementProperties >(); }
void Ifc4x3_rc4::IfcReinforcementDefinitionProperties::setReinforcementSectionDefinitions(aggregate_of< ::Ifc4x3_rc4::IfcSectionReinforcementProperties >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcReinforcementDefinitionProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[892]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReinforcementDefinitionProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[892]); }
Ifc4x3_rc4::IfcReinforcementDefinitionProperties::IfcReinforcementDefinitionProperties(IfcEntityInstanceData&& e) : IfcPreDefinedPropertySet(std::move(e)) { }
Ifc4x3_rc4::IfcReinforcementDefinitionProperties::IfcReinforcementDefinitionProperties(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_DefinitionType, aggregate_of< ::Ifc4x3_rc4::IfcSectionReinforcementProperties >::ptr v6_ReinforcementSectionDefinitions) : IfcPreDefinedPropertySet(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_DefinitionType) {set_attribute_value(4, (*v5_DefinitionType)); }set_attribute_value(5, (v6_ReinforcementSectionDefinitions)->generalize());; populate_derived(); }

// Function implementations for IfcReinforcingBar
boost::optional< double > Ifc4x3_rc4::IfcReinforcingBar::NominalDiameter() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcReinforcingBar::setNominalDiameter(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingBar::CrossSectionArea() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcReinforcingBar::setCrossSectionArea(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingBar::BarLength() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcReinforcingBar::setBarLength(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Value > Ifc4x3_rc4::IfcReinforcingBar::PredefinedType() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::FromString(data_.get_attribute_value(12)); }
void Ifc4x3_rc4::IfcReinforcingBar::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Value > v) { if (v) {set_attribute_value(12, EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(12);} }
boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value > Ifc4x3_rc4::IfcReinforcingBar::BarSurface() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::FromString(data_.get_attribute_value(13)); }
void Ifc4x3_rc4::IfcReinforcingBar::setBarSurface(boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value > v) { if (v) {set_attribute_value(13, EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Class(), (size_t) *v));} else {unset_attribute_value(13);} }


const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingBar::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[893]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingBar::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[893]); }
Ifc4x3_rc4::IfcReinforcingBar::IfcReinforcingBar(IfcEntityInstanceData&& e) : IfcReinforcingElement(std::move(e)) { }
Ifc4x3_rc4::IfcReinforcingBar::IfcReinforcingBar(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_SteelGrade, boost::optional< double > v10_NominalDiameter, boost::optional< double > v11_CrossSectionArea, boost::optional< double > v12_BarLength, boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Value > v13_PredefinedType, boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value > v14_BarSurface) : IfcReinforcingElement(IfcEntityInstanceData(storage_t(14))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_SteelGrade) {set_attribute_value(8, (*v9_SteelGrade)); } if (v10_NominalDiameter) {set_attribute_value(9, (*v10_NominalDiameter)); } if (v11_CrossSectionArea) {set_attribute_value(10, (*v11_CrossSectionArea)); } if (v12_BarLength) {set_attribute_value(11, (*v12_BarLength)); } if (v13_PredefinedType) {set_attribute_value(12, (EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Class(),(size_t)*v13_PredefinedType))); } if (v14_BarSurface) {set_attribute_value(13, (EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Class(),(size_t)*v14_BarSurface))); }; populate_derived(); }

// Function implementations for IfcReinforcingBarType
::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Value Ifc4x3_rc4::IfcReinforcingBarType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcReinforcingBarType::setPredefinedType(::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingBarType::NominalDiameter() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcReinforcingBarType::setNominalDiameter(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingBarType::CrossSectionArea() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcReinforcingBarType::setCrossSectionArea(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingBarType::BarLength() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } double v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcReinforcingBarType::setBarLength(boost::optional< double > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value > Ifc4x3_rc4::IfcReinforcingBarType::BarSurface() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::FromString(data_.get_attribute_value(13)); }
void Ifc4x3_rc4::IfcReinforcingBarType::setBarSurface(boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value > v) { if (v) {set_attribute_value(13, EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Class(), (size_t) *v));} else {unset_attribute_value(13);} }
boost::optional< std::string > Ifc4x3_rc4::IfcReinforcingBarType::BendingShapeCode() const { if(data_.get_attribute_value(14).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(14); return v; }
void Ifc4x3_rc4::IfcReinforcingBarType::setBendingShapeCode(boost::optional< std::string > v) { if (v) {set_attribute_value(14, *v);} else {unset_attribute_value(14);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcBendingParameterSelect >::ptr > Ifc4x3_rc4::IfcReinforcingBarType::BendingParameters() const { if(data_.get_attribute_value(15).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(15); return es->as< ::Ifc4x3_rc4::IfcBendingParameterSelect >(); }
void Ifc4x3_rc4::IfcReinforcingBarType::setBendingParameters(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcBendingParameterSelect >::ptr > v) { if (v) {set_attribute_value(15, (*v)->generalize());} else {unset_attribute_value(15);} }


const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingBarType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[896]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingBarType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[896]); }
Ifc4x3_rc4::IfcReinforcingBarType::IfcReinforcingBarType(IfcEntityInstanceData&& e) : IfcReinforcingElementType(std::move(e)) { }
Ifc4x3_rc4::IfcReinforcingBarType::IfcReinforcingBarType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Value v10_PredefinedType, boost::optional< double > v11_NominalDiameter, boost::optional< double > v12_CrossSectionArea, boost::optional< double > v13_BarLength, boost::optional< ::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Value > v14_BarSurface, boost::optional< std::string > v15_BendingShapeCode, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcBendingParameterSelect >::ptr > v16_BendingParameters) : IfcReinforcingElementType(IfcEntityInstanceData(storage_t(16))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarTypeEnum::Class(),(size_t)v10_PredefinedType))); if (v11_NominalDiameter) {set_attribute_value(10, (*v11_NominalDiameter)); } if (v12_CrossSectionArea) {set_attribute_value(11, (*v12_CrossSectionArea)); } if (v13_BarLength) {set_attribute_value(12, (*v13_BarLength)); } if (v14_BarSurface) {set_attribute_value(13, (EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarSurfaceEnum::Class(),(size_t)*v14_BarSurface))); } if (v15_BendingShapeCode) {set_attribute_value(14, (*v15_BendingShapeCode)); } if (v16_BendingParameters) {set_attribute_value(15, (*v16_BendingParameters)->generalize()); }; populate_derived(); }

// Function implementations for IfcReinforcingElement
boost::optional< std::string > Ifc4x3_rc4::IfcReinforcingElement::SteelGrade() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcReinforcingElement::setSteelGrade(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[898]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[898]); }
Ifc4x3_rc4::IfcReinforcingElement::IfcReinforcingElement(IfcEntityInstanceData&& e) : IfcElementComponent(std::move(e)) { }
Ifc4x3_rc4::IfcReinforcingElement::IfcReinforcingElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_SteelGrade) : IfcElementComponent(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_SteelGrade) {set_attribute_value(8, (*v9_SteelGrade)); }; populate_derived(); }

// Function implementations for IfcReinforcingElementType


const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[899]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[899]); }
Ifc4x3_rc4::IfcReinforcingElementType::IfcReinforcingElementType(IfcEntityInstanceData&& e) : IfcElementComponentType(std::move(e)) { }
Ifc4x3_rc4::IfcReinforcingElementType::IfcReinforcingElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcElementComponentType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcReinforcingMesh
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMesh::MeshLength() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcReinforcingMesh::setMeshLength(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMesh::MeshWidth() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcReinforcingMesh::setMeshWidth(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMesh::LongitudinalBarNominalDiameter() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcReinforcingMesh::setLongitudinalBarNominalDiameter(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMesh::TransverseBarNominalDiameter() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } double v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcReinforcingMesh::setTransverseBarNominalDiameter(boost::optional< double > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMesh::LongitudinalBarCrossSectionArea() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } double v = data_.get_attribute_value(13); return v; }
void Ifc4x3_rc4::IfcReinforcingMesh::setLongitudinalBarCrossSectionArea(boost::optional< double > v) { if (v) {set_attribute_value(13, *v);} else {unset_attribute_value(13);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMesh::TransverseBarCrossSectionArea() const { if(data_.get_attribute_value(14).isNull()) { return boost::none; } double v = data_.get_attribute_value(14); return v; }
void Ifc4x3_rc4::IfcReinforcingMesh::setTransverseBarCrossSectionArea(boost::optional< double > v) { if (v) {set_attribute_value(14, *v);} else {unset_attribute_value(14);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMesh::LongitudinalBarSpacing() const { if(data_.get_attribute_value(15).isNull()) { return boost::none; } double v = data_.get_attribute_value(15); return v; }
void Ifc4x3_rc4::IfcReinforcingMesh::setLongitudinalBarSpacing(boost::optional< double > v) { if (v) {set_attribute_value(15, *v);} else {unset_attribute_value(15);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMesh::TransverseBarSpacing() const { if(data_.get_attribute_value(16).isNull()) { return boost::none; } double v = data_.get_attribute_value(16); return v; }
void Ifc4x3_rc4::IfcReinforcingMesh::setTransverseBarSpacing(boost::optional< double > v) { if (v) {set_attribute_value(16, *v);} else {unset_attribute_value(16);} }
boost::optional< ::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Value > Ifc4x3_rc4::IfcReinforcingMesh::PredefinedType() const { if(data_.get_attribute_value(17).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::FromString(data_.get_attribute_value(17)); }
void Ifc4x3_rc4::IfcReinforcingMesh::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Value > v) { if (v) {set_attribute_value(17, EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(17);} }


const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingMesh::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[900]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingMesh::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[900]); }
Ifc4x3_rc4::IfcReinforcingMesh::IfcReinforcingMesh(IfcEntityInstanceData&& e) : IfcReinforcingElement(std::move(e)) { }
Ifc4x3_rc4::IfcReinforcingMesh::IfcReinforcingMesh(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_SteelGrade, boost::optional< double > v10_MeshLength, boost::optional< double > v11_MeshWidth, boost::optional< double > v12_LongitudinalBarNominalDiameter, boost::optional< double > v13_TransverseBarNominalDiameter, boost::optional< double > v14_LongitudinalBarCrossSectionArea, boost::optional< double > v15_TransverseBarCrossSectionArea, boost::optional< double > v16_LongitudinalBarSpacing, boost::optional< double > v17_TransverseBarSpacing, boost::optional< ::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Value > v18_PredefinedType) : IfcReinforcingElement(IfcEntityInstanceData(storage_t(18))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_SteelGrade) {set_attribute_value(8, (*v9_SteelGrade)); } if (v10_MeshLength) {set_attribute_value(9, (*v10_MeshLength)); } if (v11_MeshWidth) {set_attribute_value(10, (*v11_MeshWidth)); } if (v12_LongitudinalBarNominalDiameter) {set_attribute_value(11, (*v12_LongitudinalBarNominalDiameter)); } if (v13_TransverseBarNominalDiameter) {set_attribute_value(12, (*v13_TransverseBarNominalDiameter)); } if (v14_LongitudinalBarCrossSectionArea) {set_attribute_value(13, (*v14_LongitudinalBarCrossSectionArea)); } if (v15_TransverseBarCrossSectionArea) {set_attribute_value(14, (*v15_TransverseBarCrossSectionArea)); } if (v16_LongitudinalBarSpacing) {set_attribute_value(15, (*v16_LongitudinalBarSpacing)); } if (v17_TransverseBarSpacing) {set_attribute_value(16, (*v17_TransverseBarSpacing)); } if (v18_PredefinedType) {set_attribute_value(17, (EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Class(),(size_t)*v18_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcReinforcingMeshType
::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Value Ifc4x3_rc4::IfcReinforcingMeshType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcReinforcingMeshType::setPredefinedType(::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMeshType::MeshLength() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcReinforcingMeshType::setMeshLength(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMeshType::MeshWidth() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcReinforcingMeshType::setMeshWidth(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMeshType::LongitudinalBarNominalDiameter() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } double v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcReinforcingMeshType::setLongitudinalBarNominalDiameter(boost::optional< double > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMeshType::TransverseBarNominalDiameter() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } double v = data_.get_attribute_value(13); return v; }
void Ifc4x3_rc4::IfcReinforcingMeshType::setTransverseBarNominalDiameter(boost::optional< double > v) { if (v) {set_attribute_value(13, *v);} else {unset_attribute_value(13);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMeshType::LongitudinalBarCrossSectionArea() const { if(data_.get_attribute_value(14).isNull()) { return boost::none; } double v = data_.get_attribute_value(14); return v; }
void Ifc4x3_rc4::IfcReinforcingMeshType::setLongitudinalBarCrossSectionArea(boost::optional< double > v) { if (v) {set_attribute_value(14, *v);} else {unset_attribute_value(14);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMeshType::TransverseBarCrossSectionArea() const { if(data_.get_attribute_value(15).isNull()) { return boost::none; } double v = data_.get_attribute_value(15); return v; }
void Ifc4x3_rc4::IfcReinforcingMeshType::setTransverseBarCrossSectionArea(boost::optional< double > v) { if (v) {set_attribute_value(15, *v);} else {unset_attribute_value(15);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMeshType::LongitudinalBarSpacing() const { if(data_.get_attribute_value(16).isNull()) { return boost::none; } double v = data_.get_attribute_value(16); return v; }
void Ifc4x3_rc4::IfcReinforcingMeshType::setLongitudinalBarSpacing(boost::optional< double > v) { if (v) {set_attribute_value(16, *v);} else {unset_attribute_value(16);} }
boost::optional< double > Ifc4x3_rc4::IfcReinforcingMeshType::TransverseBarSpacing() const { if(data_.get_attribute_value(17).isNull()) { return boost::none; } double v = data_.get_attribute_value(17); return v; }
void Ifc4x3_rc4::IfcReinforcingMeshType::setTransverseBarSpacing(boost::optional< double > v) { if (v) {set_attribute_value(17, *v);} else {unset_attribute_value(17);} }
boost::optional< std::string > Ifc4x3_rc4::IfcReinforcingMeshType::BendingShapeCode() const { if(data_.get_attribute_value(18).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(18); return v; }
void Ifc4x3_rc4::IfcReinforcingMeshType::setBendingShapeCode(boost::optional< std::string > v) { if (v) {set_attribute_value(18, *v);} else {unset_attribute_value(18);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcBendingParameterSelect >::ptr > Ifc4x3_rc4::IfcReinforcingMeshType::BendingParameters() const { if(data_.get_attribute_value(19).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(19); return es->as< ::Ifc4x3_rc4::IfcBendingParameterSelect >(); }
void Ifc4x3_rc4::IfcReinforcingMeshType::setBendingParameters(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcBendingParameterSelect >::ptr > v) { if (v) {set_attribute_value(19, (*v)->generalize());} else {unset_attribute_value(19);} }


const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingMeshType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[901]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReinforcingMeshType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[901]); }
Ifc4x3_rc4::IfcReinforcingMeshType::IfcReinforcingMeshType(IfcEntityInstanceData&& e) : IfcReinforcingElementType(std::move(e)) { }
Ifc4x3_rc4::IfcReinforcingMeshType::IfcReinforcingMeshType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Value v10_PredefinedType, boost::optional< double > v11_MeshLength, boost::optional< double > v12_MeshWidth, boost::optional< double > v13_LongitudinalBarNominalDiameter, boost::optional< double > v14_TransverseBarNominalDiameter, boost::optional< double > v15_LongitudinalBarCrossSectionArea, boost::optional< double > v16_TransverseBarCrossSectionArea, boost::optional< double > v17_LongitudinalBarSpacing, boost::optional< double > v18_TransverseBarSpacing, boost::optional< std::string > v19_BendingShapeCode, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcBendingParameterSelect >::ptr > v20_BendingParameters) : IfcReinforcingElementType(IfcEntityInstanceData(storage_t(20))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingMeshTypeEnum::Class(),(size_t)v10_PredefinedType))); if (v11_MeshLength) {set_attribute_value(10, (*v11_MeshLength)); } if (v12_MeshWidth) {set_attribute_value(11, (*v12_MeshWidth)); } if (v13_LongitudinalBarNominalDiameter) {set_attribute_value(12, (*v13_LongitudinalBarNominalDiameter)); } if (v14_TransverseBarNominalDiameter) {set_attribute_value(13, (*v14_TransverseBarNominalDiameter)); } if (v15_LongitudinalBarCrossSectionArea) {set_attribute_value(14, (*v15_LongitudinalBarCrossSectionArea)); } if (v16_TransverseBarCrossSectionArea) {set_attribute_value(15, (*v16_TransverseBarCrossSectionArea)); } if (v17_LongitudinalBarSpacing) {set_attribute_value(16, (*v17_LongitudinalBarSpacing)); } if (v18_TransverseBarSpacing) {set_attribute_value(17, (*v18_TransverseBarSpacing)); } if (v19_BendingShapeCode) {set_attribute_value(18, (*v19_BendingShapeCode)); } if (v20_BendingParameters) {set_attribute_value(19, (*v20_BendingParameters)->generalize()); }; populate_derived(); }

// Function implementations for IfcRelAdheresToElement
::Ifc4x3_rc4::IfcElement* Ifc4x3_rc4::IfcRelAdheresToElement::RelatingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcElement>(true); }
void Ifc4x3_rc4::IfcRelAdheresToElement::setRelatingElement(::Ifc4x3_rc4::IfcElement* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
aggregate_of< ::Ifc4x3_rc4::IfcSurfaceFeature >::ptr Ifc4x3_rc4::IfcRelAdheresToElement::RelatedSurfaceFeatures() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcSurfaceFeature >(); }
void Ifc4x3_rc4::IfcRelAdheresToElement::setRelatedSurfaceFeatures(aggregate_of< ::Ifc4x3_rc4::IfcSurfaceFeature >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAdheresToElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[903]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAdheresToElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[903]); }
Ifc4x3_rc4::IfcRelAdheresToElement::IfcRelAdheresToElement(IfcEntityInstanceData&& e) : IfcRelDecomposes(std::move(e)) { }
Ifc4x3_rc4::IfcRelAdheresToElement::IfcRelAdheresToElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcElement* v5_RelatingElement, aggregate_of< ::Ifc4x3_rc4::IfcSurfaceFeature >::ptr v6_RelatedSurfaceFeatures) : IfcRelDecomposes(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingElement ? v5_RelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_RelatedSurfaceFeatures)->generalize());; populate_derived(); }

// Function implementations for IfcRelAggregates
::Ifc4x3_rc4::IfcObjectDefinition* Ifc4x3_rc4::IfcRelAggregates::RelatingObject() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcObjectDefinition>(true); }
void Ifc4x3_rc4::IfcRelAggregates::setRelatingObject(::Ifc4x3_rc4::IfcObjectDefinition* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr Ifc4x3_rc4::IfcRelAggregates::RelatedObjects() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcObjectDefinition >(); }
void Ifc4x3_rc4::IfcRelAggregates::setRelatedObjects(aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAggregates::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[904]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAggregates::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[904]); }
Ifc4x3_rc4::IfcRelAggregates::IfcRelAggregates(IfcEntityInstanceData&& e) : IfcRelDecomposes(std::move(e)) { }
Ifc4x3_rc4::IfcRelAggregates::IfcRelAggregates(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcObjectDefinition* v5_RelatingObject, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v6_RelatedObjects) : IfcRelDecomposes(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingObject ? v5_RelatingObject->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_RelatedObjects)->generalize());; populate_derived(); }

// Function implementations for IfcRelAssigns
aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr Ifc4x3_rc4::IfcRelAssigns::RelatedObjects() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcObjectDefinition >(); }
void Ifc4x3_rc4::IfcRelAssigns::setRelatedObjects(aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v) { set_attribute_value(4, (v)->generalize());if constexpr (false)unset_attribute_value(4); }
boost::optional< ::Ifc4x3_rc4::IfcObjectTypeEnum::Value > Ifc4x3_rc4::IfcRelAssigns::RelatedObjectsType() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcObjectTypeEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcRelAssigns::setRelatedObjectsType(boost::optional< ::Ifc4x3_rc4::IfcObjectTypeEnum::Value > v) { if (v) {set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(5);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssigns::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[905]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssigns::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[905]); }
Ifc4x3_rc4::IfcRelAssigns::IfcRelAssigns(IfcEntityInstanceData&& e) : IfcRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssigns::IfcRelAssigns(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v5_RelatedObjects, boost::optional< ::Ifc4x3_rc4::IfcObjectTypeEnum::Value > v6_RelatedObjectsType) : IfcRelationship(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize()); if (v6_RelatedObjectsType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(),(size_t)*v6_RelatedObjectsType))); }; populate_derived(); }

// Function implementations for IfcRelAssignsToActor
::Ifc4x3_rc4::IfcActor* Ifc4x3_rc4::IfcRelAssignsToActor::RelatingActor() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcActor>(true); }
void Ifc4x3_rc4::IfcRelAssignsToActor::setRelatingActor(::Ifc4x3_rc4::IfcActor* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
::Ifc4x3_rc4::IfcActorRole* Ifc4x3_rc4::IfcRelAssignsToActor::ActingRole() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcActorRole>(true); }
void Ifc4x3_rc4::IfcRelAssignsToActor::setActingRole(::Ifc4x3_rc4::IfcActorRole* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToActor::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[906]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToActor::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[906]); }
Ifc4x3_rc4::IfcRelAssignsToActor::IfcRelAssignsToActor(IfcEntityInstanceData&& e) : IfcRelAssigns(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssignsToActor::IfcRelAssignsToActor(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v5_RelatedObjects, boost::optional< ::Ifc4x3_rc4::IfcObjectTypeEnum::Value > v6_RelatedObjectsType, ::Ifc4x3_rc4::IfcActor* v7_RelatingActor, ::Ifc4x3_rc4::IfcActorRole* v8_ActingRole) : IfcRelAssigns(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize()); if (v6_RelatedObjectsType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(),(size_t)*v6_RelatedObjectsType))); }set_attribute_value(6, v7_RelatingActor ? v7_RelatingActor->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_ActingRole ? v8_ActingRole->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssignsToControl
::Ifc4x3_rc4::IfcControl* Ifc4x3_rc4::IfcRelAssignsToControl::RelatingControl() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcControl>(true); }
void Ifc4x3_rc4::IfcRelAssignsToControl::setRelatingControl(::Ifc4x3_rc4::IfcControl* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToControl::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[907]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToControl::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[907]); }
Ifc4x3_rc4::IfcRelAssignsToControl::IfcRelAssignsToControl(IfcEntityInstanceData&& e) : IfcRelAssigns(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssignsToControl::IfcRelAssignsToControl(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v5_RelatedObjects, boost::optional< ::Ifc4x3_rc4::IfcObjectTypeEnum::Value > v6_RelatedObjectsType, ::Ifc4x3_rc4::IfcControl* v7_RelatingControl) : IfcRelAssigns(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize()); if (v6_RelatedObjectsType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(),(size_t)*v6_RelatedObjectsType))); }set_attribute_value(6, v7_RelatingControl ? v7_RelatingControl->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssignsToGroup
::Ifc4x3_rc4::IfcGroup* Ifc4x3_rc4::IfcRelAssignsToGroup::RelatingGroup() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcGroup>(true); }
void Ifc4x3_rc4::IfcRelAssignsToGroup::setRelatingGroup(::Ifc4x3_rc4::IfcGroup* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToGroup::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[908]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToGroup::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[908]); }
Ifc4x3_rc4::IfcRelAssignsToGroup::IfcRelAssignsToGroup(IfcEntityInstanceData&& e) : IfcRelAssigns(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssignsToGroup::IfcRelAssignsToGroup(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v5_RelatedObjects, boost::optional< ::Ifc4x3_rc4::IfcObjectTypeEnum::Value > v6_RelatedObjectsType, ::Ifc4x3_rc4::IfcGroup* v7_RelatingGroup) : IfcRelAssigns(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize()); if (v6_RelatedObjectsType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(),(size_t)*v6_RelatedObjectsType))); }set_attribute_value(6, v7_RelatingGroup ? v7_RelatingGroup->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssignsToGroupByFactor
double Ifc4x3_rc4::IfcRelAssignsToGroupByFactor::Factor() const {  double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcRelAssignsToGroupByFactor::setFactor(double v) { set_attribute_value(7, v);if constexpr (false)unset_attribute_value(7); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToGroupByFactor::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[909]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToGroupByFactor::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[909]); }
Ifc4x3_rc4::IfcRelAssignsToGroupByFactor::IfcRelAssignsToGroupByFactor(IfcEntityInstanceData&& e) : IfcRelAssignsToGroup(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssignsToGroupByFactor::IfcRelAssignsToGroupByFactor(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v5_RelatedObjects, boost::optional< ::Ifc4x3_rc4::IfcObjectTypeEnum::Value > v6_RelatedObjectsType, ::Ifc4x3_rc4::IfcGroup* v7_RelatingGroup, double v8_Factor) : IfcRelAssignsToGroup(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize()); if (v6_RelatedObjectsType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(),(size_t)*v6_RelatedObjectsType))); }set_attribute_value(6, v7_RelatingGroup ? v7_RelatingGroup->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (v8_Factor));; populate_derived(); }

// Function implementations for IfcRelAssignsToProcess
::Ifc4x3_rc4::IfcProcessSelect* Ifc4x3_rc4::IfcRelAssignsToProcess::RelatingProcess() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcProcessSelect>(true); }
void Ifc4x3_rc4::IfcRelAssignsToProcess::setRelatingProcess(::Ifc4x3_rc4::IfcProcessSelect* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
::Ifc4x3_rc4::IfcMeasureWithUnit* Ifc4x3_rc4::IfcRelAssignsToProcess::QuantityInProcess() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcMeasureWithUnit>(true); }
void Ifc4x3_rc4::IfcRelAssignsToProcess::setQuantityInProcess(::Ifc4x3_rc4::IfcMeasureWithUnit* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToProcess::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[910]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToProcess::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[910]); }
Ifc4x3_rc4::IfcRelAssignsToProcess::IfcRelAssignsToProcess(IfcEntityInstanceData&& e) : IfcRelAssigns(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssignsToProcess::IfcRelAssignsToProcess(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v5_RelatedObjects, boost::optional< ::Ifc4x3_rc4::IfcObjectTypeEnum::Value > v6_RelatedObjectsType, ::Ifc4x3_rc4::IfcProcessSelect* v7_RelatingProcess, ::Ifc4x3_rc4::IfcMeasureWithUnit* v8_QuantityInProcess) : IfcRelAssigns(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize()); if (v6_RelatedObjectsType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(),(size_t)*v6_RelatedObjectsType))); }set_attribute_value(6, v7_RelatingProcess ? v7_RelatingProcess->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_QuantityInProcess ? v8_QuantityInProcess->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssignsToProduct
::Ifc4x3_rc4::IfcProductSelect* Ifc4x3_rc4::IfcRelAssignsToProduct::RelatingProduct() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcProductSelect>(true); }
void Ifc4x3_rc4::IfcRelAssignsToProduct::setRelatingProduct(::Ifc4x3_rc4::IfcProductSelect* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToProduct::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[911]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToProduct::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[911]); }
Ifc4x3_rc4::IfcRelAssignsToProduct::IfcRelAssignsToProduct(IfcEntityInstanceData&& e) : IfcRelAssigns(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssignsToProduct::IfcRelAssignsToProduct(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v5_RelatedObjects, boost::optional< ::Ifc4x3_rc4::IfcObjectTypeEnum::Value > v6_RelatedObjectsType, ::Ifc4x3_rc4::IfcProductSelect* v7_RelatingProduct) : IfcRelAssigns(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize()); if (v6_RelatedObjectsType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(),(size_t)*v6_RelatedObjectsType))); }set_attribute_value(6, v7_RelatingProduct ? v7_RelatingProduct->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssignsToResource
::Ifc4x3_rc4::IfcResourceSelect* Ifc4x3_rc4::IfcRelAssignsToResource::RelatingResource() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcResourceSelect>(true); }
void Ifc4x3_rc4::IfcRelAssignsToResource::setRelatingResource(::Ifc4x3_rc4::IfcResourceSelect* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToResource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[912]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssignsToResource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[912]); }
Ifc4x3_rc4::IfcRelAssignsToResource::IfcRelAssignsToResource(IfcEntityInstanceData&& e) : IfcRelAssigns(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssignsToResource::IfcRelAssignsToResource(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v5_RelatedObjects, boost::optional< ::Ifc4x3_rc4::IfcObjectTypeEnum::Value > v6_RelatedObjectsType, ::Ifc4x3_rc4::IfcResourceSelect* v7_RelatingResource) : IfcRelAssigns(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize()); if (v6_RelatedObjectsType) {set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcObjectTypeEnum::Class(),(size_t)*v6_RelatedObjectsType))); }set_attribute_value(6, v7_RelatingResource ? v7_RelatingResource->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssociates
aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr Ifc4x3_rc4::IfcRelAssociates::RelatedObjects() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcDefinitionSelect >(); }
void Ifc4x3_rc4::IfcRelAssociates::setRelatedObjects(aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v) { set_attribute_value(4, (v)->generalize());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociates::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[913]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociates::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[913]); }
Ifc4x3_rc4::IfcRelAssociates::IfcRelAssociates(IfcEntityInstanceData&& e) : IfcRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssociates::IfcRelAssociates(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v5_RelatedObjects) : IfcRelationship(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize());; populate_derived(); }

// Function implementations for IfcRelAssociatesApproval
::Ifc4x3_rc4::IfcApproval* Ifc4x3_rc4::IfcRelAssociatesApproval::RelatingApproval() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcApproval>(true); }
void Ifc4x3_rc4::IfcRelAssociatesApproval::setRelatingApproval(::Ifc4x3_rc4::IfcApproval* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesApproval::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[914]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesApproval::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[914]); }
Ifc4x3_rc4::IfcRelAssociatesApproval::IfcRelAssociatesApproval(IfcEntityInstanceData&& e) : IfcRelAssociates(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssociatesApproval::IfcRelAssociatesApproval(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v5_RelatedObjects, ::Ifc4x3_rc4::IfcApproval* v6_RelatingApproval) : IfcRelAssociates(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize());set_attribute_value(5, v6_RelatingApproval ? v6_RelatingApproval->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssociatesClassification
::Ifc4x3_rc4::IfcClassificationSelect* Ifc4x3_rc4::IfcRelAssociatesClassification::RelatingClassification() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcClassificationSelect>(true); }
void Ifc4x3_rc4::IfcRelAssociatesClassification::setRelatingClassification(::Ifc4x3_rc4::IfcClassificationSelect* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesClassification::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[915]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesClassification::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[915]); }
Ifc4x3_rc4::IfcRelAssociatesClassification::IfcRelAssociatesClassification(IfcEntityInstanceData&& e) : IfcRelAssociates(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssociatesClassification::IfcRelAssociatesClassification(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v5_RelatedObjects, ::Ifc4x3_rc4::IfcClassificationSelect* v6_RelatingClassification) : IfcRelAssociates(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize());set_attribute_value(5, v6_RelatingClassification ? v6_RelatingClassification->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssociatesConstraint
boost::optional< std::string > Ifc4x3_rc4::IfcRelAssociatesConstraint::Intent() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcRelAssociatesConstraint::setIntent(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
::Ifc4x3_rc4::IfcConstraint* Ifc4x3_rc4::IfcRelAssociatesConstraint::RelatingConstraint() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcConstraint>(true); }
void Ifc4x3_rc4::IfcRelAssociatesConstraint::setRelatingConstraint(::Ifc4x3_rc4::IfcConstraint* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesConstraint::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[916]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesConstraint::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[916]); }
Ifc4x3_rc4::IfcRelAssociatesConstraint::IfcRelAssociatesConstraint(IfcEntityInstanceData&& e) : IfcRelAssociates(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssociatesConstraint::IfcRelAssociatesConstraint(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v5_RelatedObjects, boost::optional< std::string > v6_Intent, ::Ifc4x3_rc4::IfcConstraint* v7_RelatingConstraint) : IfcRelAssociates(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize()); if (v6_Intent) {set_attribute_value(5, (*v6_Intent)); }set_attribute_value(6, v7_RelatingConstraint ? v7_RelatingConstraint->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssociatesDocument
::Ifc4x3_rc4::IfcDocumentSelect* Ifc4x3_rc4::IfcRelAssociatesDocument::RelatingDocument() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcDocumentSelect>(true); }
void Ifc4x3_rc4::IfcRelAssociatesDocument::setRelatingDocument(::Ifc4x3_rc4::IfcDocumentSelect* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesDocument::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[917]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesDocument::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[917]); }
Ifc4x3_rc4::IfcRelAssociatesDocument::IfcRelAssociatesDocument(IfcEntityInstanceData&& e) : IfcRelAssociates(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssociatesDocument::IfcRelAssociatesDocument(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v5_RelatedObjects, ::Ifc4x3_rc4::IfcDocumentSelect* v6_RelatingDocument) : IfcRelAssociates(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize());set_attribute_value(5, v6_RelatingDocument ? v6_RelatingDocument->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssociatesLibrary
::Ifc4x3_rc4::IfcLibrarySelect* Ifc4x3_rc4::IfcRelAssociatesLibrary::RelatingLibrary() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcLibrarySelect>(true); }
void Ifc4x3_rc4::IfcRelAssociatesLibrary::setRelatingLibrary(::Ifc4x3_rc4::IfcLibrarySelect* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesLibrary::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[918]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesLibrary::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[918]); }
Ifc4x3_rc4::IfcRelAssociatesLibrary::IfcRelAssociatesLibrary(IfcEntityInstanceData&& e) : IfcRelAssociates(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssociatesLibrary::IfcRelAssociatesLibrary(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v5_RelatedObjects, ::Ifc4x3_rc4::IfcLibrarySelect* v6_RelatingLibrary) : IfcRelAssociates(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize());set_attribute_value(5, v6_RelatingLibrary ? v6_RelatingLibrary->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssociatesMaterial
::Ifc4x3_rc4::IfcMaterialSelect* Ifc4x3_rc4::IfcRelAssociatesMaterial::RelatingMaterial() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcMaterialSelect>(true); }
void Ifc4x3_rc4::IfcRelAssociatesMaterial::setRelatingMaterial(::Ifc4x3_rc4::IfcMaterialSelect* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesMaterial::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[919]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesMaterial::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[919]); }
Ifc4x3_rc4::IfcRelAssociatesMaterial::IfcRelAssociatesMaterial(IfcEntityInstanceData&& e) : IfcRelAssociates(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssociatesMaterial::IfcRelAssociatesMaterial(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v5_RelatedObjects, ::Ifc4x3_rc4::IfcMaterialSelect* v6_RelatingMaterial) : IfcRelAssociates(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize());set_attribute_value(5, v6_RelatingMaterial ? v6_RelatingMaterial->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelAssociatesProfileDef
::Ifc4x3_rc4::IfcProfileDef* Ifc4x3_rc4::IfcRelAssociatesProfileDef::RelatingProfileDef() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcProfileDef>(true); }
void Ifc4x3_rc4::IfcRelAssociatesProfileDef::setRelatingProfileDef(::Ifc4x3_rc4::IfcProfileDef* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[920]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelAssociatesProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[920]); }
Ifc4x3_rc4::IfcRelAssociatesProfileDef::IfcRelAssociatesProfileDef(IfcEntityInstanceData&& e) : IfcRelAssociates(std::move(e)) { }
Ifc4x3_rc4::IfcRelAssociatesProfileDef::IfcRelAssociatesProfileDef(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v5_RelatedObjects, ::Ifc4x3_rc4::IfcProfileDef* v6_RelatingProfileDef) : IfcRelAssociates(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize());set_attribute_value(5, v6_RelatingProfileDef ? v6_RelatingProfileDef->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelConnects


const IfcParse::entity& Ifc4x3_rc4::IfcRelConnects::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[922]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelConnects::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[922]); }
Ifc4x3_rc4::IfcRelConnects::IfcRelConnects(IfcEntityInstanceData&& e) : IfcRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcRelConnects::IfcRelConnects(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcRelationship(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcRelConnectsElements
::Ifc4x3_rc4::IfcConnectionGeometry* Ifc4x3_rc4::IfcRelConnectsElements::ConnectionGeometry() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcConnectionGeometry>(true); }
void Ifc4x3_rc4::IfcRelConnectsElements::setConnectionGeometry(::Ifc4x3_rc4::IfcConnectionGeometry* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcElement* Ifc4x3_rc4::IfcRelConnectsElements::RelatingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcElement>(true); }
void Ifc4x3_rc4::IfcRelConnectsElements::setRelatingElement(::Ifc4x3_rc4::IfcElement* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcElement* Ifc4x3_rc4::IfcRelConnectsElements::RelatedElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcElement>(true); }
void Ifc4x3_rc4::IfcRelConnectsElements::setRelatedElement(::Ifc4x3_rc4::IfcElement* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsElements::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[923]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsElements::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[923]); }
Ifc4x3_rc4::IfcRelConnectsElements::IfcRelConnectsElements(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelConnectsElements::IfcRelConnectsElements(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcConnectionGeometry* v5_ConnectionGeometry, ::Ifc4x3_rc4::IfcElement* v6_RelatingElement, ::Ifc4x3_rc4::IfcElement* v7_RelatedElement) : IfcRelConnects(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_ConnectionGeometry ? v5_ConnectionGeometry->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatingElement ? v6_RelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_RelatedElement ? v7_RelatedElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelConnectsPathElements
std::vector< int > /*[0:?]*/ Ifc4x3_rc4::IfcRelConnectsPathElements::RelatingPriorities() const {  std::vector< int > /*[0:?]*/ v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcRelConnectsPathElements::setRelatingPriorities(std::vector< int > /*[0:?]*/ v) { set_attribute_value(7, v);if constexpr (false)unset_attribute_value(7); }
std::vector< int > /*[0:?]*/ Ifc4x3_rc4::IfcRelConnectsPathElements::RelatedPriorities() const {  std::vector< int > /*[0:?]*/ v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcRelConnectsPathElements::setRelatedPriorities(std::vector< int > /*[0:?]*/ v) { set_attribute_value(8, v);if constexpr (false)unset_attribute_value(8); }
::Ifc4x3_rc4::IfcConnectionTypeEnum::Value Ifc4x3_rc4::IfcRelConnectsPathElements::RelatedConnectionType() const {  return ::Ifc4x3_rc4::IfcConnectionTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcRelConnectsPathElements::setRelatedConnectionType(::Ifc4x3_rc4::IfcConnectionTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcConnectionTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
::Ifc4x3_rc4::IfcConnectionTypeEnum::Value Ifc4x3_rc4::IfcRelConnectsPathElements::RelatingConnectionType() const {  return ::Ifc4x3_rc4::IfcConnectionTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcRelConnectsPathElements::setRelatingConnectionType(::Ifc4x3_rc4::IfcConnectionTypeEnum::Value v) { set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcConnectionTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(10); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsPathElements::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[924]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsPathElements::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[924]); }
Ifc4x3_rc4::IfcRelConnectsPathElements::IfcRelConnectsPathElements(IfcEntityInstanceData&& e) : IfcRelConnectsElements(std::move(e)) { }
Ifc4x3_rc4::IfcRelConnectsPathElements::IfcRelConnectsPathElements(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcConnectionGeometry* v5_ConnectionGeometry, ::Ifc4x3_rc4::IfcElement* v6_RelatingElement, ::Ifc4x3_rc4::IfcElement* v7_RelatedElement, std::vector< int > /*[0:?]*/ v8_RelatingPriorities, std::vector< int > /*[0:?]*/ v9_RelatedPriorities, ::Ifc4x3_rc4::IfcConnectionTypeEnum::Value v10_RelatedConnectionType, ::Ifc4x3_rc4::IfcConnectionTypeEnum::Value v11_RelatingConnectionType) : IfcRelConnectsElements(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_ConnectionGeometry ? v5_ConnectionGeometry->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatingElement ? v6_RelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_RelatedElement ? v7_RelatedElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (v8_RelatingPriorities));set_attribute_value(8, (v9_RelatedPriorities));set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcConnectionTypeEnum::Class(),(size_t)v10_RelatedConnectionType)));set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcConnectionTypeEnum::Class(),(size_t)v11_RelatingConnectionType)));; populate_derived(); }

// Function implementations for IfcRelConnectsPortToElement
::Ifc4x3_rc4::IfcPort* Ifc4x3_rc4::IfcRelConnectsPortToElement::RelatingPort() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcPort>(true); }
void Ifc4x3_rc4::IfcRelConnectsPortToElement::setRelatingPort(::Ifc4x3_rc4::IfcPort* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcDistributionElement* Ifc4x3_rc4::IfcRelConnectsPortToElement::RelatedElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcDistributionElement>(true); }
void Ifc4x3_rc4::IfcRelConnectsPortToElement::setRelatedElement(::Ifc4x3_rc4::IfcDistributionElement* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsPortToElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[926]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsPortToElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[926]); }
Ifc4x3_rc4::IfcRelConnectsPortToElement::IfcRelConnectsPortToElement(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelConnectsPortToElement::IfcRelConnectsPortToElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcPort* v5_RelatingPort, ::Ifc4x3_rc4::IfcDistributionElement* v6_RelatedElement) : IfcRelConnects(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingPort ? v5_RelatingPort->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedElement ? v6_RelatedElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelConnectsPorts
::Ifc4x3_rc4::IfcPort* Ifc4x3_rc4::IfcRelConnectsPorts::RelatingPort() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcPort>(true); }
void Ifc4x3_rc4::IfcRelConnectsPorts::setRelatingPort(::Ifc4x3_rc4::IfcPort* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcPort* Ifc4x3_rc4::IfcRelConnectsPorts::RelatedPort() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcPort>(true); }
void Ifc4x3_rc4::IfcRelConnectsPorts::setRelatedPort(::Ifc4x3_rc4::IfcPort* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcElement* Ifc4x3_rc4::IfcRelConnectsPorts::RealizingElement() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcElement>(true); }
void Ifc4x3_rc4::IfcRelConnectsPorts::setRealizingElement(::Ifc4x3_rc4::IfcElement* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsPorts::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[925]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsPorts::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[925]); }
Ifc4x3_rc4::IfcRelConnectsPorts::IfcRelConnectsPorts(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelConnectsPorts::IfcRelConnectsPorts(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcPort* v5_RelatingPort, ::Ifc4x3_rc4::IfcPort* v6_RelatedPort, ::Ifc4x3_rc4::IfcElement* v7_RealizingElement) : IfcRelConnects(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingPort ? v5_RelatingPort->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedPort ? v6_RelatedPort->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_RealizingElement ? v7_RealizingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelConnectsStructuralActivity
::Ifc4x3_rc4::IfcStructuralActivityAssignmentSelect* Ifc4x3_rc4::IfcRelConnectsStructuralActivity::RelatingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcStructuralActivityAssignmentSelect>(true); }
void Ifc4x3_rc4::IfcRelConnectsStructuralActivity::setRelatingElement(::Ifc4x3_rc4::IfcStructuralActivityAssignmentSelect* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcStructuralActivity* Ifc4x3_rc4::IfcRelConnectsStructuralActivity::RelatedStructuralActivity() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcStructuralActivity>(true); }
void Ifc4x3_rc4::IfcRelConnectsStructuralActivity::setRelatedStructuralActivity(::Ifc4x3_rc4::IfcStructuralActivity* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsStructuralActivity::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[927]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsStructuralActivity::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[927]); }
Ifc4x3_rc4::IfcRelConnectsStructuralActivity::IfcRelConnectsStructuralActivity(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelConnectsStructuralActivity::IfcRelConnectsStructuralActivity(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcStructuralActivityAssignmentSelect* v5_RelatingElement, ::Ifc4x3_rc4::IfcStructuralActivity* v6_RelatedStructuralActivity) : IfcRelConnects(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingElement ? v5_RelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedStructuralActivity ? v6_RelatedStructuralActivity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelConnectsStructuralMember
::Ifc4x3_rc4::IfcStructuralMember* Ifc4x3_rc4::IfcRelConnectsStructuralMember::RelatingStructuralMember() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcStructuralMember>(true); }
void Ifc4x3_rc4::IfcRelConnectsStructuralMember::setRelatingStructuralMember(::Ifc4x3_rc4::IfcStructuralMember* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcStructuralConnection* Ifc4x3_rc4::IfcRelConnectsStructuralMember::RelatedStructuralConnection() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcStructuralConnection>(true); }
void Ifc4x3_rc4::IfcRelConnectsStructuralMember::setRelatedStructuralConnection(::Ifc4x3_rc4::IfcStructuralConnection* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcBoundaryCondition* Ifc4x3_rc4::IfcRelConnectsStructuralMember::AppliedCondition() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcBoundaryCondition>(true); }
void Ifc4x3_rc4::IfcRelConnectsStructuralMember::setAppliedCondition(::Ifc4x3_rc4::IfcBoundaryCondition* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
::Ifc4x3_rc4::IfcStructuralConnectionCondition* Ifc4x3_rc4::IfcRelConnectsStructuralMember::AdditionalConditions() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcStructuralConnectionCondition>(true); }
void Ifc4x3_rc4::IfcRelConnectsStructuralMember::setAdditionalConditions(::Ifc4x3_rc4::IfcStructuralConnectionCondition* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }
boost::optional< double > Ifc4x3_rc4::IfcRelConnectsStructuralMember::SupportedLength() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcRelConnectsStructuralMember::setSupportedLength(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
::Ifc4x3_rc4::IfcAxis2Placement3D* Ifc4x3_rc4::IfcRelConnectsStructuralMember::ConditionCoordinateSystem() const { if(data_.get_attribute_value(9).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcAxis2Placement3D>(true); }
void Ifc4x3_rc4::IfcRelConnectsStructuralMember::setConditionCoordinateSystem(::Ifc4x3_rc4::IfcAxis2Placement3D* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsStructuralMember::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[928]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsStructuralMember::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[928]); }
Ifc4x3_rc4::IfcRelConnectsStructuralMember::IfcRelConnectsStructuralMember(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelConnectsStructuralMember::IfcRelConnectsStructuralMember(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcStructuralMember* v5_RelatingStructuralMember, ::Ifc4x3_rc4::IfcStructuralConnection* v6_RelatedStructuralConnection, ::Ifc4x3_rc4::IfcBoundaryCondition* v7_AppliedCondition, ::Ifc4x3_rc4::IfcStructuralConnectionCondition* v8_AdditionalConditions, boost::optional< double > v9_SupportedLength, ::Ifc4x3_rc4::IfcAxis2Placement3D* v10_ConditionCoordinateSystem) : IfcRelConnects(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingStructuralMember ? v5_RelatingStructuralMember->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedStructuralConnection ? v6_RelatedStructuralConnection->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_AppliedCondition ? v7_AppliedCondition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AdditionalConditions ? v8_AdditionalConditions->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v9_SupportedLength) {set_attribute_value(8, (*v9_SupportedLength)); }set_attribute_value(9, v10_ConditionCoordinateSystem ? v10_ConditionCoordinateSystem->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelConnectsWithEccentricity
::Ifc4x3_rc4::IfcConnectionGeometry* Ifc4x3_rc4::IfcRelConnectsWithEccentricity::ConnectionConstraint() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(10)))->as<::Ifc4x3_rc4::IfcConnectionGeometry>(true); }
void Ifc4x3_rc4::IfcRelConnectsWithEccentricity::setConnectionConstraint(::Ifc4x3_rc4::IfcConnectionGeometry* v) { set_attribute_value(10, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(10); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsWithEccentricity::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[929]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsWithEccentricity::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[929]); }
Ifc4x3_rc4::IfcRelConnectsWithEccentricity::IfcRelConnectsWithEccentricity(IfcEntityInstanceData&& e) : IfcRelConnectsStructuralMember(std::move(e)) { }
Ifc4x3_rc4::IfcRelConnectsWithEccentricity::IfcRelConnectsWithEccentricity(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcStructuralMember* v5_RelatingStructuralMember, ::Ifc4x3_rc4::IfcStructuralConnection* v6_RelatedStructuralConnection, ::Ifc4x3_rc4::IfcBoundaryCondition* v7_AppliedCondition, ::Ifc4x3_rc4::IfcStructuralConnectionCondition* v8_AdditionalConditions, boost::optional< double > v9_SupportedLength, ::Ifc4x3_rc4::IfcAxis2Placement3D* v10_ConditionCoordinateSystem, ::Ifc4x3_rc4::IfcConnectionGeometry* v11_ConnectionConstraint) : IfcRelConnectsStructuralMember(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingStructuralMember ? v5_RelatingStructuralMember->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedStructuralConnection ? v6_RelatedStructuralConnection->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_AppliedCondition ? v7_AppliedCondition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AdditionalConditions ? v8_AdditionalConditions->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v9_SupportedLength) {set_attribute_value(8, (*v9_SupportedLength)); }set_attribute_value(9, v10_ConditionCoordinateSystem ? v10_ConditionCoordinateSystem->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(10, v11_ConnectionConstraint ? v11_ConnectionConstraint->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelConnectsWithRealizingElements
aggregate_of< ::Ifc4x3_rc4::IfcElement >::ptr Ifc4x3_rc4::IfcRelConnectsWithRealizingElements::RealizingElements() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcElement >(); }
void Ifc4x3_rc4::IfcRelConnectsWithRealizingElements::setRealizingElements(aggregate_of< ::Ifc4x3_rc4::IfcElement >::ptr v) { set_attribute_value(7, (v)->generalize());if constexpr (false)unset_attribute_value(7); }
boost::optional< std::string > Ifc4x3_rc4::IfcRelConnectsWithRealizingElements::ConnectionType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcRelConnectsWithRealizingElements::setConnectionType(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsWithRealizingElements::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[930]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelConnectsWithRealizingElements::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[930]); }
Ifc4x3_rc4::IfcRelConnectsWithRealizingElements::IfcRelConnectsWithRealizingElements(IfcEntityInstanceData&& e) : IfcRelConnectsElements(std::move(e)) { }
Ifc4x3_rc4::IfcRelConnectsWithRealizingElements::IfcRelConnectsWithRealizingElements(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcConnectionGeometry* v5_ConnectionGeometry, ::Ifc4x3_rc4::IfcElement* v6_RelatingElement, ::Ifc4x3_rc4::IfcElement* v7_RelatedElement, aggregate_of< ::Ifc4x3_rc4::IfcElement >::ptr v8_RealizingElements, boost::optional< std::string > v9_ConnectionType) : IfcRelConnectsElements(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_ConnectionGeometry ? v5_ConnectionGeometry->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatingElement ? v6_RelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_RelatedElement ? v7_RelatedElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (v8_RealizingElements)->generalize()); if (v9_ConnectionType) {set_attribute_value(8, (*v9_ConnectionType)); }; populate_derived(); }

// Function implementations for IfcRelContainedInSpatialStructure
aggregate_of< ::Ifc4x3_rc4::IfcProduct >::ptr Ifc4x3_rc4::IfcRelContainedInSpatialStructure::RelatedElements() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcProduct >(); }
void Ifc4x3_rc4::IfcRelContainedInSpatialStructure::setRelatedElements(aggregate_of< ::Ifc4x3_rc4::IfcProduct >::ptr v) { set_attribute_value(4, (v)->generalize());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcSpatialElement* Ifc4x3_rc4::IfcRelContainedInSpatialStructure::RelatingStructure() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcSpatialElement>(true); }
void Ifc4x3_rc4::IfcRelContainedInSpatialStructure::setRelatingStructure(::Ifc4x3_rc4::IfcSpatialElement* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelContainedInSpatialStructure::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[931]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelContainedInSpatialStructure::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[931]); }
Ifc4x3_rc4::IfcRelContainedInSpatialStructure::IfcRelContainedInSpatialStructure(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelContainedInSpatialStructure::IfcRelContainedInSpatialStructure(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcProduct >::ptr v5_RelatedElements, ::Ifc4x3_rc4::IfcSpatialElement* v6_RelatingStructure) : IfcRelConnects(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedElements)->generalize());set_attribute_value(5, v6_RelatingStructure ? v6_RelatingStructure->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelCoversBldgElements
::Ifc4x3_rc4::IfcElement* Ifc4x3_rc4::IfcRelCoversBldgElements::RelatingBuildingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcElement>(true); }
void Ifc4x3_rc4::IfcRelCoversBldgElements::setRelatingBuildingElement(::Ifc4x3_rc4::IfcElement* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
aggregate_of< ::Ifc4x3_rc4::IfcCovering >::ptr Ifc4x3_rc4::IfcRelCoversBldgElements::RelatedCoverings() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcCovering >(); }
void Ifc4x3_rc4::IfcRelCoversBldgElements::setRelatedCoverings(aggregate_of< ::Ifc4x3_rc4::IfcCovering >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelCoversBldgElements::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[932]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelCoversBldgElements::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[932]); }
Ifc4x3_rc4::IfcRelCoversBldgElements::IfcRelCoversBldgElements(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelCoversBldgElements::IfcRelCoversBldgElements(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcElement* v5_RelatingBuildingElement, aggregate_of< ::Ifc4x3_rc4::IfcCovering >::ptr v6_RelatedCoverings) : IfcRelConnects(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingBuildingElement ? v5_RelatingBuildingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_RelatedCoverings)->generalize());; populate_derived(); }

// Function implementations for IfcRelCoversSpaces
::Ifc4x3_rc4::IfcSpace* Ifc4x3_rc4::IfcRelCoversSpaces::RelatingSpace() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcSpace>(true); }
void Ifc4x3_rc4::IfcRelCoversSpaces::setRelatingSpace(::Ifc4x3_rc4::IfcSpace* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
aggregate_of< ::Ifc4x3_rc4::IfcCovering >::ptr Ifc4x3_rc4::IfcRelCoversSpaces::RelatedCoverings() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcCovering >(); }
void Ifc4x3_rc4::IfcRelCoversSpaces::setRelatedCoverings(aggregate_of< ::Ifc4x3_rc4::IfcCovering >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelCoversSpaces::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[933]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelCoversSpaces::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[933]); }
Ifc4x3_rc4::IfcRelCoversSpaces::IfcRelCoversSpaces(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelCoversSpaces::IfcRelCoversSpaces(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcSpace* v5_RelatingSpace, aggregate_of< ::Ifc4x3_rc4::IfcCovering >::ptr v6_RelatedCoverings) : IfcRelConnects(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingSpace ? v5_RelatingSpace->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_RelatedCoverings)->generalize());; populate_derived(); }

// Function implementations for IfcRelDeclares
::Ifc4x3_rc4::IfcContext* Ifc4x3_rc4::IfcRelDeclares::RelatingContext() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcContext>(true); }
void Ifc4x3_rc4::IfcRelDeclares::setRelatingContext(::Ifc4x3_rc4::IfcContext* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr Ifc4x3_rc4::IfcRelDeclares::RelatedDefinitions() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcDefinitionSelect >(); }
void Ifc4x3_rc4::IfcRelDeclares::setRelatedDefinitions(aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelDeclares::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[934]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelDeclares::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[934]); }
Ifc4x3_rc4::IfcRelDeclares::IfcRelDeclares(IfcEntityInstanceData&& e) : IfcRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcRelDeclares::IfcRelDeclares(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcContext* v5_RelatingContext, aggregate_of< ::Ifc4x3_rc4::IfcDefinitionSelect >::ptr v6_RelatedDefinitions) : IfcRelationship(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingContext ? v5_RelatingContext->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_RelatedDefinitions)->generalize());; populate_derived(); }

// Function implementations for IfcRelDecomposes


const IfcParse::entity& Ifc4x3_rc4::IfcRelDecomposes::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[935]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelDecomposes::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[935]); }
Ifc4x3_rc4::IfcRelDecomposes::IfcRelDecomposes(IfcEntityInstanceData&& e) : IfcRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcRelDecomposes::IfcRelDecomposes(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcRelationship(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcRelDefines


const IfcParse::entity& Ifc4x3_rc4::IfcRelDefines::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[936]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelDefines::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[936]); }
Ifc4x3_rc4::IfcRelDefines::IfcRelDefines(IfcEntityInstanceData&& e) : IfcRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcRelDefines::IfcRelDefines(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcRelationship(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcRelDefinesByObject
aggregate_of< ::Ifc4x3_rc4::IfcObject >::ptr Ifc4x3_rc4::IfcRelDefinesByObject::RelatedObjects() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcObject >(); }
void Ifc4x3_rc4::IfcRelDefinesByObject::setRelatedObjects(aggregate_of< ::Ifc4x3_rc4::IfcObject >::ptr v) { set_attribute_value(4, (v)->generalize());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcObject* Ifc4x3_rc4::IfcRelDefinesByObject::RelatingObject() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcObject>(true); }
void Ifc4x3_rc4::IfcRelDefinesByObject::setRelatingObject(::Ifc4x3_rc4::IfcObject* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelDefinesByObject::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[937]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelDefinesByObject::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[937]); }
Ifc4x3_rc4::IfcRelDefinesByObject::IfcRelDefinesByObject(IfcEntityInstanceData&& e) : IfcRelDefines(std::move(e)) { }
Ifc4x3_rc4::IfcRelDefinesByObject::IfcRelDefinesByObject(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObject >::ptr v5_RelatedObjects, ::Ifc4x3_rc4::IfcObject* v6_RelatingObject) : IfcRelDefines(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize());set_attribute_value(5, v6_RelatingObject ? v6_RelatingObject->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelDefinesByProperties
aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr Ifc4x3_rc4::IfcRelDefinesByProperties::RelatedObjects() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcObjectDefinition >(); }
void Ifc4x3_rc4::IfcRelDefinesByProperties::setRelatedObjects(aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v) { set_attribute_value(4, (v)->generalize());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcPropertySetDefinitionSelect* Ifc4x3_rc4::IfcRelDefinesByProperties::RelatingPropertyDefinition() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcPropertySetDefinitionSelect>(true); }
void Ifc4x3_rc4::IfcRelDefinesByProperties::setRelatingPropertyDefinition(::Ifc4x3_rc4::IfcPropertySetDefinitionSelect* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelDefinesByProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[938]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelDefinesByProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[938]); }
Ifc4x3_rc4::IfcRelDefinesByProperties::IfcRelDefinesByProperties(IfcEntityInstanceData&& e) : IfcRelDefines(std::move(e)) { }
Ifc4x3_rc4::IfcRelDefinesByProperties::IfcRelDefinesByProperties(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v5_RelatedObjects, ::Ifc4x3_rc4::IfcPropertySetDefinitionSelect* v6_RelatingPropertyDefinition) : IfcRelDefines(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize());set_attribute_value(5, v6_RelatingPropertyDefinition ? v6_RelatingPropertyDefinition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelDefinesByTemplate
aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr Ifc4x3_rc4::IfcRelDefinesByTemplate::RelatedPropertySets() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcPropertySetDefinition >(); }
void Ifc4x3_rc4::IfcRelDefinesByTemplate::setRelatedPropertySets(aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr v) { set_attribute_value(4, (v)->generalize());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcPropertySetTemplate* Ifc4x3_rc4::IfcRelDefinesByTemplate::RelatingTemplate() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcPropertySetTemplate>(true); }
void Ifc4x3_rc4::IfcRelDefinesByTemplate::setRelatingTemplate(::Ifc4x3_rc4::IfcPropertySetTemplate* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelDefinesByTemplate::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[939]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelDefinesByTemplate::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[939]); }
Ifc4x3_rc4::IfcRelDefinesByTemplate::IfcRelDefinesByTemplate(IfcEntityInstanceData&& e) : IfcRelDefines(std::move(e)) { }
Ifc4x3_rc4::IfcRelDefinesByTemplate::IfcRelDefinesByTemplate(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr v5_RelatedPropertySets, ::Ifc4x3_rc4::IfcPropertySetTemplate* v6_RelatingTemplate) : IfcRelDefines(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedPropertySets)->generalize());set_attribute_value(5, v6_RelatingTemplate ? v6_RelatingTemplate->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelDefinesByType
aggregate_of< ::Ifc4x3_rc4::IfcObject >::ptr Ifc4x3_rc4::IfcRelDefinesByType::RelatedObjects() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcObject >(); }
void Ifc4x3_rc4::IfcRelDefinesByType::setRelatedObjects(aggregate_of< ::Ifc4x3_rc4::IfcObject >::ptr v) { set_attribute_value(4, (v)->generalize());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcTypeObject* Ifc4x3_rc4::IfcRelDefinesByType::RelatingType() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcTypeObject>(true); }
void Ifc4x3_rc4::IfcRelDefinesByType::setRelatingType(::Ifc4x3_rc4::IfcTypeObject* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelDefinesByType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[940]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelDefinesByType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[940]); }
Ifc4x3_rc4::IfcRelDefinesByType::IfcRelDefinesByType(IfcEntityInstanceData&& e) : IfcRelDefines(std::move(e)) { }
Ifc4x3_rc4::IfcRelDefinesByType::IfcRelDefinesByType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcObject >::ptr v5_RelatedObjects, ::Ifc4x3_rc4::IfcTypeObject* v6_RelatingType) : IfcRelDefines(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedObjects)->generalize());set_attribute_value(5, v6_RelatingType ? v6_RelatingType->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelFillsElement
::Ifc4x3_rc4::IfcOpeningElement* Ifc4x3_rc4::IfcRelFillsElement::RelatingOpeningElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcOpeningElement>(true); }
void Ifc4x3_rc4::IfcRelFillsElement::setRelatingOpeningElement(::Ifc4x3_rc4::IfcOpeningElement* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcElement* Ifc4x3_rc4::IfcRelFillsElement::RelatedBuildingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcElement>(true); }
void Ifc4x3_rc4::IfcRelFillsElement::setRelatedBuildingElement(::Ifc4x3_rc4::IfcElement* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelFillsElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[941]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelFillsElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[941]); }
Ifc4x3_rc4::IfcRelFillsElement::IfcRelFillsElement(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelFillsElement::IfcRelFillsElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcOpeningElement* v5_RelatingOpeningElement, ::Ifc4x3_rc4::IfcElement* v6_RelatedBuildingElement) : IfcRelConnects(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingOpeningElement ? v5_RelatingOpeningElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedBuildingElement ? v6_RelatedBuildingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelFlowControlElements
aggregate_of< ::Ifc4x3_rc4::IfcDistributionControlElement >::ptr Ifc4x3_rc4::IfcRelFlowControlElements::RelatedControlElements() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcDistributionControlElement >(); }
void Ifc4x3_rc4::IfcRelFlowControlElements::setRelatedControlElements(aggregate_of< ::Ifc4x3_rc4::IfcDistributionControlElement >::ptr v) { set_attribute_value(4, (v)->generalize());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcDistributionFlowElement* Ifc4x3_rc4::IfcRelFlowControlElements::RelatingFlowElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcDistributionFlowElement>(true); }
void Ifc4x3_rc4::IfcRelFlowControlElements::setRelatingFlowElement(::Ifc4x3_rc4::IfcDistributionFlowElement* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelFlowControlElements::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[942]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelFlowControlElements::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[942]); }
Ifc4x3_rc4::IfcRelFlowControlElements::IfcRelFlowControlElements(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelFlowControlElements::IfcRelFlowControlElements(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcDistributionControlElement >::ptr v5_RelatedControlElements, ::Ifc4x3_rc4::IfcDistributionFlowElement* v6_RelatingFlowElement) : IfcRelConnects(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedControlElements)->generalize());set_attribute_value(5, v6_RelatingFlowElement ? v6_RelatingFlowElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelInterferesElements
::Ifc4x3_rc4::IfcInterferenceSelect* Ifc4x3_rc4::IfcRelInterferesElements::RelatingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcInterferenceSelect>(true); }
void Ifc4x3_rc4::IfcRelInterferesElements::setRelatingElement(::Ifc4x3_rc4::IfcInterferenceSelect* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcInterferenceSelect* Ifc4x3_rc4::IfcRelInterferesElements::RelatedElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcInterferenceSelect>(true); }
void Ifc4x3_rc4::IfcRelInterferesElements::setRelatedElement(::Ifc4x3_rc4::IfcInterferenceSelect* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcConnectionGeometry* Ifc4x3_rc4::IfcRelInterferesElements::InterferenceGeometry() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcConnectionGeometry>(true); }
void Ifc4x3_rc4::IfcRelInterferesElements::setInterferenceGeometry(::Ifc4x3_rc4::IfcConnectionGeometry* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
::Ifc4x3_rc4::IfcSpatialZone* Ifc4x3_rc4::IfcRelInterferesElements::InterferenceSpace() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcSpatialZone>(true); }
void Ifc4x3_rc4::IfcRelInterferesElements::setInterferenceSpace(::Ifc4x3_rc4::IfcSpatialZone* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }
boost::optional< std::string > Ifc4x3_rc4::IfcRelInterferesElements::InterferenceType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcRelInterferesElements::setInterferenceType(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::logic::tribool Ifc4x3_rc4::IfcRelInterferesElements::ImpliedOrder() const {  boost::logic::tribool v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcRelInterferesElements::setImpliedOrder(boost::logic::tribool v) { set_attribute_value(9, v);if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelInterferesElements::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[943]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelInterferesElements::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[943]); }
Ifc4x3_rc4::IfcRelInterferesElements::IfcRelInterferesElements(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelInterferesElements::IfcRelInterferesElements(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcInterferenceSelect* v5_RelatingElement, ::Ifc4x3_rc4::IfcInterferenceSelect* v6_RelatedElement, ::Ifc4x3_rc4::IfcConnectionGeometry* v7_InterferenceGeometry, ::Ifc4x3_rc4::IfcSpatialZone* v8_InterferenceSpace, boost::optional< std::string > v9_InterferenceType, boost::logic::tribool v10_ImpliedOrder) : IfcRelConnects(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingElement ? v5_RelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedElement ? v6_RelatedElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_InterferenceGeometry ? v7_InterferenceGeometry->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_InterferenceSpace ? v8_InterferenceSpace->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v9_InterferenceType) {set_attribute_value(8, (*v9_InterferenceType)); }set_attribute_value(9, (v10_ImpliedOrder));; populate_derived(); }

// Function implementations for IfcRelNests
::Ifc4x3_rc4::IfcObjectDefinition* Ifc4x3_rc4::IfcRelNests::RelatingObject() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcObjectDefinition>(true); }
void Ifc4x3_rc4::IfcRelNests::setRelatingObject(::Ifc4x3_rc4::IfcObjectDefinition* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr Ifc4x3_rc4::IfcRelNests::RelatedObjects() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcObjectDefinition >(); }
void Ifc4x3_rc4::IfcRelNests::setRelatedObjects(aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelNests::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[944]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelNests::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[944]); }
Ifc4x3_rc4::IfcRelNests::IfcRelNests(IfcEntityInstanceData&& e) : IfcRelDecomposes(std::move(e)) { }
Ifc4x3_rc4::IfcRelNests::IfcRelNests(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcObjectDefinition* v5_RelatingObject, aggregate_of< ::Ifc4x3_rc4::IfcObjectDefinition >::ptr v6_RelatedObjects) : IfcRelDecomposes(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingObject ? v5_RelatingObject->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_RelatedObjects)->generalize());; populate_derived(); }

// Function implementations for IfcRelPositions
::Ifc4x3_rc4::IfcPositioningElement* Ifc4x3_rc4::IfcRelPositions::RelatingPositioningElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcPositioningElement>(true); }
void Ifc4x3_rc4::IfcRelPositions::setRelatingPositioningElement(::Ifc4x3_rc4::IfcPositioningElement* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
aggregate_of< ::Ifc4x3_rc4::IfcProduct >::ptr Ifc4x3_rc4::IfcRelPositions::RelatedProducts() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcProduct >(); }
void Ifc4x3_rc4::IfcRelPositions::setRelatedProducts(aggregate_of< ::Ifc4x3_rc4::IfcProduct >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelPositions::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[945]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelPositions::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[945]); }
Ifc4x3_rc4::IfcRelPositions::IfcRelPositions(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelPositions::IfcRelPositions(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcPositioningElement* v5_RelatingPositioningElement, aggregate_of< ::Ifc4x3_rc4::IfcProduct >::ptr v6_RelatedProducts) : IfcRelConnects(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingPositioningElement ? v5_RelatingPositioningElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_RelatedProducts)->generalize());; populate_derived(); }

// Function implementations for IfcRelProjectsElement
::Ifc4x3_rc4::IfcElement* Ifc4x3_rc4::IfcRelProjectsElement::RelatingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcElement>(true); }
void Ifc4x3_rc4::IfcRelProjectsElement::setRelatingElement(::Ifc4x3_rc4::IfcElement* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcFeatureElementAddition* Ifc4x3_rc4::IfcRelProjectsElement::RelatedFeatureElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcFeatureElementAddition>(true); }
void Ifc4x3_rc4::IfcRelProjectsElement::setRelatedFeatureElement(::Ifc4x3_rc4::IfcFeatureElementAddition* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelProjectsElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[946]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelProjectsElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[946]); }
Ifc4x3_rc4::IfcRelProjectsElement::IfcRelProjectsElement(IfcEntityInstanceData&& e) : IfcRelDecomposes(std::move(e)) { }
Ifc4x3_rc4::IfcRelProjectsElement::IfcRelProjectsElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcElement* v5_RelatingElement, ::Ifc4x3_rc4::IfcFeatureElementAddition* v6_RelatedFeatureElement) : IfcRelDecomposes(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingElement ? v5_RelatingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedFeatureElement ? v6_RelatedFeatureElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelReferencedInSpatialStructure
aggregate_of< ::Ifc4x3_rc4::IfcSpatialReferenceSelect >::ptr Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::RelatedElements() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(4); return es->as< ::Ifc4x3_rc4::IfcSpatialReferenceSelect >(); }
void Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::setRelatedElements(aggregate_of< ::Ifc4x3_rc4::IfcSpatialReferenceSelect >::ptr v) { set_attribute_value(4, (v)->generalize());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcSpatialElement* Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::RelatingStructure() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcSpatialElement>(true); }
void Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::setRelatingStructure(::Ifc4x3_rc4::IfcSpatialElement* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[947]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[947]); }
Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::IfcRelReferencedInSpatialStructure(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::IfcRelReferencedInSpatialStructure(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, aggregate_of< ::Ifc4x3_rc4::IfcSpatialReferenceSelect >::ptr v5_RelatedElements, ::Ifc4x3_rc4::IfcSpatialElement* v6_RelatingStructure) : IfcRelConnects(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (v5_RelatedElements)->generalize());set_attribute_value(5, v6_RelatingStructure ? v6_RelatingStructure->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelSequence
::Ifc4x3_rc4::IfcProcess* Ifc4x3_rc4::IfcRelSequence::RelatingProcess() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcProcess>(true); }
void Ifc4x3_rc4::IfcRelSequence::setRelatingProcess(::Ifc4x3_rc4::IfcProcess* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcProcess* Ifc4x3_rc4::IfcRelSequence::RelatedProcess() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcProcess>(true); }
void Ifc4x3_rc4::IfcRelSequence::setRelatedProcess(::Ifc4x3_rc4::IfcProcess* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcLagTime* Ifc4x3_rc4::IfcRelSequence::TimeLag() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcLagTime>(true); }
void Ifc4x3_rc4::IfcRelSequence::setTimeLag(::Ifc4x3_rc4::IfcLagTime* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
boost::optional< ::Ifc4x3_rc4::IfcSequenceEnum::Value > Ifc4x3_rc4::IfcRelSequence::SequenceType() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSequenceEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcRelSequence::setSequenceType(boost::optional< ::Ifc4x3_rc4::IfcSequenceEnum::Value > v) { if (v) {set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcSequenceEnum::Class(), (size_t) *v));} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcRelSequence::UserDefinedSequenceType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcRelSequence::setUserDefinedSequenceType(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRelSequence::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[948]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelSequence::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[948]); }
Ifc4x3_rc4::IfcRelSequence::IfcRelSequence(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelSequence::IfcRelSequence(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcProcess* v5_RelatingProcess, ::Ifc4x3_rc4::IfcProcess* v6_RelatedProcess, ::Ifc4x3_rc4::IfcLagTime* v7_TimeLag, boost::optional< ::Ifc4x3_rc4::IfcSequenceEnum::Value > v8_SequenceType, boost::optional< std::string > v9_UserDefinedSequenceType) : IfcRelConnects(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingProcess ? v5_RelatingProcess->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedProcess ? v6_RelatedProcess->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_TimeLag ? v7_TimeLag->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_SequenceType) {set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcSequenceEnum::Class(),(size_t)*v8_SequenceType))); } if (v9_UserDefinedSequenceType) {set_attribute_value(8, (*v9_UserDefinedSequenceType)); }; populate_derived(); }

// Function implementations for IfcRelServicesBuildings
::Ifc4x3_rc4::IfcSystem* Ifc4x3_rc4::IfcRelServicesBuildings::RelatingSystem() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcSystem>(true); }
void Ifc4x3_rc4::IfcRelServicesBuildings::setRelatingSystem(::Ifc4x3_rc4::IfcSystem* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
aggregate_of< ::Ifc4x3_rc4::IfcSpatialElement >::ptr Ifc4x3_rc4::IfcRelServicesBuildings::RelatedBuildings() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcSpatialElement >(); }
void Ifc4x3_rc4::IfcRelServicesBuildings::setRelatedBuildings(aggregate_of< ::Ifc4x3_rc4::IfcSpatialElement >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelServicesBuildings::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[949]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelServicesBuildings::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[949]); }
Ifc4x3_rc4::IfcRelServicesBuildings::IfcRelServicesBuildings(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelServicesBuildings::IfcRelServicesBuildings(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcSystem* v5_RelatingSystem, aggregate_of< ::Ifc4x3_rc4::IfcSpatialElement >::ptr v6_RelatedBuildings) : IfcRelConnects(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingSystem ? v5_RelatingSystem->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_RelatedBuildings)->generalize());; populate_derived(); }

// Function implementations for IfcRelSpaceBoundary
::Ifc4x3_rc4::IfcSpaceBoundarySelect* Ifc4x3_rc4::IfcRelSpaceBoundary::RelatingSpace() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcSpaceBoundarySelect>(true); }
void Ifc4x3_rc4::IfcRelSpaceBoundary::setRelatingSpace(::Ifc4x3_rc4::IfcSpaceBoundarySelect* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcElement* Ifc4x3_rc4::IfcRelSpaceBoundary::RelatedBuildingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcElement>(true); }
void Ifc4x3_rc4::IfcRelSpaceBoundary::setRelatedBuildingElement(::Ifc4x3_rc4::IfcElement* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcConnectionGeometry* Ifc4x3_rc4::IfcRelSpaceBoundary::ConnectionGeometry() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcConnectionGeometry>(true); }
void Ifc4x3_rc4::IfcRelSpaceBoundary::setConnectionGeometry(::Ifc4x3_rc4::IfcConnectionGeometry* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
::Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Value Ifc4x3_rc4::IfcRelSpaceBoundary::PhysicalOrVirtualBoundary() const {  return ::Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcRelSpaceBoundary::setPhysicalOrVirtualBoundary(::Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Value v) { set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(7); }
::Ifc4x3_rc4::IfcInternalOrExternalEnum::Value Ifc4x3_rc4::IfcRelSpaceBoundary::InternalOrExternalBoundary() const {  return ::Ifc4x3_rc4::IfcInternalOrExternalEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcRelSpaceBoundary::setInternalOrExternalBoundary(::Ifc4x3_rc4::IfcInternalOrExternalEnum::Value v) { set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcInternalOrExternalEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelSpaceBoundary::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[950]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelSpaceBoundary::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[950]); }
Ifc4x3_rc4::IfcRelSpaceBoundary::IfcRelSpaceBoundary(IfcEntityInstanceData&& e) : IfcRelConnects(std::move(e)) { }
Ifc4x3_rc4::IfcRelSpaceBoundary::IfcRelSpaceBoundary(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcSpaceBoundarySelect* v5_RelatingSpace, ::Ifc4x3_rc4::IfcElement* v6_RelatedBuildingElement, ::Ifc4x3_rc4::IfcConnectionGeometry* v7_ConnectionGeometry, ::Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Value v8_PhysicalOrVirtualBoundary, ::Ifc4x3_rc4::IfcInternalOrExternalEnum::Value v9_InternalOrExternalBoundary) : IfcRelConnects(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingSpace ? v5_RelatingSpace->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedBuildingElement ? v6_RelatedBuildingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_ConnectionGeometry ? v7_ConnectionGeometry->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Class(),(size_t)v8_PhysicalOrVirtualBoundary)));set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcInternalOrExternalEnum::Class(),(size_t)v9_InternalOrExternalBoundary)));; populate_derived(); }

// Function implementations for IfcRelSpaceBoundary1stLevel
::Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel* Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel::ParentBoundary() const { if(data_.get_attribute_value(9).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel>(true); }
void Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel::setParentBoundary(::Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }

::Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel::list::ptr Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel::InnerBoundaries() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[951], 9)->as<IfcRelSpaceBoundary1stLevel>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[951]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[951]); }
Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel::IfcRelSpaceBoundary1stLevel(IfcEntityInstanceData&& e) : IfcRelSpaceBoundary(std::move(e)) { }
Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel::IfcRelSpaceBoundary1stLevel(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcSpaceBoundarySelect* v5_RelatingSpace, ::Ifc4x3_rc4::IfcElement* v6_RelatedBuildingElement, ::Ifc4x3_rc4::IfcConnectionGeometry* v7_ConnectionGeometry, ::Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Value v8_PhysicalOrVirtualBoundary, ::Ifc4x3_rc4::IfcInternalOrExternalEnum::Value v9_InternalOrExternalBoundary, ::Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel* v10_ParentBoundary) : IfcRelSpaceBoundary(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingSpace ? v5_RelatingSpace->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedBuildingElement ? v6_RelatedBuildingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_ConnectionGeometry ? v7_ConnectionGeometry->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Class(),(size_t)v8_PhysicalOrVirtualBoundary)));set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcInternalOrExternalEnum::Class(),(size_t)v9_InternalOrExternalBoundary)));set_attribute_value(9, v10_ParentBoundary ? v10_ParentBoundary->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelSpaceBoundary2ndLevel
::Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel* Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel::CorrespondingBoundary() const { if(data_.get_attribute_value(10).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(10)))->as<::Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel>(true); }
void Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel::setCorrespondingBoundary(::Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel* v) { set_attribute_value(10, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(10); }

::Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel::list::ptr Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel::Corresponds() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[952], 10)->as<IfcRelSpaceBoundary2ndLevel>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[952]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[952]); }
Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel::IfcRelSpaceBoundary2ndLevel(IfcEntityInstanceData&& e) : IfcRelSpaceBoundary1stLevel(std::move(e)) { }
Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel::IfcRelSpaceBoundary2ndLevel(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcSpaceBoundarySelect* v5_RelatingSpace, ::Ifc4x3_rc4::IfcElement* v6_RelatedBuildingElement, ::Ifc4x3_rc4::IfcConnectionGeometry* v7_ConnectionGeometry, ::Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Value v8_PhysicalOrVirtualBoundary, ::Ifc4x3_rc4::IfcInternalOrExternalEnum::Value v9_InternalOrExternalBoundary, ::Ifc4x3_rc4::IfcRelSpaceBoundary1stLevel* v10_ParentBoundary, ::Ifc4x3_rc4::IfcRelSpaceBoundary2ndLevel* v11_CorrespondingBoundary) : IfcRelSpaceBoundary1stLevel(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingSpace ? v5_RelatingSpace->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedBuildingElement ? v6_RelatedBuildingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_ConnectionGeometry ? v7_ConnectionGeometry->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcPhysicalOrVirtualEnum::Class(),(size_t)v8_PhysicalOrVirtualBoundary)));set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcInternalOrExternalEnum::Class(),(size_t)v9_InternalOrExternalBoundary)));set_attribute_value(9, v10_ParentBoundary ? v10_ParentBoundary->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(10, v11_CorrespondingBoundary ? v11_CorrespondingBoundary->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelVoidsElement
::Ifc4x3_rc4::IfcElement* Ifc4x3_rc4::IfcRelVoidsElement::RelatingBuildingElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcElement>(true); }
void Ifc4x3_rc4::IfcRelVoidsElement::setRelatingBuildingElement(::Ifc4x3_rc4::IfcElement* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcFeatureElementSubtraction* Ifc4x3_rc4::IfcRelVoidsElement::RelatedOpeningElement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcFeatureElementSubtraction>(true); }
void Ifc4x3_rc4::IfcRelVoidsElement::setRelatedOpeningElement(::Ifc4x3_rc4::IfcFeatureElementSubtraction* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRelVoidsElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[953]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelVoidsElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[953]); }
Ifc4x3_rc4::IfcRelVoidsElement::IfcRelVoidsElement(IfcEntityInstanceData&& e) : IfcRelDecomposes(std::move(e)) { }
Ifc4x3_rc4::IfcRelVoidsElement::IfcRelVoidsElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcElement* v5_RelatingBuildingElement, ::Ifc4x3_rc4::IfcFeatureElementSubtraction* v6_RelatedOpeningElement) : IfcRelDecomposes(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, v5_RelatingBuildingElement ? v5_RelatingBuildingElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_RelatedOpeningElement ? v6_RelatedOpeningElement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRelationship


const IfcParse::entity& Ifc4x3_rc4::IfcRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[921]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[921]); }
Ifc4x3_rc4::IfcRelationship::IfcRelationship(IfcEntityInstanceData&& e) : IfcRoot(std::move(e)) { }
Ifc4x3_rc4::IfcRelationship::IfcRelationship(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcRoot(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcReparametrisedCompositeCurveSegment
double Ifc4x3_rc4::IfcReparametrisedCompositeCurveSegment::ParamLength() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcReparametrisedCompositeCurveSegment::setParamLength(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcReparametrisedCompositeCurveSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[954]); }
const IfcParse::entity& Ifc4x3_rc4::IfcReparametrisedCompositeCurveSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[954]); }
Ifc4x3_rc4::IfcReparametrisedCompositeCurveSegment::IfcReparametrisedCompositeCurveSegment(IfcEntityInstanceData&& e) : IfcCompositeCurveSegment(std::move(e)) { }
Ifc4x3_rc4::IfcReparametrisedCompositeCurveSegment::IfcReparametrisedCompositeCurveSegment(::Ifc4x3_rc4::IfcTransitionCode::Value v1_Transition, bool v2_SameSense, ::Ifc4x3_rc4::IfcCurve* v3_ParentCurve, double v4_ParamLength) : IfcCompositeCurveSegment(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcTransitionCode::Class(),(size_t)v1_Transition)));set_attribute_value(1, (v2_SameSense));set_attribute_value(2, v3_ParentCurve ? v3_ParentCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_ParamLength));; populate_derived(); }

// Function implementations for IfcRepresentation
::Ifc4x3_rc4::IfcRepresentationContext* Ifc4x3_rc4::IfcRepresentation::ContextOfItems() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcRepresentationContext>(true); }
void Ifc4x3_rc4::IfcRepresentation::setContextOfItems(::Ifc4x3_rc4::IfcRepresentationContext* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcRepresentation::RepresentationIdentifier() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcRepresentation::setRepresentationIdentifier(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcRepresentation::RepresentationType() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcRepresentation::setRepresentationType(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
aggregate_of< ::Ifc4x3_rc4::IfcRepresentationItem >::ptr Ifc4x3_rc4::IfcRepresentation::Items() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcRepresentationItem >(); }
void Ifc4x3_rc4::IfcRepresentation::setItems(aggregate_of< ::Ifc4x3_rc4::IfcRepresentationItem >::ptr v) { set_attribute_value(3, (v)->generalize());if constexpr (false)unset_attribute_value(3); }

::Ifc4x3_rc4::IfcRepresentationMap::list::ptr Ifc4x3_rc4::IfcRepresentation::RepresentationMap() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[958], 1)->as<IfcRepresentationMap>(); }
::Ifc4x3_rc4::IfcPresentationLayerAssignment::list::ptr Ifc4x3_rc4::IfcRepresentation::LayerAssignments() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[797], 2)->as<IfcPresentationLayerAssignment>(); }
::Ifc4x3_rc4::IfcProductRepresentation::list::ptr Ifc4x3_rc4::IfcRepresentation::OfProductRepresentation() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[808], 2)->as<IfcProductRepresentation>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcRepresentation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[955]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRepresentation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[955]); }
Ifc4x3_rc4::IfcRepresentation::IfcRepresentation(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcRepresentation::IfcRepresentation(::Ifc4x3_rc4::IfcRepresentationContext* v1_ContextOfItems, boost::optional< std::string > v2_RepresentationIdentifier, boost::optional< std::string > v3_RepresentationType, aggregate_of< ::Ifc4x3_rc4::IfcRepresentationItem >::ptr v4_Items) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_ContextOfItems ? v1_ContextOfItems->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_RepresentationIdentifier) {set_attribute_value(1, (*v2_RepresentationIdentifier)); } if (v3_RepresentationType) {set_attribute_value(2, (*v3_RepresentationType)); }set_attribute_value(3, (v4_Items)->generalize());; populate_derived(); }

// Function implementations for IfcRepresentationContext
boost::optional< std::string > Ifc4x3_rc4::IfcRepresentationContext::ContextIdentifier() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcRepresentationContext::setContextIdentifier(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcRepresentationContext::ContextType() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcRepresentationContext::setContextType(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }

::Ifc4x3_rc4::IfcRepresentation::list::ptr Ifc4x3_rc4::IfcRepresentationContext::RepresentationsInContext() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[955], 0)->as<IfcRepresentation>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcRepresentationContext::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[956]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRepresentationContext::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[956]); }
Ifc4x3_rc4::IfcRepresentationContext::IfcRepresentationContext(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcRepresentationContext::IfcRepresentationContext(boost::optional< std::string > v1_ContextIdentifier, boost::optional< std::string > v2_ContextType) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) {  if (v1_ContextIdentifier) {set_attribute_value(0, (*v1_ContextIdentifier)); } if (v2_ContextType) {set_attribute_value(1, (*v2_ContextType)); }; populate_derived(); }

// Function implementations for IfcRepresentationItem

::Ifc4x3_rc4::IfcPresentationLayerAssignment::list::ptr Ifc4x3_rc4::IfcRepresentationItem::LayerAssignment() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[797], 2)->as<IfcPresentationLayerAssignment>(); }
::Ifc4x3_rc4::IfcStyledItem::list::ptr Ifc4x3_rc4::IfcRepresentationItem::StyledByItem() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1122], 0)->as<IfcStyledItem>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcRepresentationItem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[957]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRepresentationItem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[957]); }
Ifc4x3_rc4::IfcRepresentationItem::IfcRepresentationItem(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcRepresentationItem::IfcRepresentationItem() : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcRepresentationMap
::Ifc4x3_rc4::IfcAxis2Placement* Ifc4x3_rc4::IfcRepresentationMap::MappingOrigin() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcAxis2Placement>(true); }
void Ifc4x3_rc4::IfcRepresentationMap::setMappingOrigin(::Ifc4x3_rc4::IfcAxis2Placement* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcRepresentation* Ifc4x3_rc4::IfcRepresentationMap::MappedRepresentation() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcRepresentation>(true); }
void Ifc4x3_rc4::IfcRepresentationMap::setMappedRepresentation(::Ifc4x3_rc4::IfcRepresentation* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }

::Ifc4x3_rc4::IfcShapeAspect::list::ptr Ifc4x3_rc4::IfcRepresentationMap::HasShapeAspects() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1009], 4)->as<IfcShapeAspect>(); }
::Ifc4x3_rc4::IfcMappedItem::list::ptr Ifc4x3_rc4::IfcRepresentationMap::MapUsage() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[630], 0)->as<IfcMappedItem>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcRepresentationMap::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[958]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRepresentationMap::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[958]); }
Ifc4x3_rc4::IfcRepresentationMap::IfcRepresentationMap(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcRepresentationMap::IfcRepresentationMap(::Ifc4x3_rc4::IfcAxis2Placement* v1_MappingOrigin, ::Ifc4x3_rc4::IfcRepresentation* v2_MappedRepresentation) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_MappingOrigin ? v1_MappingOrigin->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_MappedRepresentation ? v2_MappedRepresentation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcResource
boost::optional< std::string > Ifc4x3_rc4::IfcResource::Identification() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcResource::setIdentification(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResource::LongDescription() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcResource::setLongDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }

::Ifc4x3_rc4::IfcRelAssignsToResource::list::ptr Ifc4x3_rc4::IfcResource::ResourceOf() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[912], 6)->as<IfcRelAssignsToResource>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcResource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[959]); }
const IfcParse::entity& Ifc4x3_rc4::IfcResource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[959]); }
Ifc4x3_rc4::IfcResource::IfcResource(IfcEntityInstanceData&& e) : IfcObject(std::move(e)) { }
Ifc4x3_rc4::IfcResource::IfcResource(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription) : IfcObject(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); }; populate_derived(); }

// Function implementations for IfcResourceApprovalRelationship
aggregate_of< ::Ifc4x3_rc4::IfcResourceObjectSelect >::ptr Ifc4x3_rc4::IfcResourceApprovalRelationship::RelatedResourceObjects() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcResourceObjectSelect >(); }
void Ifc4x3_rc4::IfcResourceApprovalRelationship::setRelatedResourceObjects(aggregate_of< ::Ifc4x3_rc4::IfcResourceObjectSelect >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcApproval* Ifc4x3_rc4::IfcResourceApprovalRelationship::RelatingApproval() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcApproval>(true); }
void Ifc4x3_rc4::IfcResourceApprovalRelationship::setRelatingApproval(::Ifc4x3_rc4::IfcApproval* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcResourceApprovalRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[960]); }
const IfcParse::entity& Ifc4x3_rc4::IfcResourceApprovalRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[960]); }
Ifc4x3_rc4::IfcResourceApprovalRelationship::IfcResourceApprovalRelationship(IfcEntityInstanceData&& e) : IfcResourceLevelRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcResourceApprovalRelationship::IfcResourceApprovalRelationship(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, aggregate_of< ::Ifc4x3_rc4::IfcResourceObjectSelect >::ptr v3_RelatedResourceObjects, ::Ifc4x3_rc4::IfcApproval* v4_RelatingApproval) : IfcResourceLevelRelationship(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_RelatedResourceObjects)->generalize());set_attribute_value(3, v4_RelatingApproval ? v4_RelatingApproval->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcResourceConstraintRelationship
::Ifc4x3_rc4::IfcConstraint* Ifc4x3_rc4::IfcResourceConstraintRelationship::RelatingConstraint() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcConstraint>(true); }
void Ifc4x3_rc4::IfcResourceConstraintRelationship::setRelatingConstraint(::Ifc4x3_rc4::IfcConstraint* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
aggregate_of< ::Ifc4x3_rc4::IfcResourceObjectSelect >::ptr Ifc4x3_rc4::IfcResourceConstraintRelationship::RelatedResourceObjects() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(3); return es->as< ::Ifc4x3_rc4::IfcResourceObjectSelect >(); }
void Ifc4x3_rc4::IfcResourceConstraintRelationship::setRelatedResourceObjects(aggregate_of< ::Ifc4x3_rc4::IfcResourceObjectSelect >::ptr v) { set_attribute_value(3, (v)->generalize());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcResourceConstraintRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[961]); }
const IfcParse::entity& Ifc4x3_rc4::IfcResourceConstraintRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[961]); }
Ifc4x3_rc4::IfcResourceConstraintRelationship::IfcResourceConstraintRelationship(IfcEntityInstanceData&& e) : IfcResourceLevelRelationship(std::move(e)) { }
Ifc4x3_rc4::IfcResourceConstraintRelationship::IfcResourceConstraintRelationship(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description, ::Ifc4x3_rc4::IfcConstraint* v3_RelatingConstraint, aggregate_of< ::Ifc4x3_rc4::IfcResourceObjectSelect >::ptr v4_RelatedResourceObjects) : IfcResourceLevelRelationship(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, v3_RelatingConstraint ? v3_RelatingConstraint->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_RelatedResourceObjects)->generalize());; populate_derived(); }

// Function implementations for IfcResourceLevelRelationship
boost::optional< std::string > Ifc4x3_rc4::IfcResourceLevelRelationship::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcResourceLevelRelationship::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResourceLevelRelationship::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcResourceLevelRelationship::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }


const IfcParse::entity& Ifc4x3_rc4::IfcResourceLevelRelationship::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[962]); }
const IfcParse::entity& Ifc4x3_rc4::IfcResourceLevelRelationship::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[962]); }
Ifc4x3_rc4::IfcResourceLevelRelationship::IfcResourceLevelRelationship(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcResourceLevelRelationship::IfcResourceLevelRelationship(boost::optional< std::string > v1_Name, boost::optional< std::string > v2_Description) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); }; populate_derived(); }

// Function implementations for IfcResourceTime
boost::optional< std::string > Ifc4x3_rc4::IfcResourceTime::ScheduleWork() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcResourceTime::setScheduleWork(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< double > Ifc4x3_rc4::IfcResourceTime::ScheduleUsage() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcResourceTime::setScheduleUsage(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResourceTime::ScheduleStart() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcResourceTime::setScheduleStart(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResourceTime::ScheduleFinish() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcResourceTime::setScheduleFinish(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResourceTime::ScheduleContour() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcResourceTime::setScheduleContour(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResourceTime::LevelingDelay() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcResourceTime::setLevelingDelay(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< bool > Ifc4x3_rc4::IfcResourceTime::IsOverAllocated() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } bool v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcResourceTime::setIsOverAllocated(boost::optional< bool > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResourceTime::StatusTime() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcResourceTime::setStatusTime(boost::optional< std::string > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResourceTime::ActualWork() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcResourceTime::setActualWork(boost::optional< std::string > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< double > Ifc4x3_rc4::IfcResourceTime::ActualUsage() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } double v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcResourceTime::setActualUsage(boost::optional< double > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResourceTime::ActualStart() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(13); return v; }
void Ifc4x3_rc4::IfcResourceTime::setActualStart(boost::optional< std::string > v) { if (v) {set_attribute_value(13, *v);} else {unset_attribute_value(13);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResourceTime::ActualFinish() const { if(data_.get_attribute_value(14).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(14); return v; }
void Ifc4x3_rc4::IfcResourceTime::setActualFinish(boost::optional< std::string > v) { if (v) {set_attribute_value(14, *v);} else {unset_attribute_value(14);} }
boost::optional< std::string > Ifc4x3_rc4::IfcResourceTime::RemainingWork() const { if(data_.get_attribute_value(15).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(15); return v; }
void Ifc4x3_rc4::IfcResourceTime::setRemainingWork(boost::optional< std::string > v) { if (v) {set_attribute_value(15, *v);} else {unset_attribute_value(15);} }
boost::optional< double > Ifc4x3_rc4::IfcResourceTime::RemainingUsage() const { if(data_.get_attribute_value(16).isNull()) { return boost::none; } double v = data_.get_attribute_value(16); return v; }
void Ifc4x3_rc4::IfcResourceTime::setRemainingUsage(boost::optional< double > v) { if (v) {set_attribute_value(16, *v);} else {unset_attribute_value(16);} }
boost::optional< double > Ifc4x3_rc4::IfcResourceTime::Completion() const { if(data_.get_attribute_value(17).isNull()) { return boost::none; } double v = data_.get_attribute_value(17); return v; }
void Ifc4x3_rc4::IfcResourceTime::setCompletion(boost::optional< double > v) { if (v) {set_attribute_value(17, *v);} else {unset_attribute_value(17);} }


const IfcParse::entity& Ifc4x3_rc4::IfcResourceTime::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[965]); }
const IfcParse::entity& Ifc4x3_rc4::IfcResourceTime::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[965]); }
Ifc4x3_rc4::IfcResourceTime::IfcResourceTime(IfcEntityInstanceData&& e) : IfcSchedulingTime(std::move(e)) { }
Ifc4x3_rc4::IfcResourceTime::IfcResourceTime(boost::optional< std::string > v1_Name, boost::optional< ::Ifc4x3_rc4::IfcDataOriginEnum::Value > v2_DataOrigin, boost::optional< std::string > v3_UserDefinedDataOrigin, boost::optional< std::string > v4_ScheduleWork, boost::optional< double > v5_ScheduleUsage, boost::optional< std::string > v6_ScheduleStart, boost::optional< std::string > v7_ScheduleFinish, boost::optional< std::string > v8_ScheduleContour, boost::optional< std::string > v9_LevelingDelay, boost::optional< bool > v10_IsOverAllocated, boost::optional< std::string > v11_StatusTime, boost::optional< std::string > v12_ActualWork, boost::optional< double > v13_ActualUsage, boost::optional< std::string > v14_ActualStart, boost::optional< std::string > v15_ActualFinish, boost::optional< std::string > v16_RemainingWork, boost::optional< double > v17_RemainingUsage, boost::optional< double > v18_Completion) : IfcSchedulingTime(IfcEntityInstanceData(storage_t(18))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_DataOrigin) {set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(),(size_t)*v2_DataOrigin))); } if (v3_UserDefinedDataOrigin) {set_attribute_value(2, (*v3_UserDefinedDataOrigin)); } if (v4_ScheduleWork) {set_attribute_value(3, (*v4_ScheduleWork)); } if (v5_ScheduleUsage) {set_attribute_value(4, (*v5_ScheduleUsage)); } if (v6_ScheduleStart) {set_attribute_value(5, (*v6_ScheduleStart)); } if (v7_ScheduleFinish) {set_attribute_value(6, (*v7_ScheduleFinish)); } if (v8_ScheduleContour) {set_attribute_value(7, (*v8_ScheduleContour)); } if (v9_LevelingDelay) {set_attribute_value(8, (*v9_LevelingDelay)); } if (v10_IsOverAllocated) {set_attribute_value(9, (*v10_IsOverAllocated)); } if (v11_StatusTime) {set_attribute_value(10, (*v11_StatusTime)); } if (v12_ActualWork) {set_attribute_value(11, (*v12_ActualWork)); } if (v13_ActualUsage) {set_attribute_value(12, (*v13_ActualUsage)); } if (v14_ActualStart) {set_attribute_value(13, (*v14_ActualStart)); } if (v15_ActualFinish) {set_attribute_value(14, (*v15_ActualFinish)); } if (v16_RemainingWork) {set_attribute_value(15, (*v16_RemainingWork)); } if (v17_RemainingUsage) {set_attribute_value(16, (*v17_RemainingUsage)); } if (v18_Completion) {set_attribute_value(17, (*v18_Completion)); }; populate_derived(); }

// Function implementations for IfcRevolvedAreaSolid
::Ifc4x3_rc4::IfcAxis1Placement* Ifc4x3_rc4::IfcRevolvedAreaSolid::Axis() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcAxis1Placement>(true); }
void Ifc4x3_rc4::IfcRevolvedAreaSolid::setAxis(::Ifc4x3_rc4::IfcAxis1Placement* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcRevolvedAreaSolid::Angle() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcRevolvedAreaSolid::setAngle(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcRevolvedAreaSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[966]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRevolvedAreaSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[966]); }
Ifc4x3_rc4::IfcRevolvedAreaSolid::IfcRevolvedAreaSolid(IfcEntityInstanceData&& e) : IfcSweptAreaSolid(std::move(e)) { }
Ifc4x3_rc4::IfcRevolvedAreaSolid::IfcRevolvedAreaSolid(::Ifc4x3_rc4::IfcProfileDef* v1_SweptArea, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position, ::Ifc4x3_rc4::IfcAxis1Placement* v3_Axis, double v4_Angle) : IfcSweptAreaSolid(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_SweptArea ? v1_SweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_Axis ? v3_Axis->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Angle));; populate_derived(); }

// Function implementations for IfcRevolvedAreaSolidTapered
::Ifc4x3_rc4::IfcProfileDef* Ifc4x3_rc4::IfcRevolvedAreaSolidTapered::EndSweptArea() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcProfileDef>(true); }
void Ifc4x3_rc4::IfcRevolvedAreaSolidTapered::setEndSweptArea(::Ifc4x3_rc4::IfcProfileDef* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcRevolvedAreaSolidTapered::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[967]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRevolvedAreaSolidTapered::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[967]); }
Ifc4x3_rc4::IfcRevolvedAreaSolidTapered::IfcRevolvedAreaSolidTapered(IfcEntityInstanceData&& e) : IfcRevolvedAreaSolid(std::move(e)) { }
Ifc4x3_rc4::IfcRevolvedAreaSolidTapered::IfcRevolvedAreaSolidTapered(::Ifc4x3_rc4::IfcProfileDef* v1_SweptArea, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position, ::Ifc4x3_rc4::IfcAxis1Placement* v3_Axis, double v4_Angle, ::Ifc4x3_rc4::IfcProfileDef* v5_EndSweptArea) : IfcRevolvedAreaSolid(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_SweptArea ? v1_SweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_Axis ? v3_Axis->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Angle));set_attribute_value(4, v5_EndSweptArea ? v5_EndSweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcRightCircularCone
double Ifc4x3_rc4::IfcRightCircularCone::Height() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcRightCircularCone::setHeight(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcRightCircularCone::BottomRadius() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcRightCircularCone::setBottomRadius(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcRightCircularCone::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[968]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRightCircularCone::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[968]); }
Ifc4x3_rc4::IfcRightCircularCone::IfcRightCircularCone(IfcEntityInstanceData&& e) : IfcCsgPrimitive3D(std::move(e)) { }
Ifc4x3_rc4::IfcRightCircularCone::IfcRightCircularCone(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position, double v2_Height, double v3_BottomRadius) : IfcCsgPrimitive3D(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Height));set_attribute_value(2, (v3_BottomRadius));; populate_derived(); }

// Function implementations for IfcRightCircularCylinder
double Ifc4x3_rc4::IfcRightCircularCylinder::Height() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcRightCircularCylinder::setHeight(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcRightCircularCylinder::Radius() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcRightCircularCylinder::setRadius(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcRightCircularCylinder::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[969]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRightCircularCylinder::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[969]); }
Ifc4x3_rc4::IfcRightCircularCylinder::IfcRightCircularCylinder(IfcEntityInstanceData&& e) : IfcCsgPrimitive3D(std::move(e)) { }
Ifc4x3_rc4::IfcRightCircularCylinder::IfcRightCircularCylinder(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position, double v2_Height, double v3_Radius) : IfcCsgPrimitive3D(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Height));set_attribute_value(2, (v3_Radius));; populate_derived(); }

// Function implementations for IfcRoad
boost::optional< ::Ifc4x3_rc4::IfcRoadTypeEnum::Value > Ifc4x3_rc4::IfcRoad::PredefinedType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcRoadTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcRoad::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcRoadTypeEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcRoadTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRoad::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[970]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRoad::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[970]); }
Ifc4x3_rc4::IfcRoad::IfcRoad(IfcEntityInstanceData&& e) : IfcFacility(std::move(e)) { }
Ifc4x3_rc4::IfcRoad::IfcRoad(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType, boost::optional< ::Ifc4x3_rc4::IfcRoadTypeEnum::Value > v10_PredefinedType) : IfcFacility(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); } if (v10_PredefinedType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcRoadTypeEnum::Class(),(size_t)*v10_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcRoof
boost::optional< ::Ifc4x3_rc4::IfcRoofTypeEnum::Value > Ifc4x3_rc4::IfcRoof::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcRoofTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcRoof::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcRoofTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcRoofTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRoof::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[974]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRoof::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[974]); }
Ifc4x3_rc4::IfcRoof::IfcRoof(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcRoof::IfcRoof(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcRoofTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcRoofTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcRoofType
::Ifc4x3_rc4::IfcRoofTypeEnum::Value Ifc4x3_rc4::IfcRoofType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcRoofTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcRoofType::setPredefinedType(::Ifc4x3_rc4::IfcRoofTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcRoofTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcRoofType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[975]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRoofType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[975]); }
Ifc4x3_rc4::IfcRoofType::IfcRoofType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcRoofType::IfcRoofType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcRoofTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcRoofTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcRoot
std::string Ifc4x3_rc4::IfcRoot::GlobalId() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcRoot::setGlobalId(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcOwnerHistory* Ifc4x3_rc4::IfcRoot::OwnerHistory() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcOwnerHistory>(true); }
void Ifc4x3_rc4::IfcRoot::setOwnerHistory(::Ifc4x3_rc4::IfcOwnerHistory* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
boost::optional< std::string > Ifc4x3_rc4::IfcRoot::Name() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcRoot::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< std::string > Ifc4x3_rc4::IfcRoot::Description() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcRoot::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcRoot::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[977]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRoot::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[977]); }
Ifc4x3_rc4::IfcRoot::IfcRoot(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcRoot::IfcRoot(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }; populate_derived(); }

// Function implementations for IfcRoundedRectangleProfileDef
double Ifc4x3_rc4::IfcRoundedRectangleProfileDef::RoundingRadius() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcRoundedRectangleProfileDef::setRoundingRadius(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcRoundedRectangleProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[982]); }
const IfcParse::entity& Ifc4x3_rc4::IfcRoundedRectangleProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[982]); }
Ifc4x3_rc4::IfcRoundedRectangleProfileDef::IfcRoundedRectangleProfileDef(IfcEntityInstanceData&& e) : IfcRectangleProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcRoundedRectangleProfileDef::IfcRoundedRectangleProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_XDim, double v5_YDim, double v6_RoundingRadius) : IfcRectangleProfileDef(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_XDim));set_attribute_value(4, (v5_YDim));set_attribute_value(5, (v6_RoundingRadius));; populate_derived(); }

// Function implementations for IfcSIUnit
boost::optional< ::Ifc4x3_rc4::IfcSIPrefix::Value > Ifc4x3_rc4::IfcSIUnit::Prefix() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSIPrefix::FromString(data_.get_attribute_value(2)); }
void Ifc4x3_rc4::IfcSIUnit::setPrefix(boost::optional< ::Ifc4x3_rc4::IfcSIPrefix::Value > v) { if (v) {set_attribute_value(2, EnumerationReference(&::Ifc4x3_rc4::IfcSIPrefix::Class(), (size_t) *v));} else {unset_attribute_value(2);} }
::Ifc4x3_rc4::IfcSIUnitName::Value Ifc4x3_rc4::IfcSIUnit::Name() const {  return ::Ifc4x3_rc4::IfcSIUnitName::FromString(data_.get_attribute_value(3)); }
void Ifc4x3_rc4::IfcSIUnit::setName(::Ifc4x3_rc4::IfcSIUnitName::Value v) { set_attribute_value(3, EnumerationReference(&::Ifc4x3_rc4::IfcSIUnitName::Class(), (size_t) v));if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcSIUnit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1028]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSIUnit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1028]); }
Ifc4x3_rc4::IfcSIUnit::IfcSIUnit(IfcEntityInstanceData&& e) : IfcNamedUnit(std::move(e)) { }
Ifc4x3_rc4::IfcSIUnit::IfcSIUnit(::Ifc4x3_rc4::IfcUnitEnum::Value v2_UnitType, boost::optional< ::Ifc4x3_rc4::IfcSIPrefix::Value > v3_Prefix, ::Ifc4x3_rc4::IfcSIUnitName::Value v4_Name) : IfcNamedUnit(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcUnitEnum::Class(),(size_t)v2_UnitType))); if (v3_Prefix) {set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcSIPrefix::Class(),(size_t)*v3_Prefix))); }set_attribute_value(3, (EnumerationReference(&::Ifc4x3_rc4::IfcSIUnitName::Class(),(size_t)v4_Name)));; populate_derived(); }

// Function implementations for IfcSanitaryTerminal
boost::optional< ::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Value > Ifc4x3_rc4::IfcSanitaryTerminal::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSanitaryTerminal::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSanitaryTerminal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[983]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSanitaryTerminal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[983]); }
Ifc4x3_rc4::IfcSanitaryTerminal::IfcSanitaryTerminal(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcSanitaryTerminal::IfcSanitaryTerminal(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSanitaryTerminalType
::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Value Ifc4x3_rc4::IfcSanitaryTerminalType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSanitaryTerminalType::setPredefinedType(::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcSanitaryTerminalType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[984]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSanitaryTerminalType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[984]); }
Ifc4x3_rc4::IfcSanitaryTerminalType::IfcSanitaryTerminalType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcSanitaryTerminalType::IfcSanitaryTerminalType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSanitaryTerminalTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcSchedulingTime
boost::optional< std::string > Ifc4x3_rc4::IfcSchedulingTime::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcSchedulingTime::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< ::Ifc4x3_rc4::IfcDataOriginEnum::Value > Ifc4x3_rc4::IfcSchedulingTime::DataOrigin() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcDataOriginEnum::FromString(data_.get_attribute_value(1)); }
void Ifc4x3_rc4::IfcSchedulingTime::setDataOrigin(boost::optional< ::Ifc4x3_rc4::IfcDataOriginEnum::Value > v) { if (v) {set_attribute_value(1, EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(), (size_t) *v));} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcSchedulingTime::UserDefinedDataOrigin() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcSchedulingTime::setUserDefinedDataOrigin(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSchedulingTime::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[986]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSchedulingTime::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[986]); }
Ifc4x3_rc4::IfcSchedulingTime::IfcSchedulingTime(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcSchedulingTime::IfcSchedulingTime(boost::optional< std::string > v1_Name, boost::optional< ::Ifc4x3_rc4::IfcDataOriginEnum::Value > v2_DataOrigin, boost::optional< std::string > v3_UserDefinedDataOrigin) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(3))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_DataOrigin) {set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(),(size_t)*v2_DataOrigin))); } if (v3_UserDefinedDataOrigin) {set_attribute_value(2, (*v3_UserDefinedDataOrigin)); }; populate_derived(); }

// Function implementations for IfcSeamCurve


const IfcParse::entity& Ifc4x3_rc4::IfcSeamCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[987]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSeamCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[987]); }
Ifc4x3_rc4::IfcSeamCurve::IfcSeamCurve(IfcEntityInstanceData&& e) : IfcSurfaceCurve(std::move(e)) { }
Ifc4x3_rc4::IfcSeamCurve::IfcSeamCurve(::Ifc4x3_rc4::IfcCurve* v1_Curve3D, aggregate_of< ::Ifc4x3_rc4::IfcPcurve >::ptr v2_AssociatedGeometry, ::Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Value v3_MasterRepresentation) : IfcSurfaceCurve(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Curve3D ? v1_Curve3D->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_AssociatedGeometry)->generalize());set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Class(),(size_t)v3_MasterRepresentation)));; populate_derived(); }

// Function implementations for IfcSecondOrderPolynomialSpiral
double Ifc4x3_rc4::IfcSecondOrderPolynomialSpiral::QuadraticTerm() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSecondOrderPolynomialSpiral::setQuadraticTerm(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< double > Ifc4x3_rc4::IfcSecondOrderPolynomialSpiral::LinearTerm() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcSecondOrderPolynomialSpiral::setLinearTerm(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcSecondOrderPolynomialSpiral::ConstantTerm() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcSecondOrderPolynomialSpiral::setConstantTerm(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSecondOrderPolynomialSpiral::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[988]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSecondOrderPolynomialSpiral::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[988]); }
Ifc4x3_rc4::IfcSecondOrderPolynomialSpiral::IfcSecondOrderPolynomialSpiral(IfcEntityInstanceData&& e) : IfcSpiral(std::move(e)) { }
Ifc4x3_rc4::IfcSecondOrderPolynomialSpiral::IfcSecondOrderPolynomialSpiral(::Ifc4x3_rc4::IfcAxis2Placement* v1_Position, double v2_QuadraticTerm, boost::optional< double > v3_LinearTerm, boost::optional< double > v4_ConstantTerm) : IfcSpiral(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_QuadraticTerm)); if (v3_LinearTerm) {set_attribute_value(2, (*v3_LinearTerm)); } if (v4_ConstantTerm) {set_attribute_value(3, (*v4_ConstantTerm)); }; populate_derived(); }

// Function implementations for IfcSectionProperties
::Ifc4x3_rc4::IfcSectionTypeEnum::Value Ifc4x3_rc4::IfcSectionProperties::SectionType() const {  return ::Ifc4x3_rc4::IfcSectionTypeEnum::FromString(data_.get_attribute_value(0)); }
void Ifc4x3_rc4::IfcSectionProperties::setSectionType(::Ifc4x3_rc4::IfcSectionTypeEnum::Value v) { set_attribute_value(0, EnumerationReference(&::Ifc4x3_rc4::IfcSectionTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcProfileDef* Ifc4x3_rc4::IfcSectionProperties::StartProfile() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcProfileDef>(true); }
void Ifc4x3_rc4::IfcSectionProperties::setStartProfile(::Ifc4x3_rc4::IfcProfileDef* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcProfileDef* Ifc4x3_rc4::IfcSectionProperties::EndProfile() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcProfileDef>(true); }
void Ifc4x3_rc4::IfcSectionProperties::setEndProfile(::Ifc4x3_rc4::IfcProfileDef* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcSectionProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[995]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSectionProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[995]); }
Ifc4x3_rc4::IfcSectionProperties::IfcSectionProperties(IfcEntityInstanceData&& e) : IfcPreDefinedProperties(std::move(e)) { }
Ifc4x3_rc4::IfcSectionProperties::IfcSectionProperties(::Ifc4x3_rc4::IfcSectionTypeEnum::Value v1_SectionType, ::Ifc4x3_rc4::IfcProfileDef* v2_StartProfile, ::Ifc4x3_rc4::IfcProfileDef* v3_EndProfile) : IfcPreDefinedProperties(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcSectionTypeEnum::Class(),(size_t)v1_SectionType)));set_attribute_value(1, v2_StartProfile ? v2_StartProfile->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_EndProfile ? v3_EndProfile->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcSectionReinforcementProperties
double Ifc4x3_rc4::IfcSectionReinforcementProperties::LongitudinalStartPosition() const {  double v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcSectionReinforcementProperties::setLongitudinalStartPosition(double v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
double Ifc4x3_rc4::IfcSectionReinforcementProperties::LongitudinalEndPosition() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSectionReinforcementProperties::setLongitudinalEndPosition(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< double > Ifc4x3_rc4::IfcSectionReinforcementProperties::TransversePosition() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcSectionReinforcementProperties::setTransversePosition(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
::Ifc4x3_rc4::IfcReinforcingBarRoleEnum::Value Ifc4x3_rc4::IfcSectionReinforcementProperties::ReinforcementRole() const {  return ::Ifc4x3_rc4::IfcReinforcingBarRoleEnum::FromString(data_.get_attribute_value(3)); }
void Ifc4x3_rc4::IfcSectionReinforcementProperties::setReinforcementRole(::Ifc4x3_rc4::IfcReinforcingBarRoleEnum::Value v) { set_attribute_value(3, EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarRoleEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcSectionProperties* Ifc4x3_rc4::IfcSectionReinforcementProperties::SectionDefinition() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcSectionProperties>(true); }
void Ifc4x3_rc4::IfcSectionReinforcementProperties::setSectionDefinition(::Ifc4x3_rc4::IfcSectionProperties* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
aggregate_of< ::Ifc4x3_rc4::IfcReinforcementBarProperties >::ptr Ifc4x3_rc4::IfcSectionReinforcementProperties::CrossSectionReinforcementDefinitions() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcReinforcementBarProperties >(); }
void Ifc4x3_rc4::IfcSectionReinforcementProperties::setCrossSectionReinforcementDefinitions(aggregate_of< ::Ifc4x3_rc4::IfcReinforcementBarProperties >::ptr v) { set_attribute_value(5, (v)->generalize());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcSectionReinforcementProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[996]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSectionReinforcementProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[996]); }
Ifc4x3_rc4::IfcSectionReinforcementProperties::IfcSectionReinforcementProperties(IfcEntityInstanceData&& e) : IfcPreDefinedProperties(std::move(e)) { }
Ifc4x3_rc4::IfcSectionReinforcementProperties::IfcSectionReinforcementProperties(double v1_LongitudinalStartPosition, double v2_LongitudinalEndPosition, boost::optional< double > v3_TransversePosition, ::Ifc4x3_rc4::IfcReinforcingBarRoleEnum::Value v4_ReinforcementRole, ::Ifc4x3_rc4::IfcSectionProperties* v5_SectionDefinition, aggregate_of< ::Ifc4x3_rc4::IfcReinforcementBarProperties >::ptr v6_CrossSectionReinforcementDefinitions) : IfcPreDefinedProperties(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_LongitudinalStartPosition));set_attribute_value(1, (v2_LongitudinalEndPosition)); if (v3_TransversePosition) {set_attribute_value(2, (*v3_TransversePosition)); }set_attribute_value(3, (EnumerationReference(&::Ifc4x3_rc4::IfcReinforcingBarRoleEnum::Class(),(size_t)v4_ReinforcementRole)));set_attribute_value(4, v5_SectionDefinition ? v5_SectionDefinition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, (v6_CrossSectionReinforcementDefinitions)->generalize());; populate_derived(); }

// Function implementations for IfcSectionedSolid
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcSectionedSolid::Directrix() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcSectionedSolid::setDirectrix(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr Ifc4x3_rc4::IfcSectionedSolid::CrossSections() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcProfileDef >(); }
void Ifc4x3_rc4::IfcSectionedSolid::setCrossSections(aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcSectionedSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[990]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSectionedSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[990]); }
Ifc4x3_rc4::IfcSectionedSolid::IfcSectionedSolid(IfcEntityInstanceData&& e) : IfcSolidModel(std::move(e)) { }
Ifc4x3_rc4::IfcSectionedSolid::IfcSectionedSolid(::Ifc4x3_rc4::IfcCurve* v1_Directrix, aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr v2_CrossSections) : IfcSolidModel(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Directrix ? v1_Directrix->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_CrossSections)->generalize());; populate_derived(); }

// Function implementations for IfcSectionedSolidHorizontal
aggregate_of< ::Ifc4x3_rc4::IfcAxis2PlacementLinear >::ptr Ifc4x3_rc4::IfcSectionedSolidHorizontal::CrossSectionPositions() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcAxis2PlacementLinear >(); }
void Ifc4x3_rc4::IfcSectionedSolidHorizontal::setCrossSectionPositions(aggregate_of< ::Ifc4x3_rc4::IfcAxis2PlacementLinear >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }
bool Ifc4x3_rc4::IfcSectionedSolidHorizontal::FixedAxisVertical() const {  bool v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcSectionedSolidHorizontal::setFixedAxisVertical(bool v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcSectionedSolidHorizontal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[991]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSectionedSolidHorizontal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[991]); }
Ifc4x3_rc4::IfcSectionedSolidHorizontal::IfcSectionedSolidHorizontal(IfcEntityInstanceData&& e) : IfcSectionedSolid(std::move(e)) { }
Ifc4x3_rc4::IfcSectionedSolidHorizontal::IfcSectionedSolidHorizontal(::Ifc4x3_rc4::IfcCurve* v1_Directrix, aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr v2_CrossSections, aggregate_of< ::Ifc4x3_rc4::IfcAxis2PlacementLinear >::ptr v3_CrossSectionPositions, bool v4_FixedAxisVertical) : IfcSectionedSolid(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Directrix ? v1_Directrix->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_CrossSections)->generalize());set_attribute_value(2, (v3_CrossSectionPositions)->generalize());set_attribute_value(3, (v4_FixedAxisVertical));; populate_derived(); }

// Function implementations for IfcSectionedSpine
::Ifc4x3_rc4::IfcCompositeCurve* Ifc4x3_rc4::IfcSectionedSpine::SpineCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCompositeCurve>(true); }
void Ifc4x3_rc4::IfcSectionedSpine::setSpineCurve(::Ifc4x3_rc4::IfcCompositeCurve* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr Ifc4x3_rc4::IfcSectionedSpine::CrossSections() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcProfileDef >(); }
void Ifc4x3_rc4::IfcSectionedSpine::setCrossSections(aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
aggregate_of< ::Ifc4x3_rc4::IfcAxis2Placement3D >::ptr Ifc4x3_rc4::IfcSectionedSpine::CrossSectionPositions() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcAxis2Placement3D >(); }
void Ifc4x3_rc4::IfcSectionedSpine::setCrossSectionPositions(aggregate_of< ::Ifc4x3_rc4::IfcAxis2Placement3D >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcSectionedSpine::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[992]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSectionedSpine::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[992]); }
Ifc4x3_rc4::IfcSectionedSpine::IfcSectionedSpine(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcSectionedSpine::IfcSectionedSpine(::Ifc4x3_rc4::IfcCompositeCurve* v1_SpineCurve, aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr v2_CrossSections, aggregate_of< ::Ifc4x3_rc4::IfcAxis2Placement3D >::ptr v3_CrossSectionPositions) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_SpineCurve ? v1_SpineCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_CrossSections)->generalize());set_attribute_value(2, (v3_CrossSectionPositions)->generalize());; populate_derived(); }

// Function implementations for IfcSectionedSurface
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcSectionedSurface::Directrix() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcSectionedSurface::setDirectrix(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcPointByDistanceExpression >::ptr Ifc4x3_rc4::IfcSectionedSurface::CrossSectionPositions() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcPointByDistanceExpression >(); }
void Ifc4x3_rc4::IfcSectionedSurface::setCrossSectionPositions(aggregate_of< ::Ifc4x3_rc4::IfcPointByDistanceExpression >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr Ifc4x3_rc4::IfcSectionedSurface::CrossSections() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcProfileDef >(); }
void Ifc4x3_rc4::IfcSectionedSurface::setCrossSections(aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }
bool Ifc4x3_rc4::IfcSectionedSurface::FixedAxisVertical() const {  bool v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcSectionedSurface::setFixedAxisVertical(bool v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcSectionedSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[993]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSectionedSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[993]); }
Ifc4x3_rc4::IfcSectionedSurface::IfcSectionedSurface(IfcEntityInstanceData&& e) : IfcSurface(std::move(e)) { }
Ifc4x3_rc4::IfcSectionedSurface::IfcSectionedSurface(::Ifc4x3_rc4::IfcCurve* v1_Directrix, aggregate_of< ::Ifc4x3_rc4::IfcPointByDistanceExpression >::ptr v2_CrossSectionPositions, aggregate_of< ::Ifc4x3_rc4::IfcProfileDef >::ptr v3_CrossSections, bool v4_FixedAxisVertical) : IfcSurface(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Directrix ? v1_Directrix->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_CrossSectionPositions)->generalize());set_attribute_value(2, (v3_CrossSections)->generalize());set_attribute_value(3, (v4_FixedAxisVertical));; populate_derived(); }

// Function implementations for IfcSegment
::Ifc4x3_rc4::IfcTransitionCode::Value Ifc4x3_rc4::IfcSegment::Transition() const {  return ::Ifc4x3_rc4::IfcTransitionCode::FromString(data_.get_attribute_value(0)); }
void Ifc4x3_rc4::IfcSegment::setTransition(::Ifc4x3_rc4::IfcTransitionCode::Value v) { set_attribute_value(0, EnumerationReference(&::Ifc4x3_rc4::IfcTransitionCode::Class(), (size_t) v));if constexpr (false)unset_attribute_value(0); }

::Ifc4x3_rc4::IfcCompositeCurve::list::ptr Ifc4x3_rc4::IfcSegment::UsingCurves() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[194], 0)->as<IfcCompositeCurve>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcSegment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[998]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSegment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[998]); }
Ifc4x3_rc4::IfcSegment::IfcSegment(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcSegment::IfcSegment(::Ifc4x3_rc4::IfcTransitionCode::Value v1_Transition) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcTransitionCode::Class(),(size_t)v1_Transition)));; populate_derived(); }

// Function implementations for IfcSegmentedReferenceCurve
::Ifc4x3_rc4::IfcBoundedCurve* Ifc4x3_rc4::IfcSegmentedReferenceCurve::BaseCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcBoundedCurve>(true); }
void Ifc4x3_rc4::IfcSegmentedReferenceCurve::setBaseCurve(::Ifc4x3_rc4::IfcBoundedCurve* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcPlacement* Ifc4x3_rc4::IfcSegmentedReferenceCurve::EndPoint() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcPlacement>(true); }
void Ifc4x3_rc4::IfcSegmentedReferenceCurve::setEndPoint(::Ifc4x3_rc4::IfcPlacement* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcSegmentedReferenceCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[999]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSegmentedReferenceCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[999]); }
Ifc4x3_rc4::IfcSegmentedReferenceCurve::IfcSegmentedReferenceCurve(IfcEntityInstanceData&& e) : IfcCompositeCurve(std::move(e)) { }
Ifc4x3_rc4::IfcSegmentedReferenceCurve::IfcSegmentedReferenceCurve(aggregate_of< ::Ifc4x3_rc4::IfcSegment >::ptr v1_Segments, boost::logic::tribool v2_SelfIntersect, ::Ifc4x3_rc4::IfcBoundedCurve* v3_BaseCurve, ::Ifc4x3_rc4::IfcPlacement* v4_EndPoint) : IfcCompositeCurve(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, (v1_Segments)->generalize());set_attribute_value(1, (v2_SelfIntersect));set_attribute_value(2, v3_BaseCurve ? v3_BaseCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_EndPoint ? v4_EndPoint->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcSensor
boost::optional< ::Ifc4x3_rc4::IfcSensorTypeEnum::Value > Ifc4x3_rc4::IfcSensor::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSensorTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSensor::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSensorTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSensorTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSensor::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1001]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSensor::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1001]); }
Ifc4x3_rc4::IfcSensor::IfcSensor(IfcEntityInstanceData&& e) : IfcDistributionControlElement(std::move(e)) { }
Ifc4x3_rc4::IfcSensor::IfcSensor(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSensorTypeEnum::Value > v9_PredefinedType) : IfcDistributionControlElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSensorTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSensorType
::Ifc4x3_rc4::IfcSensorTypeEnum::Value Ifc4x3_rc4::IfcSensorType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSensorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSensorType::setPredefinedType(::Ifc4x3_rc4::IfcSensorTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSensorTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcSensorType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1002]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSensorType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1002]); }
Ifc4x3_rc4::IfcSensorType::IfcSensorType(IfcEntityInstanceData&& e) : IfcDistributionControlElementType(std::move(e)) { }
Ifc4x3_rc4::IfcSensorType::IfcSensorType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcSensorTypeEnum::Value v10_PredefinedType) : IfcDistributionControlElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSensorTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcSeventhOrderPolynomialSpiral
double Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::SepticTerm() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::setSepticTerm(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< double > Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::SexticTerm() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::setSexticTerm(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::QuinticTerm() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::setQuinticTerm(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< double > Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::QuarticTerm() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::setQuarticTerm(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< double > Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::CubicTerm() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::setCubicTerm(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< double > Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::QuadraticTerm() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::setQuadraticTerm(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< double > Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::LinearTerm() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::setLinearTerm(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< double > Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::ConstantTerm() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::setConstantTerm(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1005]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1005]); }
Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::IfcSeventhOrderPolynomialSpiral(IfcEntityInstanceData&& e) : IfcSpiral(std::move(e)) { }
Ifc4x3_rc4::IfcSeventhOrderPolynomialSpiral::IfcSeventhOrderPolynomialSpiral(::Ifc4x3_rc4::IfcAxis2Placement* v1_Position, double v2_SepticTerm, boost::optional< double > v3_SexticTerm, boost::optional< double > v4_QuinticTerm, boost::optional< double > v5_QuarticTerm, boost::optional< double > v6_CubicTerm, boost::optional< double > v7_QuadraticTerm, boost::optional< double > v8_LinearTerm, boost::optional< double > v9_ConstantTerm) : IfcSpiral(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_SepticTerm)); if (v3_SexticTerm) {set_attribute_value(2, (*v3_SexticTerm)); } if (v4_QuinticTerm) {set_attribute_value(3, (*v4_QuinticTerm)); } if (v5_QuarticTerm) {set_attribute_value(4, (*v5_QuarticTerm)); } if (v6_CubicTerm) {set_attribute_value(5, (*v6_CubicTerm)); } if (v7_QuadraticTerm) {set_attribute_value(6, (*v7_QuadraticTerm)); } if (v8_LinearTerm) {set_attribute_value(7, (*v8_LinearTerm)); } if (v9_ConstantTerm) {set_attribute_value(8, (*v9_ConstantTerm)); }; populate_derived(); }

// Function implementations for IfcShadingDevice
boost::optional< ::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Value > Ifc4x3_rc4::IfcShadingDevice::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcShadingDevice::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcShadingDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1006]); }
const IfcParse::entity& Ifc4x3_rc4::IfcShadingDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1006]); }
Ifc4x3_rc4::IfcShadingDevice::IfcShadingDevice(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcShadingDevice::IfcShadingDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcShadingDeviceType
::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Value Ifc4x3_rc4::IfcShadingDeviceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcShadingDeviceType::setPredefinedType(::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcShadingDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1007]); }
const IfcParse::entity& Ifc4x3_rc4::IfcShadingDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1007]); }
Ifc4x3_rc4::IfcShadingDeviceType::IfcShadingDeviceType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcShadingDeviceType::IfcShadingDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcShadingDeviceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcShapeAspect
aggregate_of< ::Ifc4x3_rc4::IfcShapeModel >::ptr Ifc4x3_rc4::IfcShapeAspect::ShapeRepresentations() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcShapeModel >(); }
void Ifc4x3_rc4::IfcShapeAspect::setShapeRepresentations(aggregate_of< ::Ifc4x3_rc4::IfcShapeModel >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcShapeAspect::Name() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcShapeAspect::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcShapeAspect::Description() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcShapeAspect::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::logic::tribool Ifc4x3_rc4::IfcShapeAspect::ProductDefinitional() const {  boost::logic::tribool v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcShapeAspect::setProductDefinitional(boost::logic::tribool v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcProductRepresentationSelect* Ifc4x3_rc4::IfcShapeAspect::PartOfProductDefinitionShape() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcProductRepresentationSelect>(true); }
void Ifc4x3_rc4::IfcShapeAspect::setPartOfProductDefinitionShape(::Ifc4x3_rc4::IfcProductRepresentationSelect* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcShapeAspect::HasExternalReferences() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcShapeAspect::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1009]); }
const IfcParse::entity& Ifc4x3_rc4::IfcShapeAspect::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1009]); }
Ifc4x3_rc4::IfcShapeAspect::IfcShapeAspect(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcShapeAspect::IfcShapeAspect(aggregate_of< ::Ifc4x3_rc4::IfcShapeModel >::ptr v1_ShapeRepresentations, boost::optional< std::string > v2_Name, boost::optional< std::string > v3_Description, boost::logic::tribool v4_ProductDefinitional, ::Ifc4x3_rc4::IfcProductRepresentationSelect* v5_PartOfProductDefinitionShape) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_ShapeRepresentations)->generalize()); if (v2_Name) {set_attribute_value(1, (*v2_Name)); } if (v3_Description) {set_attribute_value(2, (*v3_Description)); }set_attribute_value(3, (v4_ProductDefinitional));set_attribute_value(4, v5_PartOfProductDefinitionShape ? v5_PartOfProductDefinitionShape->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcShapeModel

::Ifc4x3_rc4::IfcShapeAspect::list::ptr Ifc4x3_rc4::IfcShapeModel::OfShapeAspect() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1009], 0)->as<IfcShapeAspect>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcShapeModel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1010]); }
const IfcParse::entity& Ifc4x3_rc4::IfcShapeModel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1010]); }
Ifc4x3_rc4::IfcShapeModel::IfcShapeModel(IfcEntityInstanceData&& e) : IfcRepresentation(std::move(e)) { }
Ifc4x3_rc4::IfcShapeModel::IfcShapeModel(::Ifc4x3_rc4::IfcRepresentationContext* v1_ContextOfItems, boost::optional< std::string > v2_RepresentationIdentifier, boost::optional< std::string > v3_RepresentationType, aggregate_of< ::Ifc4x3_rc4::IfcRepresentationItem >::ptr v4_Items) : IfcRepresentation(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_ContextOfItems ? v1_ContextOfItems->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_RepresentationIdentifier) {set_attribute_value(1, (*v2_RepresentationIdentifier)); } if (v3_RepresentationType) {set_attribute_value(2, (*v3_RepresentationType)); }set_attribute_value(3, (v4_Items)->generalize());; populate_derived(); }

// Function implementations for IfcShapeRepresentation


const IfcParse::entity& Ifc4x3_rc4::IfcShapeRepresentation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1011]); }
const IfcParse::entity& Ifc4x3_rc4::IfcShapeRepresentation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1011]); }
Ifc4x3_rc4::IfcShapeRepresentation::IfcShapeRepresentation(IfcEntityInstanceData&& e) : IfcShapeModel(std::move(e)) { }
Ifc4x3_rc4::IfcShapeRepresentation::IfcShapeRepresentation(::Ifc4x3_rc4::IfcRepresentationContext* v1_ContextOfItems, boost::optional< std::string > v2_RepresentationIdentifier, boost::optional< std::string > v3_RepresentationType, aggregate_of< ::Ifc4x3_rc4::IfcRepresentationItem >::ptr v4_Items) : IfcShapeModel(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_ContextOfItems ? v1_ContextOfItems->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_RepresentationIdentifier) {set_attribute_value(1, (*v2_RepresentationIdentifier)); } if (v3_RepresentationType) {set_attribute_value(2, (*v3_RepresentationType)); }set_attribute_value(3, (v4_Items)->generalize());; populate_derived(); }

// Function implementations for IfcShellBasedSurfaceModel
aggregate_of< ::Ifc4x3_rc4::IfcShell >::ptr Ifc4x3_rc4::IfcShellBasedSurfaceModel::SbsmBoundary() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcShell >(); }
void Ifc4x3_rc4::IfcShellBasedSurfaceModel::setSbsmBoundary(aggregate_of< ::Ifc4x3_rc4::IfcShell >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcShellBasedSurfaceModel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1014]); }
const IfcParse::entity& Ifc4x3_rc4::IfcShellBasedSurfaceModel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1014]); }
Ifc4x3_rc4::IfcShellBasedSurfaceModel::IfcShellBasedSurfaceModel(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcShellBasedSurfaceModel::IfcShellBasedSurfaceModel(aggregate_of< ::Ifc4x3_rc4::IfcShell >::ptr v1_SbsmBoundary) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_SbsmBoundary)->generalize());; populate_derived(); }

// Function implementations for IfcSign
boost::optional< ::Ifc4x3_rc4::IfcSignTypeEnum::Value > Ifc4x3_rc4::IfcSign::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSignTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSign::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSignTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSignTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSign::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1015]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSign::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1015]); }
Ifc4x3_rc4::IfcSign::IfcSign(IfcEntityInstanceData&& e) : IfcElementComponent(std::move(e)) { }
Ifc4x3_rc4::IfcSign::IfcSign(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSignTypeEnum::Value > v9_PredefinedType) : IfcElementComponent(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSignTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSignType
::Ifc4x3_rc4::IfcSignTypeEnum::Value Ifc4x3_rc4::IfcSignType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSignTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSignType::setPredefinedType(::Ifc4x3_rc4::IfcSignTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSignTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcSignType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1019]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSignType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1019]); }
Ifc4x3_rc4::IfcSignType::IfcSignType(IfcEntityInstanceData&& e) : IfcElementComponentType(std::move(e)) { }
Ifc4x3_rc4::IfcSignType::IfcSignType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcSignTypeEnum::Value v10_PredefinedType) : IfcElementComponentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSignTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcSignal
boost::optional< ::Ifc4x3_rc4::IfcSignalTypeEnum::Value > Ifc4x3_rc4::IfcSignal::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSignalTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSignal::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSignalTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSignalTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSignal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1016]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSignal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1016]); }
Ifc4x3_rc4::IfcSignal::IfcSignal(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcSignal::IfcSignal(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSignalTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSignalTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSignalType
::Ifc4x3_rc4::IfcSignalTypeEnum::Value Ifc4x3_rc4::IfcSignalType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSignalTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSignalType::setPredefinedType(::Ifc4x3_rc4::IfcSignalTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSignalTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcSignalType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1017]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSignalType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1017]); }
Ifc4x3_rc4::IfcSignalType::IfcSignalType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcSignalType::IfcSignalType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcSignalTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSignalTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcSimpleProperty


const IfcParse::entity& Ifc4x3_rc4::IfcSimpleProperty::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1021]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSimpleProperty::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1021]); }
Ifc4x3_rc4::IfcSimpleProperty::IfcSimpleProperty(IfcEntityInstanceData&& e) : IfcProperty(std::move(e)) { }
Ifc4x3_rc4::IfcSimpleProperty::IfcSimpleProperty(std::string v1_Name, boost::optional< std::string > v2_Description) : IfcProperty(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }; populate_derived(); }

// Function implementations for IfcSimplePropertyTemplate
boost::optional< ::Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::Value > Ifc4x3_rc4::IfcSimplePropertyTemplate::TemplateType() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::FromString(data_.get_attribute_value(4)); }
void Ifc4x3_rc4::IfcSimplePropertyTemplate::setTemplateType(boost::optional< ::Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::Value > v) { if (v) {set_attribute_value(4, EnumerationReference(&::Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcSimplePropertyTemplate::PrimaryMeasureType() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcSimplePropertyTemplate::setPrimaryMeasureType(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcSimplePropertyTemplate::SecondaryMeasureType() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcSimplePropertyTemplate::setSecondaryMeasureType(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
::Ifc4x3_rc4::IfcPropertyEnumeration* Ifc4x3_rc4::IfcSimplePropertyTemplate::Enumerators() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcPropertyEnumeration>(true); }
void Ifc4x3_rc4::IfcSimplePropertyTemplate::setEnumerators(::Ifc4x3_rc4::IfcPropertyEnumeration* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcSimplePropertyTemplate::PrimaryUnit() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcSimplePropertyTemplate::setPrimaryUnit(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcSimplePropertyTemplate::SecondaryUnit() const { if(data_.get_attribute_value(9).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcSimplePropertyTemplate::setSecondaryUnit(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }
boost::optional< std::string > Ifc4x3_rc4::IfcSimplePropertyTemplate::Expression() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcSimplePropertyTemplate::setExpression(boost::optional< std::string > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< ::Ifc4x3_rc4::IfcStateEnum::Value > Ifc4x3_rc4::IfcSimplePropertyTemplate::AccessState() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcStateEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcSimplePropertyTemplate::setAccessState(boost::optional< ::Ifc4x3_rc4::IfcStateEnum::Value > v) { if (v) {set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcStateEnum::Class(), (size_t) *v));} else {unset_attribute_value(11);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSimplePropertyTemplate::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1022]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSimplePropertyTemplate::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1022]); }
Ifc4x3_rc4::IfcSimplePropertyTemplate::IfcSimplePropertyTemplate(IfcEntityInstanceData&& e) : IfcPropertyTemplate(std::move(e)) { }
Ifc4x3_rc4::IfcSimplePropertyTemplate::IfcSimplePropertyTemplate(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< ::Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::Value > v5_TemplateType, boost::optional< std::string > v6_PrimaryMeasureType, boost::optional< std::string > v7_SecondaryMeasureType, ::Ifc4x3_rc4::IfcPropertyEnumeration* v8_Enumerators, ::Ifc4x3_rc4::IfcUnit* v9_PrimaryUnit, ::Ifc4x3_rc4::IfcUnit* v10_SecondaryUnit, boost::optional< std::string > v11_Expression, boost::optional< ::Ifc4x3_rc4::IfcStateEnum::Value > v12_AccessState) : IfcPropertyTemplate(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_TemplateType) {set_attribute_value(4, (EnumerationReference(&::Ifc4x3_rc4::IfcSimplePropertyTemplateTypeEnum::Class(),(size_t)*v5_TemplateType))); } if (v6_PrimaryMeasureType) {set_attribute_value(5, (*v6_PrimaryMeasureType)); } if (v7_SecondaryMeasureType) {set_attribute_value(6, (*v7_SecondaryMeasureType)); }set_attribute_value(7, v8_Enumerators ? v8_Enumerators->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, v9_PrimaryUnit ? v9_PrimaryUnit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(9, v10_SecondaryUnit ? v10_SecondaryUnit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v11_Expression) {set_attribute_value(10, (*v11_Expression)); } if (v12_AccessState) {set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcStateEnum::Class(),(size_t)*v12_AccessState))); }; populate_derived(); }

// Function implementations for IfcSine
double Ifc4x3_rc4::IfcSine::SineTerm() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSine::setSineTerm(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< double > Ifc4x3_rc4::IfcSine::LinearTerm() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcSine::setLinearTerm(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcSine::ConstantTerm() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcSine::setConstantTerm(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSine::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1025]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSine::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1025]); }
Ifc4x3_rc4::IfcSine::IfcSine(IfcEntityInstanceData&& e) : IfcSpiral(std::move(e)) { }
Ifc4x3_rc4::IfcSine::IfcSine(::Ifc4x3_rc4::IfcAxis2Placement* v1_Position, double v2_SineTerm, boost::optional< double > v3_LinearTerm, boost::optional< double > v4_ConstantTerm) : IfcSpiral(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_SineTerm)); if (v3_LinearTerm) {set_attribute_value(2, (*v3_LinearTerm)); } if (v4_ConstantTerm) {set_attribute_value(3, (*v4_ConstantTerm)); }; populate_derived(); }

// Function implementations for IfcSite
boost::optional< std::vector< int > /*[3:4]*/ > Ifc4x3_rc4::IfcSite::RefLatitude() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } std::vector< int > /*[3:4]*/ v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcSite::setRefLatitude(boost::optional< std::vector< int > /*[3:4]*/ > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< std::vector< int > /*[3:4]*/ > Ifc4x3_rc4::IfcSite::RefLongitude() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::vector< int > /*[3:4]*/ v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcSite::setRefLongitude(boost::optional< std::vector< int > /*[3:4]*/ > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcSite::RefElevation() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcSite::setRefElevation(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< std::string > Ifc4x3_rc4::IfcSite::LandTitleNumber() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcSite::setLandTitleNumber(boost::optional< std::string > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
::Ifc4x3_rc4::IfcPostalAddress* Ifc4x3_rc4::IfcSite::SiteAddress() const { if(data_.get_attribute_value(13).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(13)))->as<::Ifc4x3_rc4::IfcPostalAddress>(true); }
void Ifc4x3_rc4::IfcSite::setSiteAddress(::Ifc4x3_rc4::IfcPostalAddress* v) { set_attribute_value(13, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(13); }


const IfcParse::entity& Ifc4x3_rc4::IfcSite::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1027]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSite::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1027]); }
Ifc4x3_rc4::IfcSite::IfcSite(IfcEntityInstanceData&& e) : IfcSpatialStructureElement(std::move(e)) { }
Ifc4x3_rc4::IfcSite::IfcSite(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType, boost::optional< std::vector< int > /*[3:4]*/ > v10_RefLatitude, boost::optional< std::vector< int > /*[3:4]*/ > v11_RefLongitude, boost::optional< double > v12_RefElevation, boost::optional< std::string > v13_LandTitleNumber, ::Ifc4x3_rc4::IfcPostalAddress* v14_SiteAddress) : IfcSpatialStructureElement(IfcEntityInstanceData(storage_t(14))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); } if (v10_RefLatitude) {set_attribute_value(9, (*v10_RefLatitude)); } if (v11_RefLongitude) {set_attribute_value(10, (*v11_RefLongitude)); } if (v12_RefElevation) {set_attribute_value(11, (*v12_RefElevation)); } if (v13_LandTitleNumber) {set_attribute_value(12, (*v13_LandTitleNumber)); }set_attribute_value(13, v14_SiteAddress ? v14_SiteAddress->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcSlab
boost::optional< ::Ifc4x3_rc4::IfcSlabTypeEnum::Value > Ifc4x3_rc4::IfcSlab::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSlabTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSlab::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSlabTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSlabTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSlab::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1031]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSlab::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1031]); }
Ifc4x3_rc4::IfcSlab::IfcSlab(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcSlab::IfcSlab(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSlabTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSlabTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSlabElementedCase


const IfcParse::entity& Ifc4x3_rc4::IfcSlabElementedCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1032]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSlabElementedCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1032]); }
Ifc4x3_rc4::IfcSlabElementedCase::IfcSlabElementedCase(IfcEntityInstanceData&& e) : IfcSlab(std::move(e)) { }
Ifc4x3_rc4::IfcSlabElementedCase::IfcSlabElementedCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSlabTypeEnum::Value > v9_PredefinedType) : IfcSlab(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSlabTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSlabStandardCase


const IfcParse::entity& Ifc4x3_rc4::IfcSlabStandardCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1033]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSlabStandardCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1033]); }
Ifc4x3_rc4::IfcSlabStandardCase::IfcSlabStandardCase(IfcEntityInstanceData&& e) : IfcSlab(std::move(e)) { }
Ifc4x3_rc4::IfcSlabStandardCase::IfcSlabStandardCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSlabTypeEnum::Value > v9_PredefinedType) : IfcSlab(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSlabTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSlabType
::Ifc4x3_rc4::IfcSlabTypeEnum::Value Ifc4x3_rc4::IfcSlabType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSlabTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSlabType::setPredefinedType(::Ifc4x3_rc4::IfcSlabTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSlabTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcSlabType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1034]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSlabType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1034]); }
Ifc4x3_rc4::IfcSlabType::IfcSlabType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcSlabType::IfcSlabType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcSlabTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSlabTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcSlippageConnectionCondition
boost::optional< double > Ifc4x3_rc4::IfcSlippageConnectionCondition::SlippageX() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSlippageConnectionCondition::setSlippageX(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< double > Ifc4x3_rc4::IfcSlippageConnectionCondition::SlippageY() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcSlippageConnectionCondition::setSlippageY(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcSlippageConnectionCondition::SlippageZ() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcSlippageConnectionCondition::setSlippageZ(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSlippageConnectionCondition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1036]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSlippageConnectionCondition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1036]); }
Ifc4x3_rc4::IfcSlippageConnectionCondition::IfcSlippageConnectionCondition(IfcEntityInstanceData&& e) : IfcStructuralConnectionCondition(std::move(e)) { }
Ifc4x3_rc4::IfcSlippageConnectionCondition::IfcSlippageConnectionCondition(boost::optional< std::string > v1_Name, boost::optional< double > v2_SlippageX, boost::optional< double > v3_SlippageY, boost::optional< double > v4_SlippageZ) : IfcStructuralConnectionCondition(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_SlippageX) {set_attribute_value(1, (*v2_SlippageX)); } if (v3_SlippageY) {set_attribute_value(2, (*v3_SlippageY)); } if (v4_SlippageZ) {set_attribute_value(3, (*v4_SlippageZ)); }; populate_derived(); }

// Function implementations for IfcSolarDevice
boost::optional< ::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Value > Ifc4x3_rc4::IfcSolarDevice::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSolarDevice::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSolarDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1037]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSolarDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1037]); }
Ifc4x3_rc4::IfcSolarDevice::IfcSolarDevice(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcSolarDevice::IfcSolarDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSolarDeviceType
::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Value Ifc4x3_rc4::IfcSolarDeviceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSolarDeviceType::setPredefinedType(::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcSolarDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1038]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSolarDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1038]); }
Ifc4x3_rc4::IfcSolarDeviceType::IfcSolarDeviceType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcSolarDeviceType::IfcSolarDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSolarDeviceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcSolidModel


const IfcParse::entity& Ifc4x3_rc4::IfcSolidModel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1041]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSolidModel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1041]); }
Ifc4x3_rc4::IfcSolidModel::IfcSolidModel(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcSolidModel::IfcSolidModel() : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcSolidStratum


const IfcParse::entity& Ifc4x3_rc4::IfcSolidStratum::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1043]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSolidStratum::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1043]); }
Ifc4x3_rc4::IfcSolidStratum::IfcSolidStratum(IfcEntityInstanceData&& e) : IfcGeotechnicalStratum(std::move(e)) { }
Ifc4x3_rc4::IfcSolidStratum::IfcSolidStratum(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcGeotechnicalStratum(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcSpace
boost::optional< ::Ifc4x3_rc4::IfcSpaceTypeEnum::Value > Ifc4x3_rc4::IfcSpace::PredefinedType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSpaceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSpace::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSpaceTypeEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSpaceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }
boost::optional< double > Ifc4x3_rc4::IfcSpace::ElevationWithFlooring() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcSpace::setElevationWithFlooring(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }

::Ifc4x3_rc4::IfcRelCoversSpaces::list::ptr Ifc4x3_rc4::IfcSpace::HasCoverings() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[933], 4)->as<IfcRelCoversSpaces>(); }
::Ifc4x3_rc4::IfcRelSpaceBoundary::list::ptr Ifc4x3_rc4::IfcSpace::BoundedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[950], 4)->as<IfcRelSpaceBoundary>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcSpace::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1048]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpace::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1048]); }
Ifc4x3_rc4::IfcSpace::IfcSpace(IfcEntityInstanceData&& e) : IfcSpatialStructureElement(std::move(e)) { }
Ifc4x3_rc4::IfcSpace::IfcSpace(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType, boost::optional< ::Ifc4x3_rc4::IfcSpaceTypeEnum::Value > v10_PredefinedType, boost::optional< double > v11_ElevationWithFlooring) : IfcSpatialStructureElement(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); } if (v10_PredefinedType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSpaceTypeEnum::Class(),(size_t)*v10_PredefinedType))); } if (v11_ElevationWithFlooring) {set_attribute_value(10, (*v11_ElevationWithFlooring)); }; populate_derived(); }

// Function implementations for IfcSpaceHeater
boost::optional< ::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Value > Ifc4x3_rc4::IfcSpaceHeater::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSpaceHeater::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSpaceHeater::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1050]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpaceHeater::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1050]); }
Ifc4x3_rc4::IfcSpaceHeater::IfcSpaceHeater(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcSpaceHeater::IfcSpaceHeater(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSpaceHeaterType
::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Value Ifc4x3_rc4::IfcSpaceHeaterType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSpaceHeaterType::setPredefinedType(::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcSpaceHeaterType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1051]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpaceHeaterType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1051]); }
Ifc4x3_rc4::IfcSpaceHeaterType::IfcSpaceHeaterType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcSpaceHeaterType::IfcSpaceHeaterType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSpaceHeaterTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcSpaceType
::Ifc4x3_rc4::IfcSpaceTypeEnum::Value Ifc4x3_rc4::IfcSpaceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSpaceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSpaceType::setPredefinedType(::Ifc4x3_rc4::IfcSpaceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSpaceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
boost::optional< std::string > Ifc4x3_rc4::IfcSpaceType::LongName() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcSpaceType::setLongName(boost::optional< std::string > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSpaceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1053]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpaceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1053]); }
Ifc4x3_rc4::IfcSpaceType::IfcSpaceType(IfcEntityInstanceData&& e) : IfcSpatialStructureElementType(std::move(e)) { }
Ifc4x3_rc4::IfcSpaceType::IfcSpaceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcSpaceTypeEnum::Value v10_PredefinedType, boost::optional< std::string > v11_LongName) : IfcSpatialStructureElementType(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSpaceTypeEnum::Class(),(size_t)v10_PredefinedType))); if (v11_LongName) {set_attribute_value(10, (*v11_LongName)); }; populate_derived(); }

// Function implementations for IfcSpatialElement
boost::optional< std::string > Ifc4x3_rc4::IfcSpatialElement::LongName() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcSpatialElement::setLongName(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }

::Ifc4x3_rc4::IfcRelContainedInSpatialStructure::list::ptr Ifc4x3_rc4::IfcSpatialElement::ContainsElements() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[931], 5)->as<IfcRelContainedInSpatialStructure>(); }
::Ifc4x3_rc4::IfcRelServicesBuildings::list::ptr Ifc4x3_rc4::IfcSpatialElement::ServicedBySystems() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[949], 5)->as<IfcRelServicesBuildings>(); }
::Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::list::ptr Ifc4x3_rc4::IfcSpatialElement::ReferencesElements() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[947], 5)->as<IfcRelReferencedInSpatialStructure>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcSpatialElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1055]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpatialElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1055]); }
Ifc4x3_rc4::IfcSpatialElement::IfcSpatialElement(IfcEntityInstanceData&& e) : IfcProduct(std::move(e)) { }
Ifc4x3_rc4::IfcSpatialElement::IfcSpatialElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName) : IfcProduct(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); }; populate_derived(); }

// Function implementations for IfcSpatialElementType
boost::optional< std::string > Ifc4x3_rc4::IfcSpatialElementType::ElementType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcSpatialElementType::setElementType(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSpatialElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1056]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpatialElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1056]); }
Ifc4x3_rc4::IfcSpatialElementType::IfcSpatialElementType(IfcEntityInstanceData&& e) : IfcTypeProduct(std::move(e)) { }
Ifc4x3_rc4::IfcSpatialElementType::IfcSpatialElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcTypeProduct(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcSpatialStructureElement
boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > Ifc4x3_rc4::IfcSpatialStructureElement::CompositionType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcElementCompositionEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSpatialStructureElement::setCompositionType(boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSpatialStructureElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1058]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpatialStructureElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1058]); }
Ifc4x3_rc4::IfcSpatialStructureElement::IfcSpatialStructureElement(IfcEntityInstanceData&& e) : IfcSpatialElement(std::move(e)) { }
Ifc4x3_rc4::IfcSpatialStructureElement::IfcSpatialStructureElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcElementCompositionEnum::Value > v9_CompositionType) : IfcSpatialElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_CompositionType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcElementCompositionEnum::Class(),(size_t)*v9_CompositionType))); }; populate_derived(); }

// Function implementations for IfcSpatialStructureElementType


const IfcParse::entity& Ifc4x3_rc4::IfcSpatialStructureElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1059]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpatialStructureElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1059]); }
Ifc4x3_rc4::IfcSpatialStructureElementType::IfcSpatialStructureElementType(IfcEntityInstanceData&& e) : IfcSpatialElementType(std::move(e)) { }
Ifc4x3_rc4::IfcSpatialStructureElementType::IfcSpatialStructureElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType) : IfcSpatialElementType(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }; populate_derived(); }

// Function implementations for IfcSpatialZone
boost::optional< ::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Value > Ifc4x3_rc4::IfcSpatialZone::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSpatialZone::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSpatialZone::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1060]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpatialZone::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1060]); }
Ifc4x3_rc4::IfcSpatialZone::IfcSpatialZone(IfcEntityInstanceData&& e) : IfcSpatialElement(std::move(e)) { }
Ifc4x3_rc4::IfcSpatialZone::IfcSpatialZone(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_LongName, boost::optional< ::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Value > v9_PredefinedType) : IfcSpatialElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LongName) {set_attribute_value(7, (*v8_LongName)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSpatialZoneType
::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Value Ifc4x3_rc4::IfcSpatialZoneType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSpatialZoneType::setPredefinedType(::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
boost::optional< std::string > Ifc4x3_rc4::IfcSpatialZoneType::LongName() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcSpatialZoneType::setLongName(boost::optional< std::string > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSpatialZoneType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1061]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpatialZoneType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1061]); }
Ifc4x3_rc4::IfcSpatialZoneType::IfcSpatialZoneType(IfcEntityInstanceData&& e) : IfcSpatialElementType(std::move(e)) { }
Ifc4x3_rc4::IfcSpatialZoneType::IfcSpatialZoneType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Value v10_PredefinedType, boost::optional< std::string > v11_LongName) : IfcSpatialElementType(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSpatialZoneTypeEnum::Class(),(size_t)v10_PredefinedType))); if (v11_LongName) {set_attribute_value(10, (*v11_LongName)); }; populate_derived(); }

// Function implementations for IfcSphere
double Ifc4x3_rc4::IfcSphere::Radius() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSphere::setRadius(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcSphere::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1067]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSphere::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1067]); }
Ifc4x3_rc4::IfcSphere::IfcSphere(IfcEntityInstanceData&& e) : IfcCsgPrimitive3D(std::move(e)) { }
Ifc4x3_rc4::IfcSphere::IfcSphere(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position, double v2_Radius) : IfcCsgPrimitive3D(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Radius));; populate_derived(); }

// Function implementations for IfcSphericalSurface
double Ifc4x3_rc4::IfcSphericalSurface::Radius() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSphericalSurface::setRadius(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcSphericalSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1068]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSphericalSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1068]); }
Ifc4x3_rc4::IfcSphericalSurface::IfcSphericalSurface(IfcEntityInstanceData&& e) : IfcElementarySurface(std::move(e)) { }
Ifc4x3_rc4::IfcSphericalSurface::IfcSphericalSurface(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position, double v2_Radius) : IfcElementarySurface(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Radius));; populate_derived(); }

// Function implementations for IfcSpiral
::Ifc4x3_rc4::IfcAxis2Placement* Ifc4x3_rc4::IfcSpiral::Position() const { if(data_.get_attribute_value(0).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcAxis2Placement>(true); }
void Ifc4x3_rc4::IfcSpiral::setPosition(::Ifc4x3_rc4::IfcAxis2Placement* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcSpiral::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1069]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSpiral::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1069]); }
Ifc4x3_rc4::IfcSpiral::IfcSpiral(IfcEntityInstanceData&& e) : IfcCurve(std::move(e)) { }
Ifc4x3_rc4::IfcSpiral::IfcSpiral(::Ifc4x3_rc4::IfcAxis2Placement* v1_Position) : IfcCurve(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcStackTerminal
boost::optional< ::Ifc4x3_rc4::IfcStackTerminalTypeEnum::Value > Ifc4x3_rc4::IfcStackTerminal::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcStackTerminalTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcStackTerminal::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcStackTerminalTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcStackTerminalTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStackTerminal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1070]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStackTerminal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1070]); }
Ifc4x3_rc4::IfcStackTerminal::IfcStackTerminal(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcStackTerminal::IfcStackTerminal(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcStackTerminalTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcStackTerminalTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcStackTerminalType
::Ifc4x3_rc4::IfcStackTerminalTypeEnum::Value Ifc4x3_rc4::IfcStackTerminalType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcStackTerminalTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcStackTerminalType::setPredefinedType(::Ifc4x3_rc4::IfcStackTerminalTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcStackTerminalTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcStackTerminalType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1071]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStackTerminalType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1071]); }
Ifc4x3_rc4::IfcStackTerminalType::IfcStackTerminalType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcStackTerminalType::IfcStackTerminalType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcStackTerminalTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcStackTerminalTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcStair
boost::optional< ::Ifc4x3_rc4::IfcStairTypeEnum::Value > Ifc4x3_rc4::IfcStair::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcStairTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcStair::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcStairTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcStairTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStair::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1073]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStair::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1073]); }
Ifc4x3_rc4::IfcStair::IfcStair(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcStair::IfcStair(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcStairTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcStairTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcStairFlight
boost::optional< int > Ifc4x3_rc4::IfcStairFlight::NumberOfRisers() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } int v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcStairFlight::setNumberOfRisers(boost::optional< int > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< int > Ifc4x3_rc4::IfcStairFlight::NumberOfTreads() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } int v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcStairFlight::setNumberOfTreads(boost::optional< int > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< double > Ifc4x3_rc4::IfcStairFlight::RiserHeight() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcStairFlight::setRiserHeight(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcStairFlight::TreadLength() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcStairFlight::setTreadLength(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< ::Ifc4x3_rc4::IfcStairFlightTypeEnum::Value > Ifc4x3_rc4::IfcStairFlight::PredefinedType() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcStairFlightTypeEnum::FromString(data_.get_attribute_value(12)); }
void Ifc4x3_rc4::IfcStairFlight::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcStairFlightTypeEnum::Value > v) { if (v) {set_attribute_value(12, EnumerationReference(&::Ifc4x3_rc4::IfcStairFlightTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(12);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStairFlight::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1074]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStairFlight::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1074]); }
Ifc4x3_rc4::IfcStairFlight::IfcStairFlight(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcStairFlight::IfcStairFlight(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< int > v9_NumberOfRisers, boost::optional< int > v10_NumberOfTreads, boost::optional< double > v11_RiserHeight, boost::optional< double > v12_TreadLength, boost::optional< ::Ifc4x3_rc4::IfcStairFlightTypeEnum::Value > v13_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_NumberOfRisers) {set_attribute_value(8, (*v9_NumberOfRisers)); } if (v10_NumberOfTreads) {set_attribute_value(9, (*v10_NumberOfTreads)); } if (v11_RiserHeight) {set_attribute_value(10, (*v11_RiserHeight)); } if (v12_TreadLength) {set_attribute_value(11, (*v12_TreadLength)); } if (v13_PredefinedType) {set_attribute_value(12, (EnumerationReference(&::Ifc4x3_rc4::IfcStairFlightTypeEnum::Class(),(size_t)*v13_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcStairFlightType
::Ifc4x3_rc4::IfcStairFlightTypeEnum::Value Ifc4x3_rc4::IfcStairFlightType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcStairFlightTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcStairFlightType::setPredefinedType(::Ifc4x3_rc4::IfcStairFlightTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcStairFlightTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcStairFlightType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1075]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStairFlightType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1075]); }
Ifc4x3_rc4::IfcStairFlightType::IfcStairFlightType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcStairFlightType::IfcStairFlightType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcStairFlightTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcStairFlightTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcStairType
::Ifc4x3_rc4::IfcStairTypeEnum::Value Ifc4x3_rc4::IfcStairType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcStairTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcStairType::setPredefinedType(::Ifc4x3_rc4::IfcStairTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcStairTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcStairType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1077]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStairType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1077]); }
Ifc4x3_rc4::IfcStairType::IfcStairType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcStairType::IfcStairType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcStairTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcStairTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcStructuralAction
boost::optional< bool > Ifc4x3_rc4::IfcStructuralAction::DestabilizingLoad() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } bool v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcStructuralAction::setDestabilizingLoad(boost::optional< bool > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralAction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1080]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralAction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1080]); }
Ifc4x3_rc4::IfcStructuralAction::IfcStructuralAction(IfcEntityInstanceData&& e) : IfcStructuralActivity(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralAction::IfcStructuralAction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal, boost::optional< bool > v10_DestabilizingLoad) : IfcStructuralActivity(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal))); if (v10_DestabilizingLoad) {set_attribute_value(9, (*v10_DestabilizingLoad)); }; populate_derived(); }

// Function implementations for IfcStructuralActivity
::Ifc4x3_rc4::IfcStructuralLoad* Ifc4x3_rc4::IfcStructuralActivity::AppliedLoad() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcStructuralLoad>(true); }
void Ifc4x3_rc4::IfcStructuralActivity::setAppliedLoad(::Ifc4x3_rc4::IfcStructuralLoad* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }
::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value Ifc4x3_rc4::IfcStructuralActivity::GlobalOrLocal() const {  return ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcStructuralActivity::setGlobalOrLocal(::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v) { set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(8); }

::Ifc4x3_rc4::IfcRelConnectsStructuralActivity::list::ptr Ifc4x3_rc4::IfcStructuralActivity::AssignedToStructuralItem() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[927], 5)->as<IfcRelConnectsStructuralActivity>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcStructuralActivity::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1081]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralActivity::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1081]); }
Ifc4x3_rc4::IfcStructuralActivity::IfcStructuralActivity(IfcEntityInstanceData&& e) : IfcProduct(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralActivity::IfcStructuralActivity(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal) : IfcProduct(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal)));; populate_derived(); }

// Function implementations for IfcStructuralAnalysisModel
::Ifc4x3_rc4::IfcAnalysisModelTypeEnum::Value Ifc4x3_rc4::IfcStructuralAnalysisModel::PredefinedType() const {  return ::Ifc4x3_rc4::IfcAnalysisModelTypeEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcStructuralAnalysisModel::setPredefinedType(::Ifc4x3_rc4::IfcAnalysisModelTypeEnum::Value v) { set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcAnalysisModelTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcAxis2Placement3D* Ifc4x3_rc4::IfcStructuralAnalysisModel::OrientationOf2DPlane() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcAxis2Placement3D>(true); }
void Ifc4x3_rc4::IfcStructuralAnalysisModel::setOrientationOf2DPlane(::Ifc4x3_rc4::IfcAxis2Placement3D* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcStructuralLoadGroup >::ptr > Ifc4x3_rc4::IfcStructuralAnalysisModel::LoadedBy() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcStructuralLoadGroup >(); }
void Ifc4x3_rc4::IfcStructuralAnalysisModel::setLoadedBy(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcStructuralLoadGroup >::ptr > v) { if (v) {set_attribute_value(7, (*v)->generalize());} else {unset_attribute_value(7);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcStructuralResultGroup >::ptr > Ifc4x3_rc4::IfcStructuralAnalysisModel::HasResults() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(8); return es->as< ::Ifc4x3_rc4::IfcStructuralResultGroup >(); }
void Ifc4x3_rc4::IfcStructuralAnalysisModel::setHasResults(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcStructuralResultGroup >::ptr > v) { if (v) {set_attribute_value(8, (*v)->generalize());} else {unset_attribute_value(8);} }
::Ifc4x3_rc4::IfcObjectPlacement* Ifc4x3_rc4::IfcStructuralAnalysisModel::SharedPlacement() const { if(data_.get_attribute_value(9).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcObjectPlacement>(true); }
void Ifc4x3_rc4::IfcStructuralAnalysisModel::setSharedPlacement(::Ifc4x3_rc4::IfcObjectPlacement* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralAnalysisModel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1083]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralAnalysisModel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1083]); }
Ifc4x3_rc4::IfcStructuralAnalysisModel::IfcStructuralAnalysisModel(IfcEntityInstanceData&& e) : IfcSystem(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralAnalysisModel::IfcStructuralAnalysisModel(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcAnalysisModelTypeEnum::Value v6_PredefinedType, ::Ifc4x3_rc4::IfcAxis2Placement3D* v7_OrientationOf2DPlane, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcStructuralLoadGroup >::ptr > v8_LoadedBy, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcStructuralResultGroup >::ptr > v9_HasResults, ::Ifc4x3_rc4::IfcObjectPlacement* v10_SharedPlacement) : IfcSystem(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcAnalysisModelTypeEnum::Class(),(size_t)v6_PredefinedType)));set_attribute_value(6, v7_OrientationOf2DPlane ? v7_OrientationOf2DPlane->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_LoadedBy) {set_attribute_value(7, (*v8_LoadedBy)->generalize()); } if (v9_HasResults) {set_attribute_value(8, (*v9_HasResults)->generalize()); }set_attribute_value(9, v10_SharedPlacement ? v10_SharedPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcStructuralConnection
::Ifc4x3_rc4::IfcBoundaryCondition* Ifc4x3_rc4::IfcStructuralConnection::AppliedCondition() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcBoundaryCondition>(true); }
void Ifc4x3_rc4::IfcStructuralConnection::setAppliedCondition(::Ifc4x3_rc4::IfcBoundaryCondition* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }

::Ifc4x3_rc4::IfcRelConnectsStructuralMember::list::ptr Ifc4x3_rc4::IfcStructuralConnection::ConnectsStructuralMembers() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[928], 5)->as<IfcRelConnectsStructuralMember>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcStructuralConnection::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1084]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralConnection::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1084]); }
Ifc4x3_rc4::IfcStructuralConnection::IfcStructuralConnection(IfcEntityInstanceData&& e) : IfcStructuralItem(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralConnection::IfcStructuralConnection(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcBoundaryCondition* v8_AppliedCondition) : IfcStructuralItem(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedCondition ? v8_AppliedCondition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcStructuralConnectionCondition
boost::optional< std::string > Ifc4x3_rc4::IfcStructuralConnectionCondition::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcStructuralConnectionCondition::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralConnectionCondition::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1085]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralConnectionCondition::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1085]); }
Ifc4x3_rc4::IfcStructuralConnectionCondition::IfcStructuralConnectionCondition(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralConnectionCondition::IfcStructuralConnectionCondition(boost::optional< std::string > v1_Name) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(1))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }; populate_derived(); }

// Function implementations for IfcStructuralCurveAction
boost::optional< ::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value > Ifc4x3_rc4::IfcStructuralCurveAction::ProjectedOrTrue() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcStructuralCurveAction::setProjectedOrTrue(boost::optional< ::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }
::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value Ifc4x3_rc4::IfcStructuralCurveAction::PredefinedType() const {  return ::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcStructuralCurveAction::setPredefinedType(::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value v) { set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralCurveAction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1086]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralCurveAction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1086]); }
Ifc4x3_rc4::IfcStructuralCurveAction::IfcStructuralCurveAction(IfcEntityInstanceData&& e) : IfcStructuralAction(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralCurveAction::IfcStructuralCurveAction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal, boost::optional< bool > v10_DestabilizingLoad, boost::optional< ::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value > v11_ProjectedOrTrue, ::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value v12_PredefinedType) : IfcStructuralAction(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal))); if (v10_DestabilizingLoad) {set_attribute_value(9, (*v10_DestabilizingLoad)); } if (v11_ProjectedOrTrue) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Class(),(size_t)*v11_ProjectedOrTrue))); }set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Class(),(size_t)v12_PredefinedType)));; populate_derived(); }

// Function implementations for IfcStructuralCurveConnection
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcStructuralCurveConnection::Axis() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcStructuralCurveConnection::setAxis(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralCurveConnection::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1088]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralCurveConnection::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1088]); }
Ifc4x3_rc4::IfcStructuralCurveConnection::IfcStructuralCurveConnection(IfcEntityInstanceData&& e) : IfcStructuralConnection(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralCurveConnection::IfcStructuralCurveConnection(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcBoundaryCondition* v8_AppliedCondition, ::Ifc4x3_rc4::IfcDirection* v9_Axis) : IfcStructuralConnection(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedCondition ? v8_AppliedCondition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, v9_Axis ? v9_Axis->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcStructuralCurveMember
::Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Value Ifc4x3_rc4::IfcStructuralCurveMember::PredefinedType() const {  return ::Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcStructuralCurveMember::setPredefinedType(::Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Value v) { set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(7); }
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcStructuralCurveMember::Axis() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcStructuralCurveMember::setAxis(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralCurveMember::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1089]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralCurveMember::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1089]); }
Ifc4x3_rc4::IfcStructuralCurveMember::IfcStructuralCurveMember(IfcEntityInstanceData&& e) : IfcStructuralMember(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralCurveMember::IfcStructuralCurveMember(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Value v8_PredefinedType, ::Ifc4x3_rc4::IfcDirection* v9_Axis) : IfcStructuralMember(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Class(),(size_t)v8_PredefinedType)));set_attribute_value(8, v9_Axis ? v9_Axis->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcStructuralCurveMemberVarying


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralCurveMemberVarying::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1091]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralCurveMemberVarying::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1091]); }
Ifc4x3_rc4::IfcStructuralCurveMemberVarying::IfcStructuralCurveMemberVarying(IfcEntityInstanceData&& e) : IfcStructuralCurveMember(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralCurveMemberVarying::IfcStructuralCurveMemberVarying(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Value v8_PredefinedType, ::Ifc4x3_rc4::IfcDirection* v9_Axis) : IfcStructuralCurveMember(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcStructuralCurveMemberTypeEnum::Class(),(size_t)v8_PredefinedType)));set_attribute_value(8, v9_Axis ? v9_Axis->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcStructuralCurveReaction
::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value Ifc4x3_rc4::IfcStructuralCurveReaction::PredefinedType() const {  return ::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcStructuralCurveReaction::setPredefinedType(::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralCurveReaction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1092]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralCurveReaction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1092]); }
Ifc4x3_rc4::IfcStructuralCurveReaction::IfcStructuralCurveReaction(IfcEntityInstanceData&& e) : IfcStructuralReaction(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralCurveReaction::IfcStructuralCurveReaction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal, ::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value v10_PredefinedType) : IfcStructuralReaction(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal)));set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcStructuralItem

::Ifc4x3_rc4::IfcRelConnectsStructuralActivity::list::ptr Ifc4x3_rc4::IfcStructuralItem::AssignedStructuralActivity() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[927], 4)->as<IfcRelConnectsStructuralActivity>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcStructuralItem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1093]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralItem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1093]); }
Ifc4x3_rc4::IfcStructuralItem::IfcStructuralItem(IfcEntityInstanceData&& e) : IfcProduct(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralItem::IfcStructuralItem(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation) : IfcProduct(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcStructuralLinearAction


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLinearAction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1094]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLinearAction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1094]); }
Ifc4x3_rc4::IfcStructuralLinearAction::IfcStructuralLinearAction(IfcEntityInstanceData&& e) : IfcStructuralCurveAction(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLinearAction::IfcStructuralLinearAction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal, boost::optional< bool > v10_DestabilizingLoad, boost::optional< ::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value > v11_ProjectedOrTrue, ::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Value v12_PredefinedType) : IfcStructuralCurveAction(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal))); if (v10_DestabilizingLoad) {set_attribute_value(9, (*v10_DestabilizingLoad)); } if (v11_ProjectedOrTrue) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Class(),(size_t)*v11_ProjectedOrTrue))); }set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcStructuralCurveActivityTypeEnum::Class(),(size_t)v12_PredefinedType)));; populate_derived(); }

// Function implementations for IfcStructuralLoad
boost::optional< std::string > Ifc4x3_rc4::IfcStructuralLoad::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcStructuralLoad::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoad::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1095]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoad::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1095]); }
Ifc4x3_rc4::IfcStructuralLoad::IfcStructuralLoad(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoad::IfcStructuralLoad(boost::optional< std::string > v1_Name) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(1))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadCase
boost::optional< std::vector< double > /*[3:3]*/ > Ifc4x3_rc4::IfcStructuralLoadCase::SelfWeightCoefficients() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::vector< double > /*[3:3]*/ v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcStructuralLoadCase::setSelfWeightCoefficients(boost::optional< std::vector< double > /*[3:3]*/ > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1096]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1096]); }
Ifc4x3_rc4::IfcStructuralLoadCase::IfcStructuralLoadCase(IfcEntityInstanceData&& e) : IfcStructuralLoadGroup(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadCase::IfcStructuralLoadCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcLoadGroupTypeEnum::Value v6_PredefinedType, ::Ifc4x3_rc4::IfcActionTypeEnum::Value v7_ActionType, ::Ifc4x3_rc4::IfcActionSourceTypeEnum::Value v8_ActionSource, boost::optional< double > v9_Coefficient, boost::optional< std::string > v10_Purpose, boost::optional< std::vector< double > /*[3:3]*/ > v11_SelfWeightCoefficients) : IfcStructuralLoadGroup(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcLoadGroupTypeEnum::Class(),(size_t)v6_PredefinedType)));set_attribute_value(6, (EnumerationReference(&::Ifc4x3_rc4::IfcActionTypeEnum::Class(),(size_t)v7_ActionType)));set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcActionSourceTypeEnum::Class(),(size_t)v8_ActionSource))); if (v9_Coefficient) {set_attribute_value(8, (*v9_Coefficient)); } if (v10_Purpose) {set_attribute_value(9, (*v10_Purpose)); } if (v11_SelfWeightCoefficients) {set_attribute_value(10, (*v11_SelfWeightCoefficients)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadConfiguration
aggregate_of< ::Ifc4x3_rc4::IfcStructuralLoadOrResult >::ptr Ifc4x3_rc4::IfcStructuralLoadConfiguration::Values() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcStructuralLoadOrResult >(); }
void Ifc4x3_rc4::IfcStructuralLoadConfiguration::setValues(aggregate_of< ::Ifc4x3_rc4::IfcStructuralLoadOrResult >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
boost::optional< std::vector< std::vector< double > > > Ifc4x3_rc4::IfcStructuralLoadConfiguration::Locations() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::vector< std::vector< double > > v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcStructuralLoadConfiguration::setLocations(boost::optional< std::vector< std::vector< double > > > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadConfiguration::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1097]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadConfiguration::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1097]); }
Ifc4x3_rc4::IfcStructuralLoadConfiguration::IfcStructuralLoadConfiguration(IfcEntityInstanceData&& e) : IfcStructuralLoad(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadConfiguration::IfcStructuralLoadConfiguration(boost::optional< std::string > v1_Name, aggregate_of< ::Ifc4x3_rc4::IfcStructuralLoadOrResult >::ptr v2_Values, boost::optional< std::vector< std::vector< double > > > v3_Locations) : IfcStructuralLoad(IfcEntityInstanceData(storage_t(3))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, (v2_Values)->generalize()); if (v3_Locations) {set_attribute_value(2, (*v3_Locations)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadGroup
::Ifc4x3_rc4::IfcLoadGroupTypeEnum::Value Ifc4x3_rc4::IfcStructuralLoadGroup::PredefinedType() const {  return ::Ifc4x3_rc4::IfcLoadGroupTypeEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcStructuralLoadGroup::setPredefinedType(::Ifc4x3_rc4::IfcLoadGroupTypeEnum::Value v) { set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcLoadGroupTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcActionTypeEnum::Value Ifc4x3_rc4::IfcStructuralLoadGroup::ActionType() const {  return ::Ifc4x3_rc4::IfcActionTypeEnum::FromString(data_.get_attribute_value(6)); }
void Ifc4x3_rc4::IfcStructuralLoadGroup::setActionType(::Ifc4x3_rc4::IfcActionTypeEnum::Value v) { set_attribute_value(6, EnumerationReference(&::Ifc4x3_rc4::IfcActionTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(6); }
::Ifc4x3_rc4::IfcActionSourceTypeEnum::Value Ifc4x3_rc4::IfcStructuralLoadGroup::ActionSource() const {  return ::Ifc4x3_rc4::IfcActionSourceTypeEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcStructuralLoadGroup::setActionSource(::Ifc4x3_rc4::IfcActionSourceTypeEnum::Value v) { set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcActionSourceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(7); }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadGroup::Coefficient() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcStructuralLoadGroup::setCoefficient(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< std::string > Ifc4x3_rc4::IfcStructuralLoadGroup::Purpose() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcStructuralLoadGroup::setPurpose(boost::optional< std::string > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }

::Ifc4x3_rc4::IfcStructuralResultGroup::list::ptr Ifc4x3_rc4::IfcStructuralLoadGroup::SourceOfResultGroup() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1114], 6)->as<IfcStructuralResultGroup>(); }
::Ifc4x3_rc4::IfcStructuralAnalysisModel::list::ptr Ifc4x3_rc4::IfcStructuralLoadGroup::LoadGroupFor() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1083], 7)->as<IfcStructuralAnalysisModel>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadGroup::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1098]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadGroup::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1098]); }
Ifc4x3_rc4::IfcStructuralLoadGroup::IfcStructuralLoadGroup(IfcEntityInstanceData&& e) : IfcGroup(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadGroup::IfcStructuralLoadGroup(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcLoadGroupTypeEnum::Value v6_PredefinedType, ::Ifc4x3_rc4::IfcActionTypeEnum::Value v7_ActionType, ::Ifc4x3_rc4::IfcActionSourceTypeEnum::Value v8_ActionSource, boost::optional< double > v9_Coefficient, boost::optional< std::string > v10_Purpose) : IfcGroup(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcLoadGroupTypeEnum::Class(),(size_t)v6_PredefinedType)));set_attribute_value(6, (EnumerationReference(&::Ifc4x3_rc4::IfcActionTypeEnum::Class(),(size_t)v7_ActionType)));set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcActionSourceTypeEnum::Class(),(size_t)v8_ActionSource))); if (v9_Coefficient) {set_attribute_value(8, (*v9_Coefficient)); } if (v10_Purpose) {set_attribute_value(9, (*v10_Purpose)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadLinearForce
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadLinearForce::LinearForceX() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcStructuralLoadLinearForce::setLinearForceX(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadLinearForce::LinearForceY() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcStructuralLoadLinearForce::setLinearForceY(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadLinearForce::LinearForceZ() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcStructuralLoadLinearForce::setLinearForceZ(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadLinearForce::LinearMomentX() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcStructuralLoadLinearForce::setLinearMomentX(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadLinearForce::LinearMomentY() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcStructuralLoadLinearForce::setLinearMomentY(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadLinearForce::LinearMomentZ() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcStructuralLoadLinearForce::setLinearMomentZ(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadLinearForce::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1099]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadLinearForce::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1099]); }
Ifc4x3_rc4::IfcStructuralLoadLinearForce::IfcStructuralLoadLinearForce(IfcEntityInstanceData&& e) : IfcStructuralLoadStatic(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadLinearForce::IfcStructuralLoadLinearForce(boost::optional< std::string > v1_Name, boost::optional< double > v2_LinearForceX, boost::optional< double > v3_LinearForceY, boost::optional< double > v4_LinearForceZ, boost::optional< double > v5_LinearMomentX, boost::optional< double > v6_LinearMomentY, boost::optional< double > v7_LinearMomentZ) : IfcStructuralLoadStatic(IfcEntityInstanceData(storage_t(7))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_LinearForceX) {set_attribute_value(1, (*v2_LinearForceX)); } if (v3_LinearForceY) {set_attribute_value(2, (*v3_LinearForceY)); } if (v4_LinearForceZ) {set_attribute_value(3, (*v4_LinearForceZ)); } if (v5_LinearMomentX) {set_attribute_value(4, (*v5_LinearMomentX)); } if (v6_LinearMomentY) {set_attribute_value(5, (*v6_LinearMomentY)); } if (v7_LinearMomentZ) {set_attribute_value(6, (*v7_LinearMomentZ)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadOrResult


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadOrResult::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1100]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadOrResult::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1100]); }
Ifc4x3_rc4::IfcStructuralLoadOrResult::IfcStructuralLoadOrResult(IfcEntityInstanceData&& e) : IfcStructuralLoad(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadOrResult::IfcStructuralLoadOrResult(boost::optional< std::string > v1_Name) : IfcStructuralLoad(IfcEntityInstanceData(storage_t(1))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadPlanarForce
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadPlanarForce::PlanarForceX() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcStructuralLoadPlanarForce::setPlanarForceX(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadPlanarForce::PlanarForceY() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcStructuralLoadPlanarForce::setPlanarForceY(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadPlanarForce::PlanarForceZ() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcStructuralLoadPlanarForce::setPlanarForceZ(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadPlanarForce::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1101]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadPlanarForce::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1101]); }
Ifc4x3_rc4::IfcStructuralLoadPlanarForce::IfcStructuralLoadPlanarForce(IfcEntityInstanceData&& e) : IfcStructuralLoadStatic(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadPlanarForce::IfcStructuralLoadPlanarForce(boost::optional< std::string > v1_Name, boost::optional< double > v2_PlanarForceX, boost::optional< double > v3_PlanarForceY, boost::optional< double > v4_PlanarForceZ) : IfcStructuralLoadStatic(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_PlanarForceX) {set_attribute_value(1, (*v2_PlanarForceX)); } if (v3_PlanarForceY) {set_attribute_value(2, (*v3_PlanarForceY)); } if (v4_PlanarForceZ) {set_attribute_value(3, (*v4_PlanarForceZ)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadSingleDisplacement
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::DisplacementX() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::setDisplacementX(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::DisplacementY() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::setDisplacementY(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::DisplacementZ() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::setDisplacementZ(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::RotationalDisplacementRX() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::setRotationalDisplacementRX(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::RotationalDisplacementRY() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::setRotationalDisplacementRY(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::RotationalDisplacementRZ() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::setRotationalDisplacementRZ(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1102]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1102]); }
Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::IfcStructuralLoadSingleDisplacement(IfcEntityInstanceData&& e) : IfcStructuralLoadStatic(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadSingleDisplacement::IfcStructuralLoadSingleDisplacement(boost::optional< std::string > v1_Name, boost::optional< double > v2_DisplacementX, boost::optional< double > v3_DisplacementY, boost::optional< double > v4_DisplacementZ, boost::optional< double > v5_RotationalDisplacementRX, boost::optional< double > v6_RotationalDisplacementRY, boost::optional< double > v7_RotationalDisplacementRZ) : IfcStructuralLoadStatic(IfcEntityInstanceData(storage_t(7))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_DisplacementX) {set_attribute_value(1, (*v2_DisplacementX)); } if (v3_DisplacementY) {set_attribute_value(2, (*v3_DisplacementY)); } if (v4_DisplacementZ) {set_attribute_value(3, (*v4_DisplacementZ)); } if (v5_RotationalDisplacementRX) {set_attribute_value(4, (*v5_RotationalDisplacementRX)); } if (v6_RotationalDisplacementRY) {set_attribute_value(5, (*v6_RotationalDisplacementRY)); } if (v7_RotationalDisplacementRZ) {set_attribute_value(6, (*v7_RotationalDisplacementRZ)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadSingleDisplacementDistortion
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleDisplacementDistortion::Distortion() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleDisplacementDistortion::setDistortion(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadSingleDisplacementDistortion::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1103]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadSingleDisplacementDistortion::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1103]); }
Ifc4x3_rc4::IfcStructuralLoadSingleDisplacementDistortion::IfcStructuralLoadSingleDisplacementDistortion(IfcEntityInstanceData&& e) : IfcStructuralLoadSingleDisplacement(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadSingleDisplacementDistortion::IfcStructuralLoadSingleDisplacementDistortion(boost::optional< std::string > v1_Name, boost::optional< double > v2_DisplacementX, boost::optional< double > v3_DisplacementY, boost::optional< double > v4_DisplacementZ, boost::optional< double > v5_RotationalDisplacementRX, boost::optional< double > v6_RotationalDisplacementRY, boost::optional< double > v7_RotationalDisplacementRZ, boost::optional< double > v8_Distortion) : IfcStructuralLoadSingleDisplacement(IfcEntityInstanceData(storage_t(8))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_DisplacementX) {set_attribute_value(1, (*v2_DisplacementX)); } if (v3_DisplacementY) {set_attribute_value(2, (*v3_DisplacementY)); } if (v4_DisplacementZ) {set_attribute_value(3, (*v4_DisplacementZ)); } if (v5_RotationalDisplacementRX) {set_attribute_value(4, (*v5_RotationalDisplacementRX)); } if (v6_RotationalDisplacementRY) {set_attribute_value(5, (*v6_RotationalDisplacementRY)); } if (v7_RotationalDisplacementRZ) {set_attribute_value(6, (*v7_RotationalDisplacementRZ)); } if (v8_Distortion) {set_attribute_value(7, (*v8_Distortion)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadSingleForce
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleForce::ForceX() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleForce::setForceX(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleForce::ForceY() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleForce::setForceY(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleForce::ForceZ() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleForce::setForceZ(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleForce::MomentX() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleForce::setMomentX(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleForce::MomentY() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleForce::setMomentY(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleForce::MomentZ() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleForce::setMomentZ(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadSingleForce::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1104]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadSingleForce::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1104]); }
Ifc4x3_rc4::IfcStructuralLoadSingleForce::IfcStructuralLoadSingleForce(IfcEntityInstanceData&& e) : IfcStructuralLoadStatic(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadSingleForce::IfcStructuralLoadSingleForce(boost::optional< std::string > v1_Name, boost::optional< double > v2_ForceX, boost::optional< double > v3_ForceY, boost::optional< double > v4_ForceZ, boost::optional< double > v5_MomentX, boost::optional< double > v6_MomentY, boost::optional< double > v7_MomentZ) : IfcStructuralLoadStatic(IfcEntityInstanceData(storage_t(7))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_ForceX) {set_attribute_value(1, (*v2_ForceX)); } if (v3_ForceY) {set_attribute_value(2, (*v3_ForceY)); } if (v4_ForceZ) {set_attribute_value(3, (*v4_ForceZ)); } if (v5_MomentX) {set_attribute_value(4, (*v5_MomentX)); } if (v6_MomentY) {set_attribute_value(5, (*v6_MomentY)); } if (v7_MomentZ) {set_attribute_value(6, (*v7_MomentZ)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadSingleForceWarping
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadSingleForceWarping::WarpingMoment() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcStructuralLoadSingleForceWarping::setWarpingMoment(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadSingleForceWarping::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1105]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadSingleForceWarping::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1105]); }
Ifc4x3_rc4::IfcStructuralLoadSingleForceWarping::IfcStructuralLoadSingleForceWarping(IfcEntityInstanceData&& e) : IfcStructuralLoadSingleForce(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadSingleForceWarping::IfcStructuralLoadSingleForceWarping(boost::optional< std::string > v1_Name, boost::optional< double > v2_ForceX, boost::optional< double > v3_ForceY, boost::optional< double > v4_ForceZ, boost::optional< double > v5_MomentX, boost::optional< double > v6_MomentY, boost::optional< double > v7_MomentZ, boost::optional< double > v8_WarpingMoment) : IfcStructuralLoadSingleForce(IfcEntityInstanceData(storage_t(8))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_ForceX) {set_attribute_value(1, (*v2_ForceX)); } if (v3_ForceY) {set_attribute_value(2, (*v3_ForceY)); } if (v4_ForceZ) {set_attribute_value(3, (*v4_ForceZ)); } if (v5_MomentX) {set_attribute_value(4, (*v5_MomentX)); } if (v6_MomentY) {set_attribute_value(5, (*v6_MomentY)); } if (v7_MomentZ) {set_attribute_value(6, (*v7_MomentZ)); } if (v8_WarpingMoment) {set_attribute_value(7, (*v8_WarpingMoment)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadStatic


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadStatic::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1106]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadStatic::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1106]); }
Ifc4x3_rc4::IfcStructuralLoadStatic::IfcStructuralLoadStatic(IfcEntityInstanceData&& e) : IfcStructuralLoadOrResult(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadStatic::IfcStructuralLoadStatic(boost::optional< std::string > v1_Name) : IfcStructuralLoadOrResult(IfcEntityInstanceData(storage_t(1))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }; populate_derived(); }

// Function implementations for IfcStructuralLoadTemperature
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadTemperature::DeltaTConstant() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcStructuralLoadTemperature::setDeltaTConstant(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadTemperature::DeltaTY() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcStructuralLoadTemperature::setDeltaTY(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcStructuralLoadTemperature::DeltaTZ() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcStructuralLoadTemperature::setDeltaTZ(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadTemperature::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1107]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralLoadTemperature::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1107]); }
Ifc4x3_rc4::IfcStructuralLoadTemperature::IfcStructuralLoadTemperature(IfcEntityInstanceData&& e) : IfcStructuralLoadStatic(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralLoadTemperature::IfcStructuralLoadTemperature(boost::optional< std::string > v1_Name, boost::optional< double > v2_DeltaTConstant, boost::optional< double > v3_DeltaTY, boost::optional< double > v4_DeltaTZ) : IfcStructuralLoadStatic(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_DeltaTConstant) {set_attribute_value(1, (*v2_DeltaTConstant)); } if (v3_DeltaTY) {set_attribute_value(2, (*v3_DeltaTY)); } if (v4_DeltaTZ) {set_attribute_value(3, (*v4_DeltaTZ)); }; populate_derived(); }

// Function implementations for IfcStructuralMember

::Ifc4x3_rc4::IfcRelConnectsStructuralMember::list::ptr Ifc4x3_rc4::IfcStructuralMember::ConnectedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[928], 4)->as<IfcRelConnectsStructuralMember>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcStructuralMember::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1108]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralMember::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1108]); }
Ifc4x3_rc4::IfcStructuralMember::IfcStructuralMember(IfcEntityInstanceData&& e) : IfcStructuralItem(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralMember::IfcStructuralMember(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation) : IfcStructuralItem(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcStructuralPlanarAction


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralPlanarAction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1109]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralPlanarAction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1109]); }
Ifc4x3_rc4::IfcStructuralPlanarAction::IfcStructuralPlanarAction(IfcEntityInstanceData&& e) : IfcStructuralSurfaceAction(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralPlanarAction::IfcStructuralPlanarAction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal, boost::optional< bool > v10_DestabilizingLoad, boost::optional< ::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value > v11_ProjectedOrTrue, ::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value v12_PredefinedType) : IfcStructuralSurfaceAction(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal))); if (v10_DestabilizingLoad) {set_attribute_value(9, (*v10_DestabilizingLoad)); } if (v11_ProjectedOrTrue) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Class(),(size_t)*v11_ProjectedOrTrue))); }set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Class(),(size_t)v12_PredefinedType)));; populate_derived(); }

// Function implementations for IfcStructuralPointAction


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralPointAction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1110]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralPointAction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1110]); }
Ifc4x3_rc4::IfcStructuralPointAction::IfcStructuralPointAction(IfcEntityInstanceData&& e) : IfcStructuralAction(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralPointAction::IfcStructuralPointAction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal, boost::optional< bool > v10_DestabilizingLoad) : IfcStructuralAction(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal))); if (v10_DestabilizingLoad) {set_attribute_value(9, (*v10_DestabilizingLoad)); }; populate_derived(); }

// Function implementations for IfcStructuralPointConnection
::Ifc4x3_rc4::IfcAxis2Placement3D* Ifc4x3_rc4::IfcStructuralPointConnection::ConditionCoordinateSystem() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcAxis2Placement3D>(true); }
void Ifc4x3_rc4::IfcStructuralPointConnection::setConditionCoordinateSystem(::Ifc4x3_rc4::IfcAxis2Placement3D* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralPointConnection::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1111]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralPointConnection::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1111]); }
Ifc4x3_rc4::IfcStructuralPointConnection::IfcStructuralPointConnection(IfcEntityInstanceData&& e) : IfcStructuralConnection(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralPointConnection::IfcStructuralPointConnection(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcBoundaryCondition* v8_AppliedCondition, ::Ifc4x3_rc4::IfcAxis2Placement3D* v9_ConditionCoordinateSystem) : IfcStructuralConnection(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedCondition ? v8_AppliedCondition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, v9_ConditionCoordinateSystem ? v9_ConditionCoordinateSystem->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcStructuralPointReaction


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralPointReaction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1112]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralPointReaction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1112]); }
Ifc4x3_rc4::IfcStructuralPointReaction::IfcStructuralPointReaction(IfcEntityInstanceData&& e) : IfcStructuralReaction(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralPointReaction::IfcStructuralPointReaction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal) : IfcStructuralReaction(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal)));; populate_derived(); }

// Function implementations for IfcStructuralReaction


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralReaction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1113]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralReaction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1113]); }
Ifc4x3_rc4::IfcStructuralReaction::IfcStructuralReaction(IfcEntityInstanceData&& e) : IfcStructuralActivity(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralReaction::IfcStructuralReaction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal) : IfcStructuralActivity(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal)));; populate_derived(); }

// Function implementations for IfcStructuralResultGroup
::Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::Value Ifc4x3_rc4::IfcStructuralResultGroup::TheoryType() const {  return ::Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcStructuralResultGroup::setTheoryType(::Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::Value v) { set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcStructuralLoadGroup* Ifc4x3_rc4::IfcStructuralResultGroup::ResultForLoadGroup() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcStructuralLoadGroup>(true); }
void Ifc4x3_rc4::IfcStructuralResultGroup::setResultForLoadGroup(::Ifc4x3_rc4::IfcStructuralLoadGroup* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
bool Ifc4x3_rc4::IfcStructuralResultGroup::IsLinear() const {  bool v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcStructuralResultGroup::setIsLinear(bool v) { set_attribute_value(7, v);if constexpr (false)unset_attribute_value(7); }

::Ifc4x3_rc4::IfcStructuralAnalysisModel::list::ptr Ifc4x3_rc4::IfcStructuralResultGroup::ResultGroupFor() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1083], 8)->as<IfcStructuralAnalysisModel>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcStructuralResultGroup::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1114]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralResultGroup::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1114]); }
Ifc4x3_rc4::IfcStructuralResultGroup::IfcStructuralResultGroup(IfcEntityInstanceData&& e) : IfcGroup(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralResultGroup::IfcStructuralResultGroup(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::Value v6_TheoryType, ::Ifc4x3_rc4::IfcStructuralLoadGroup* v7_ResultForLoadGroup, bool v8_IsLinear) : IfcGroup(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcAnalysisTheoryTypeEnum::Class(),(size_t)v6_TheoryType)));set_attribute_value(6, v7_ResultForLoadGroup ? v7_ResultForLoadGroup->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (v8_IsLinear));; populate_derived(); }

// Function implementations for IfcStructuralSurfaceAction
boost::optional< ::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value > Ifc4x3_rc4::IfcStructuralSurfaceAction::ProjectedOrTrue() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcStructuralSurfaceAction::setProjectedOrTrue(boost::optional< ::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }
::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value Ifc4x3_rc4::IfcStructuralSurfaceAction::PredefinedType() const {  return ::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcStructuralSurfaceAction::setPredefinedType(::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value v) { set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralSurfaceAction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1115]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralSurfaceAction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1115]); }
Ifc4x3_rc4::IfcStructuralSurfaceAction::IfcStructuralSurfaceAction(IfcEntityInstanceData&& e) : IfcStructuralAction(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralSurfaceAction::IfcStructuralSurfaceAction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal, boost::optional< bool > v10_DestabilizingLoad, boost::optional< ::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Value > v11_ProjectedOrTrue, ::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value v12_PredefinedType) : IfcStructuralAction(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal))); if (v10_DestabilizingLoad) {set_attribute_value(9, (*v10_DestabilizingLoad)); } if (v11_ProjectedOrTrue) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcProjectedOrTrueLengthEnum::Class(),(size_t)*v11_ProjectedOrTrue))); }set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Class(),(size_t)v12_PredefinedType)));; populate_derived(); }

// Function implementations for IfcStructuralSurfaceConnection


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralSurfaceConnection::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1117]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralSurfaceConnection::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1117]); }
Ifc4x3_rc4::IfcStructuralSurfaceConnection::IfcStructuralSurfaceConnection(IfcEntityInstanceData&& e) : IfcStructuralConnection(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralSurfaceConnection::IfcStructuralSurfaceConnection(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcBoundaryCondition* v8_AppliedCondition) : IfcStructuralConnection(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedCondition ? v8_AppliedCondition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcStructuralSurfaceMember
::Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Value Ifc4x3_rc4::IfcStructuralSurfaceMember::PredefinedType() const {  return ::Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::FromString(data_.get_attribute_value(7)); }
void Ifc4x3_rc4::IfcStructuralSurfaceMember::setPredefinedType(::Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Value v) { set_attribute_value(7, EnumerationReference(&::Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(7); }
boost::optional< double > Ifc4x3_rc4::IfcStructuralSurfaceMember::Thickness() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcStructuralSurfaceMember::setThickness(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralSurfaceMember::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1118]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralSurfaceMember::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1118]); }
Ifc4x3_rc4::IfcStructuralSurfaceMember::IfcStructuralSurfaceMember(IfcEntityInstanceData&& e) : IfcStructuralMember(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralSurfaceMember::IfcStructuralSurfaceMember(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Value v8_PredefinedType, boost::optional< double > v9_Thickness) : IfcStructuralMember(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Class(),(size_t)v8_PredefinedType))); if (v9_Thickness) {set_attribute_value(8, (*v9_Thickness)); }; populate_derived(); }

// Function implementations for IfcStructuralSurfaceMemberVarying


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralSurfaceMemberVarying::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1120]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralSurfaceMemberVarying::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1120]); }
Ifc4x3_rc4::IfcStructuralSurfaceMemberVarying::IfcStructuralSurfaceMemberVarying(IfcEntityInstanceData&& e) : IfcStructuralSurfaceMember(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralSurfaceMemberVarying::IfcStructuralSurfaceMemberVarying(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Value v8_PredefinedType, boost::optional< double > v9_Thickness) : IfcStructuralSurfaceMember(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, (EnumerationReference(&::Ifc4x3_rc4::IfcStructuralSurfaceMemberTypeEnum::Class(),(size_t)v8_PredefinedType))); if (v9_Thickness) {set_attribute_value(8, (*v9_Thickness)); }; populate_derived(); }

// Function implementations for IfcStructuralSurfaceReaction
::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value Ifc4x3_rc4::IfcStructuralSurfaceReaction::PredefinedType() const {  return ::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcStructuralSurfaceReaction::setPredefinedType(::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcStructuralSurfaceReaction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1121]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStructuralSurfaceReaction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1121]); }
Ifc4x3_rc4::IfcStructuralSurfaceReaction::IfcStructuralSurfaceReaction(IfcEntityInstanceData&& e) : IfcStructuralReaction(std::move(e)) { }
Ifc4x3_rc4::IfcStructuralSurfaceReaction::IfcStructuralSurfaceReaction(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, ::Ifc4x3_rc4::IfcStructuralLoad* v8_AppliedLoad, ::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Value v9_GlobalOrLocal, ::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Value v10_PredefinedType) : IfcStructuralReaction(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_AppliedLoad ? v8_AppliedLoad->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcGlobalOrLocalEnum::Class(),(size_t)v9_GlobalOrLocal)));set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcStructuralSurfaceActivityTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcStyleModel


const IfcParse::entity& Ifc4x3_rc4::IfcStyleModel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1124]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStyleModel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1124]); }
Ifc4x3_rc4::IfcStyleModel::IfcStyleModel(IfcEntityInstanceData&& e) : IfcRepresentation(std::move(e)) { }
Ifc4x3_rc4::IfcStyleModel::IfcStyleModel(::Ifc4x3_rc4::IfcRepresentationContext* v1_ContextOfItems, boost::optional< std::string > v2_RepresentationIdentifier, boost::optional< std::string > v3_RepresentationType, aggregate_of< ::Ifc4x3_rc4::IfcRepresentationItem >::ptr v4_Items) : IfcRepresentation(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_ContextOfItems ? v1_ContextOfItems->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_RepresentationIdentifier) {set_attribute_value(1, (*v2_RepresentationIdentifier)); } if (v3_RepresentationType) {set_attribute_value(2, (*v3_RepresentationType)); }set_attribute_value(3, (v4_Items)->generalize());; populate_derived(); }

// Function implementations for IfcStyledItem
::Ifc4x3_rc4::IfcRepresentationItem* Ifc4x3_rc4::IfcStyledItem::Item() const { if(data_.get_attribute_value(0).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcRepresentationItem>(true); }
void Ifc4x3_rc4::IfcStyledItem::setItem(::Ifc4x3_rc4::IfcRepresentationItem* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcPresentationStyle >::ptr Ifc4x3_rc4::IfcStyledItem::Styles() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcPresentationStyle >(); }
void Ifc4x3_rc4::IfcStyledItem::setStyles(aggregate_of< ::Ifc4x3_rc4::IfcPresentationStyle >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
boost::optional< std::string > Ifc4x3_rc4::IfcStyledItem::Name() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcStyledItem::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcStyledItem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1122]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStyledItem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1122]); }
Ifc4x3_rc4::IfcStyledItem::IfcStyledItem(IfcEntityInstanceData&& e) : IfcRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcStyledItem::IfcStyledItem(::Ifc4x3_rc4::IfcRepresentationItem* v1_Item, aggregate_of< ::Ifc4x3_rc4::IfcPresentationStyle >::ptr v2_Styles, boost::optional< std::string > v3_Name) : IfcRepresentationItem(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Item ? v1_Item->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Styles)->generalize()); if (v3_Name) {set_attribute_value(2, (*v3_Name)); }; populate_derived(); }

// Function implementations for IfcStyledRepresentation


const IfcParse::entity& Ifc4x3_rc4::IfcStyledRepresentation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1123]); }
const IfcParse::entity& Ifc4x3_rc4::IfcStyledRepresentation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1123]); }
Ifc4x3_rc4::IfcStyledRepresentation::IfcStyledRepresentation(IfcEntityInstanceData&& e) : IfcStyleModel(std::move(e)) { }
Ifc4x3_rc4::IfcStyledRepresentation::IfcStyledRepresentation(::Ifc4x3_rc4::IfcRepresentationContext* v1_ContextOfItems, boost::optional< std::string > v2_RepresentationIdentifier, boost::optional< std::string > v3_RepresentationType, aggregate_of< ::Ifc4x3_rc4::IfcRepresentationItem >::ptr v4_Items) : IfcStyleModel(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_ContextOfItems ? v1_ContextOfItems->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_RepresentationIdentifier) {set_attribute_value(1, (*v2_RepresentationIdentifier)); } if (v3_RepresentationType) {set_attribute_value(2, (*v3_RepresentationType)); }set_attribute_value(3, (v4_Items)->generalize());; populate_derived(); }

// Function implementations for IfcSubContractResource
boost::optional< ::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Value > Ifc4x3_rc4::IfcSubContractResource::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcSubContractResource::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSubContractResource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1125]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSubContractResource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1125]); }
Ifc4x3_rc4::IfcSubContractResource::IfcSubContractResource(IfcEntityInstanceData&& e) : IfcConstructionResource(std::move(e)) { }
Ifc4x3_rc4::IfcSubContractResource::IfcSubContractResource(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription, ::Ifc4x3_rc4::IfcResourceTime* v8_Usage, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v9_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v10_BaseQuantity, boost::optional< ::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Value > v11_PredefinedType) : IfcConstructionResource(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); }set_attribute_value(7, v8_Usage ? v8_Usage->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v9_BaseCosts) {set_attribute_value(8, (*v9_BaseCosts)->generalize()); }set_attribute_value(9, v10_BaseQuantity ? v10_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Class(),(size_t)*v11_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSubContractResourceType
::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Value Ifc4x3_rc4::IfcSubContractResourceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcSubContractResourceType::setPredefinedType(::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Value v) { set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcSubContractResourceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1126]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSubContractResourceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1126]); }
Ifc4x3_rc4::IfcSubContractResourceType::IfcSubContractResourceType(IfcEntityInstanceData&& e) : IfcConstructionResourceType(std::move(e)) { }
Ifc4x3_rc4::IfcSubContractResourceType::IfcSubContractResourceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ResourceType, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcAppliedValue >::ptr > v10_BaseCosts, ::Ifc4x3_rc4::IfcPhysicalQuantity* v11_BaseQuantity, ::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Value v12_PredefinedType) : IfcConstructionResourceType(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ResourceType) {set_attribute_value(8, (*v9_ResourceType)); } if (v10_BaseCosts) {set_attribute_value(9, (*v10_BaseCosts)->generalize()); }set_attribute_value(10, v11_BaseQuantity ? v11_BaseQuantity->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcSubContractResourceTypeEnum::Class(),(size_t)v12_PredefinedType)));; populate_derived(); }

// Function implementations for IfcSubedge
::Ifc4x3_rc4::IfcEdge* Ifc4x3_rc4::IfcSubedge::ParentEdge() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcEdge>(true); }
void Ifc4x3_rc4::IfcSubedge::setParentEdge(::Ifc4x3_rc4::IfcEdge* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcSubedge::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1128]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSubedge::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1128]); }
Ifc4x3_rc4::IfcSubedge::IfcSubedge(IfcEntityInstanceData&& e) : IfcEdge(std::move(e)) { }
Ifc4x3_rc4::IfcSubedge::IfcSubedge(::Ifc4x3_rc4::IfcVertex* v1_EdgeStart, ::Ifc4x3_rc4::IfcVertex* v2_EdgeEnd, ::Ifc4x3_rc4::IfcEdge* v3_ParentEdge) : IfcEdge(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_EdgeStart ? v1_EdgeStart->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_EdgeEnd ? v2_EdgeEnd->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_ParentEdge ? v3_ParentEdge->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcSurface


const IfcParse::entity& Ifc4x3_rc4::IfcSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1129]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1129]); }
Ifc4x3_rc4::IfcSurface::IfcSurface(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcSurface::IfcSurface() : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcSurfaceCurve
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcSurfaceCurve::Curve3D() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcSurfaceCurve::setCurve3D(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcPcurve >::ptr Ifc4x3_rc4::IfcSurfaceCurve::AssociatedGeometry() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcPcurve >(); }
void Ifc4x3_rc4::IfcSurfaceCurve::setAssociatedGeometry(aggregate_of< ::Ifc4x3_rc4::IfcPcurve >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Value Ifc4x3_rc4::IfcSurfaceCurve::MasterRepresentation() const {  return ::Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::FromString(data_.get_attribute_value(2)); }
void Ifc4x3_rc4::IfcSurfaceCurve::setMasterRepresentation(::Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Value v) { set_attribute_value(2, EnumerationReference(&::Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Class(), (size_t) v));if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1130]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1130]); }
Ifc4x3_rc4::IfcSurfaceCurve::IfcSurfaceCurve(IfcEntityInstanceData&& e) : IfcCurve(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceCurve::IfcSurfaceCurve(::Ifc4x3_rc4::IfcCurve* v1_Curve3D, aggregate_of< ::Ifc4x3_rc4::IfcPcurve >::ptr v2_AssociatedGeometry, ::Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Value v3_MasterRepresentation) : IfcCurve(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Curve3D ? v1_Curve3D->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_AssociatedGeometry)->generalize());set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcPreferredSurfaceCurveRepresentation::Class(),(size_t)v3_MasterRepresentation)));; populate_derived(); }

// Function implementations for IfcSurfaceCurveSweptAreaSolid
::Ifc4x3_rc4::IfcSurface* Ifc4x3_rc4::IfcSurfaceCurveSweptAreaSolid::ReferenceSurface() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcSurface>(true); }
void Ifc4x3_rc4::IfcSurfaceCurveSweptAreaSolid::setReferenceSurface(::Ifc4x3_rc4::IfcSurface* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceCurveSweptAreaSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1131]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceCurveSweptAreaSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1131]); }
Ifc4x3_rc4::IfcSurfaceCurveSweptAreaSolid::IfcSurfaceCurveSweptAreaSolid(IfcEntityInstanceData&& e) : IfcDirectrixCurveSweptAreaSolid(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceCurveSweptAreaSolid::IfcSurfaceCurveSweptAreaSolid(::Ifc4x3_rc4::IfcProfileDef* v1_SweptArea, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position, ::Ifc4x3_rc4::IfcCurve* v3_Directrix, ::Ifc4x3_rc4::IfcCurveMeasureSelect* v4_StartParam, ::Ifc4x3_rc4::IfcCurveMeasureSelect* v5_EndParam, ::Ifc4x3_rc4::IfcSurface* v6_ReferenceSurface) : IfcDirectrixCurveSweptAreaSolid(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, v1_SweptArea ? v1_SweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_Directrix ? v3_Directrix->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_StartParam ? v4_StartParam->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_EndParam ? v5_EndParam->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_ReferenceSurface ? v6_ReferenceSurface->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcSurfaceFeature
boost::optional< ::Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::Value > Ifc4x3_rc4::IfcSurfaceFeature::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSurfaceFeature::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }

::Ifc4x3_rc4::IfcRelAdheresToElement::list::ptr Ifc4x3_rc4::IfcSurfaceFeature::AdheresToElement() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[903], 5)->as<IfcRelAdheresToElement>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceFeature::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1132]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceFeature::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1132]); }
Ifc4x3_rc4::IfcSurfaceFeature::IfcSurfaceFeature(IfcEntityInstanceData&& e) : IfcFeatureElement(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceFeature::IfcSurfaceFeature(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::Value > v9_PredefinedType) : IfcFeatureElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSurfaceFeatureTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSurfaceOfLinearExtrusion
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcSurfaceOfLinearExtrusion::ExtrudedDirection() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcSurfaceOfLinearExtrusion::setExtrudedDirection(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
double Ifc4x3_rc4::IfcSurfaceOfLinearExtrusion::Depth() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcSurfaceOfLinearExtrusion::setDepth(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceOfLinearExtrusion::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1134]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceOfLinearExtrusion::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1134]); }
Ifc4x3_rc4::IfcSurfaceOfLinearExtrusion::IfcSurfaceOfLinearExtrusion(IfcEntityInstanceData&& e) : IfcSweptSurface(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceOfLinearExtrusion::IfcSurfaceOfLinearExtrusion(::Ifc4x3_rc4::IfcProfileDef* v1_SweptCurve, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position, ::Ifc4x3_rc4::IfcDirection* v3_ExtrudedDirection, double v4_Depth) : IfcSweptSurface(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_SweptCurve ? v1_SweptCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_ExtrudedDirection ? v3_ExtrudedDirection->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Depth));; populate_derived(); }

// Function implementations for IfcSurfaceOfRevolution
::Ifc4x3_rc4::IfcAxis1Placement* Ifc4x3_rc4::IfcSurfaceOfRevolution::AxisPosition() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcAxis1Placement>(true); }
void Ifc4x3_rc4::IfcSurfaceOfRevolution::setAxisPosition(::Ifc4x3_rc4::IfcAxis1Placement* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceOfRevolution::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1135]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceOfRevolution::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1135]); }
Ifc4x3_rc4::IfcSurfaceOfRevolution::IfcSurfaceOfRevolution(IfcEntityInstanceData&& e) : IfcSweptSurface(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceOfRevolution::IfcSurfaceOfRevolution(::Ifc4x3_rc4::IfcProfileDef* v1_SweptCurve, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position, ::Ifc4x3_rc4::IfcAxis1Placement* v3_AxisPosition) : IfcSweptSurface(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_SweptCurve ? v1_SweptCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_AxisPosition ? v3_AxisPosition->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcSurfaceReinforcementArea
boost::optional< std::vector< double > /*[2:3]*/ > Ifc4x3_rc4::IfcSurfaceReinforcementArea::SurfaceReinforcement1() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::vector< double > /*[2:3]*/ v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSurfaceReinforcementArea::setSurfaceReinforcement1(boost::optional< std::vector< double > /*[2:3]*/ > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::vector< double > /*[2:3]*/ > Ifc4x3_rc4::IfcSurfaceReinforcementArea::SurfaceReinforcement2() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::vector< double > /*[2:3]*/ v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcSurfaceReinforcementArea::setSurfaceReinforcement2(boost::optional< std::vector< double > /*[2:3]*/ > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcSurfaceReinforcementArea::ShearReinforcement() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcSurfaceReinforcementArea::setShearReinforcement(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceReinforcementArea::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1137]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceReinforcementArea::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1137]); }
Ifc4x3_rc4::IfcSurfaceReinforcementArea::IfcSurfaceReinforcementArea(IfcEntityInstanceData&& e) : IfcStructuralLoadOrResult(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceReinforcementArea::IfcSurfaceReinforcementArea(boost::optional< std::string > v1_Name, boost::optional< std::vector< double > /*[2:3]*/ > v2_SurfaceReinforcement1, boost::optional< std::vector< double > /*[2:3]*/ > v3_SurfaceReinforcement2, boost::optional< double > v4_ShearReinforcement) : IfcStructuralLoadOrResult(IfcEntityInstanceData(storage_t(4))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_SurfaceReinforcement1) {set_attribute_value(1, (*v2_SurfaceReinforcement1)); } if (v3_SurfaceReinforcement2) {set_attribute_value(2, (*v3_SurfaceReinforcement2)); } if (v4_ShearReinforcement) {set_attribute_value(3, (*v4_ShearReinforcement)); }; populate_derived(); }

// Function implementations for IfcSurfaceStyle
::Ifc4x3_rc4::IfcSurfaceSide::Value Ifc4x3_rc4::IfcSurfaceStyle::Side() const {  return ::Ifc4x3_rc4::IfcSurfaceSide::FromString(data_.get_attribute_value(1)); }
void Ifc4x3_rc4::IfcSurfaceStyle::setSide(::Ifc4x3_rc4::IfcSurfaceSide::Value v) { set_attribute_value(1, EnumerationReference(&::Ifc4x3_rc4::IfcSurfaceSide::Class(), (size_t) v));if constexpr (false)unset_attribute_value(1); }
aggregate_of< ::Ifc4x3_rc4::IfcSurfaceStyleElementSelect >::ptr Ifc4x3_rc4::IfcSurfaceStyle::Styles() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcSurfaceStyleElementSelect >(); }
void Ifc4x3_rc4::IfcSurfaceStyle::setStyles(aggregate_of< ::Ifc4x3_rc4::IfcSurfaceStyleElementSelect >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1139]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1139]); }
Ifc4x3_rc4::IfcSurfaceStyle::IfcSurfaceStyle(IfcEntityInstanceData&& e) : IfcPresentationStyle(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceStyle::IfcSurfaceStyle(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcSurfaceSide::Value v2_Side, aggregate_of< ::Ifc4x3_rc4::IfcSurfaceStyleElementSelect >::ptr v3_Styles) : IfcPresentationStyle(IfcEntityInstanceData(storage_t(3))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcSurfaceSide::Class(),(size_t)v2_Side)));set_attribute_value(2, (v3_Styles)->generalize());; populate_derived(); }

// Function implementations for IfcSurfaceStyleLighting
::Ifc4x3_rc4::IfcColourRgb* Ifc4x3_rc4::IfcSurfaceStyleLighting::DiffuseTransmissionColour() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcColourRgb>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleLighting::setDiffuseTransmissionColour(::Ifc4x3_rc4::IfcColourRgb* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcColourRgb* Ifc4x3_rc4::IfcSurfaceStyleLighting::DiffuseReflectionColour() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcColourRgb>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleLighting::setDiffuseReflectionColour(::Ifc4x3_rc4::IfcColourRgb* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcColourRgb* Ifc4x3_rc4::IfcSurfaceStyleLighting::TransmissionColour() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcColourRgb>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleLighting::setTransmissionColour(::Ifc4x3_rc4::IfcColourRgb* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcColourRgb* Ifc4x3_rc4::IfcSurfaceStyleLighting::ReflectanceColour() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcColourRgb>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleLighting::setReflectanceColour(::Ifc4x3_rc4::IfcColourRgb* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyleLighting::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1141]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyleLighting::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1141]); }
Ifc4x3_rc4::IfcSurfaceStyleLighting::IfcSurfaceStyleLighting(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceStyleLighting::IfcSurfaceStyleLighting(::Ifc4x3_rc4::IfcColourRgb* v1_DiffuseTransmissionColour, ::Ifc4x3_rc4::IfcColourRgb* v2_DiffuseReflectionColour, ::Ifc4x3_rc4::IfcColourRgb* v3_TransmissionColour, ::Ifc4x3_rc4::IfcColourRgb* v4_ReflectanceColour) : IfcPresentationItem(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_DiffuseTransmissionColour ? v1_DiffuseTransmissionColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_DiffuseReflectionColour ? v2_DiffuseReflectionColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_TransmissionColour ? v3_TransmissionColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_ReflectanceColour ? v4_ReflectanceColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcSurfaceStyleRefraction
boost::optional< double > Ifc4x3_rc4::IfcSurfaceStyleRefraction::RefractionIndex() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } double v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcSurfaceStyleRefraction::setRefractionIndex(boost::optional< double > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< double > Ifc4x3_rc4::IfcSurfaceStyleRefraction::DispersionFactor() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSurfaceStyleRefraction::setDispersionFactor(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyleRefraction::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1142]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyleRefraction::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1142]); }
Ifc4x3_rc4::IfcSurfaceStyleRefraction::IfcSurfaceStyleRefraction(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceStyleRefraction::IfcSurfaceStyleRefraction(boost::optional< double > v1_RefractionIndex, boost::optional< double > v2_DispersionFactor) : IfcPresentationItem(IfcEntityInstanceData(storage_t(2))) {  if (v1_RefractionIndex) {set_attribute_value(0, (*v1_RefractionIndex)); } if (v2_DispersionFactor) {set_attribute_value(1, (*v2_DispersionFactor)); }; populate_derived(); }

// Function implementations for IfcSurfaceStyleRendering
::Ifc4x3_rc4::IfcColourOrFactor* Ifc4x3_rc4::IfcSurfaceStyleRendering::DiffuseColour() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcColourOrFactor>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleRendering::setDiffuseColour(::Ifc4x3_rc4::IfcColourOrFactor* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcColourOrFactor* Ifc4x3_rc4::IfcSurfaceStyleRendering::TransmissionColour() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcColourOrFactor>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleRendering::setTransmissionColour(::Ifc4x3_rc4::IfcColourOrFactor* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcColourOrFactor* Ifc4x3_rc4::IfcSurfaceStyleRendering::DiffuseTransmissionColour() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcColourOrFactor>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleRendering::setDiffuseTransmissionColour(::Ifc4x3_rc4::IfcColourOrFactor* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcColourOrFactor* Ifc4x3_rc4::IfcSurfaceStyleRendering::ReflectionColour() const { if(data_.get_attribute_value(5).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcColourOrFactor>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleRendering::setReflectionColour(::Ifc4x3_rc4::IfcColourOrFactor* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }
::Ifc4x3_rc4::IfcColourOrFactor* Ifc4x3_rc4::IfcSurfaceStyleRendering::SpecularColour() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcColourOrFactor>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleRendering::setSpecularColour(::Ifc4x3_rc4::IfcColourOrFactor* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }
::Ifc4x3_rc4::IfcSpecularHighlightSelect* Ifc4x3_rc4::IfcSurfaceStyleRendering::SpecularHighlight() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcSpecularHighlightSelect>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleRendering::setSpecularHighlight(::Ifc4x3_rc4::IfcSpecularHighlightSelect* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }
::Ifc4x3_rc4::IfcReflectanceMethodEnum::Value Ifc4x3_rc4::IfcSurfaceStyleRendering::ReflectanceMethod() const {  return ::Ifc4x3_rc4::IfcReflectanceMethodEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSurfaceStyleRendering::setReflectanceMethod(::Ifc4x3_rc4::IfcReflectanceMethodEnum::Value v) { set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcReflectanceMethodEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyleRendering::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1143]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyleRendering::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1143]); }
Ifc4x3_rc4::IfcSurfaceStyleRendering::IfcSurfaceStyleRendering(IfcEntityInstanceData&& e) : IfcSurfaceStyleShading(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceStyleRendering::IfcSurfaceStyleRendering(::Ifc4x3_rc4::IfcColourRgb* v1_SurfaceColour, boost::optional< double > v2_Transparency, ::Ifc4x3_rc4::IfcColourOrFactor* v3_DiffuseColour, ::Ifc4x3_rc4::IfcColourOrFactor* v4_TransmissionColour, ::Ifc4x3_rc4::IfcColourOrFactor* v5_DiffuseTransmissionColour, ::Ifc4x3_rc4::IfcColourOrFactor* v6_ReflectionColour, ::Ifc4x3_rc4::IfcColourOrFactor* v7_SpecularColour, ::Ifc4x3_rc4::IfcSpecularHighlightSelect* v8_SpecularHighlight, ::Ifc4x3_rc4::IfcReflectanceMethodEnum::Value v9_ReflectanceMethod) : IfcSurfaceStyleShading(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, v1_SurfaceColour ? v1_SurfaceColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_Transparency) {set_attribute_value(1, (*v2_Transparency)); }set_attribute_value(2, v3_DiffuseColour ? v3_DiffuseColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_TransmissionColour ? v4_TransmissionColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_DiffuseTransmissionColour ? v5_DiffuseTransmissionColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(5, v6_ReflectionColour ? v6_ReflectionColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_SpecularColour ? v7_SpecularColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(7, v8_SpecularHighlight ? v8_SpecularHighlight->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcReflectanceMethodEnum::Class(),(size_t)v9_ReflectanceMethod)));; populate_derived(); }

// Function implementations for IfcSurfaceStyleShading
::Ifc4x3_rc4::IfcColourRgb* Ifc4x3_rc4::IfcSurfaceStyleShading::SurfaceColour() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcColourRgb>(true); }
void Ifc4x3_rc4::IfcSurfaceStyleShading::setSurfaceColour(::Ifc4x3_rc4::IfcColourRgb* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
boost::optional< double > Ifc4x3_rc4::IfcSurfaceStyleShading::Transparency() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSurfaceStyleShading::setTransparency(boost::optional< double > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyleShading::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1144]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyleShading::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1144]); }
Ifc4x3_rc4::IfcSurfaceStyleShading::IfcSurfaceStyleShading(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceStyleShading::IfcSurfaceStyleShading(::Ifc4x3_rc4::IfcColourRgb* v1_SurfaceColour, boost::optional< double > v2_Transparency) : IfcPresentationItem(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_SurfaceColour ? v1_SurfaceColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_Transparency) {set_attribute_value(1, (*v2_Transparency)); }; populate_derived(); }

// Function implementations for IfcSurfaceStyleWithTextures
aggregate_of< ::Ifc4x3_rc4::IfcSurfaceTexture >::ptr Ifc4x3_rc4::IfcSurfaceStyleWithTextures::Textures() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcSurfaceTexture >(); }
void Ifc4x3_rc4::IfcSurfaceStyleWithTextures::setTextures(aggregate_of< ::Ifc4x3_rc4::IfcSurfaceTexture >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyleWithTextures::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1145]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceStyleWithTextures::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1145]); }
Ifc4x3_rc4::IfcSurfaceStyleWithTextures::IfcSurfaceStyleWithTextures(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceStyleWithTextures::IfcSurfaceStyleWithTextures(aggregate_of< ::Ifc4x3_rc4::IfcSurfaceTexture >::ptr v1_Textures) : IfcPresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Textures)->generalize());; populate_derived(); }

// Function implementations for IfcSurfaceTexture
bool Ifc4x3_rc4::IfcSurfaceTexture::RepeatS() const {  bool v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcSurfaceTexture::setRepeatS(bool v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
bool Ifc4x3_rc4::IfcSurfaceTexture::RepeatT() const {  bool v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSurfaceTexture::setRepeatT(bool v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< std::string > Ifc4x3_rc4::IfcSurfaceTexture::Mode() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcSurfaceTexture::setMode(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
::Ifc4x3_rc4::IfcCartesianTransformationOperator2D* Ifc4x3_rc4::IfcSurfaceTexture::TextureTransform() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcCartesianTransformationOperator2D>(true); }
void Ifc4x3_rc4::IfcSurfaceTexture::setTextureTransform(::Ifc4x3_rc4::IfcCartesianTransformationOperator2D* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcSurfaceTexture::Parameter() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcSurfaceTexture::setParameter(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }

::Ifc4x3_rc4::IfcTextureCoordinate::list::ptr Ifc4x3_rc4::IfcSurfaceTexture::IsMappedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1197], 0)->as<IfcTextureCoordinate>(); }
::Ifc4x3_rc4::IfcSurfaceStyleWithTextures::list::ptr Ifc4x3_rc4::IfcSurfaceTexture::UsedInStyles() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[1145], 0)->as<IfcSurfaceStyleWithTextures>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceTexture::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1146]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSurfaceTexture::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1146]); }
Ifc4x3_rc4::IfcSurfaceTexture::IfcSurfaceTexture(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcSurfaceTexture::IfcSurfaceTexture(bool v1_RepeatS, bool v2_RepeatT, boost::optional< std::string > v3_Mode, ::Ifc4x3_rc4::IfcCartesianTransformationOperator2D* v4_TextureTransform, boost::optional< std::vector< std::string > /*[1:?]*/ > v5_Parameter) : IfcPresentationItem(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_RepeatS));set_attribute_value(1, (v2_RepeatT)); if (v3_Mode) {set_attribute_value(2, (*v3_Mode)); }set_attribute_value(3, v4_TextureTransform ? v4_TextureTransform->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Parameter) {set_attribute_value(4, (*v5_Parameter)); }; populate_derived(); }

// Function implementations for IfcSweptAreaSolid
::Ifc4x3_rc4::IfcProfileDef* Ifc4x3_rc4::IfcSweptAreaSolid::SweptArea() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcProfileDef>(true); }
void Ifc4x3_rc4::IfcSweptAreaSolid::setSweptArea(::Ifc4x3_rc4::IfcProfileDef* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcAxis2Placement3D* Ifc4x3_rc4::IfcSweptAreaSolid::Position() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcAxis2Placement3D>(true); }
void Ifc4x3_rc4::IfcSweptAreaSolid::setPosition(::Ifc4x3_rc4::IfcAxis2Placement3D* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcSweptAreaSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1147]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSweptAreaSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1147]); }
Ifc4x3_rc4::IfcSweptAreaSolid::IfcSweptAreaSolid(IfcEntityInstanceData&& e) : IfcSolidModel(std::move(e)) { }
Ifc4x3_rc4::IfcSweptAreaSolid::IfcSweptAreaSolid(::Ifc4x3_rc4::IfcProfileDef* v1_SweptArea, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position) : IfcSolidModel(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_SweptArea ? v1_SweptArea->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcSweptDiskSolid
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcSweptDiskSolid::Directrix() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcSweptDiskSolid::setDirectrix(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
double Ifc4x3_rc4::IfcSweptDiskSolid::Radius() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcSweptDiskSolid::setRadius(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< double > Ifc4x3_rc4::IfcSweptDiskSolid::InnerRadius() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcSweptDiskSolid::setInnerRadius(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcSweptDiskSolid::StartParam() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcSweptDiskSolid::setStartParam(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< double > Ifc4x3_rc4::IfcSweptDiskSolid::EndParam() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcSweptDiskSolid::setEndParam(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSweptDiskSolid::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1148]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSweptDiskSolid::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1148]); }
Ifc4x3_rc4::IfcSweptDiskSolid::IfcSweptDiskSolid(IfcEntityInstanceData&& e) : IfcSolidModel(std::move(e)) { }
Ifc4x3_rc4::IfcSweptDiskSolid::IfcSweptDiskSolid(::Ifc4x3_rc4::IfcCurve* v1_Directrix, double v2_Radius, boost::optional< double > v3_InnerRadius, boost::optional< double > v4_StartParam, boost::optional< double > v5_EndParam) : IfcSolidModel(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_Directrix ? v1_Directrix->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Radius)); if (v3_InnerRadius) {set_attribute_value(2, (*v3_InnerRadius)); } if (v4_StartParam) {set_attribute_value(3, (*v4_StartParam)); } if (v5_EndParam) {set_attribute_value(4, (*v5_EndParam)); }; populate_derived(); }

// Function implementations for IfcSweptDiskSolidPolygonal
boost::optional< double > Ifc4x3_rc4::IfcSweptDiskSolidPolygonal::FilletRadius() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcSweptDiskSolidPolygonal::setFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSweptDiskSolidPolygonal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1149]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSweptDiskSolidPolygonal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1149]); }
Ifc4x3_rc4::IfcSweptDiskSolidPolygonal::IfcSweptDiskSolidPolygonal(IfcEntityInstanceData&& e) : IfcSweptDiskSolid(std::move(e)) { }
Ifc4x3_rc4::IfcSweptDiskSolidPolygonal::IfcSweptDiskSolidPolygonal(::Ifc4x3_rc4::IfcCurve* v1_Directrix, double v2_Radius, boost::optional< double > v3_InnerRadius, boost::optional< double > v4_StartParam, boost::optional< double > v5_EndParam, boost::optional< double > v6_FilletRadius) : IfcSweptDiskSolid(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, v1_Directrix ? v1_Directrix->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Radius)); if (v3_InnerRadius) {set_attribute_value(2, (*v3_InnerRadius)); } if (v4_StartParam) {set_attribute_value(3, (*v4_StartParam)); } if (v5_EndParam) {set_attribute_value(4, (*v5_EndParam)); } if (v6_FilletRadius) {set_attribute_value(5, (*v6_FilletRadius)); }; populate_derived(); }

// Function implementations for IfcSweptSurface
::Ifc4x3_rc4::IfcProfileDef* Ifc4x3_rc4::IfcSweptSurface::SweptCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcProfileDef>(true); }
void Ifc4x3_rc4::IfcSweptSurface::setSweptCurve(::Ifc4x3_rc4::IfcProfileDef* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcAxis2Placement3D* Ifc4x3_rc4::IfcSweptSurface::Position() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcAxis2Placement3D>(true); }
void Ifc4x3_rc4::IfcSweptSurface::setPosition(::Ifc4x3_rc4::IfcAxis2Placement3D* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcSweptSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1150]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSweptSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1150]); }
Ifc4x3_rc4::IfcSweptSurface::IfcSweptSurface(IfcEntityInstanceData&& e) : IfcSurface(std::move(e)) { }
Ifc4x3_rc4::IfcSweptSurface::IfcSweptSurface(::Ifc4x3_rc4::IfcProfileDef* v1_SweptCurve, ::Ifc4x3_rc4::IfcAxis2Placement3D* v2_Position) : IfcSurface(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_SweptCurve ? v1_SweptCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_Position ? v2_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcSwitchingDevice
boost::optional< ::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Value > Ifc4x3_rc4::IfcSwitchingDevice::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSwitchingDevice::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSwitchingDevice::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1151]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSwitchingDevice::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1151]); }
Ifc4x3_rc4::IfcSwitchingDevice::IfcSwitchingDevice(IfcEntityInstanceData&& e) : IfcFlowController(std::move(e)) { }
Ifc4x3_rc4::IfcSwitchingDevice::IfcSwitchingDevice(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Value > v9_PredefinedType) : IfcFlowController(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSwitchingDeviceType
::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Value Ifc4x3_rc4::IfcSwitchingDeviceType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSwitchingDeviceType::setPredefinedType(::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcSwitchingDeviceType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1152]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSwitchingDeviceType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1152]); }
Ifc4x3_rc4::IfcSwitchingDeviceType::IfcSwitchingDeviceType(IfcEntityInstanceData&& e) : IfcFlowControllerType(std::move(e)) { }
Ifc4x3_rc4::IfcSwitchingDeviceType::IfcSwitchingDeviceType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Value v10_PredefinedType) : IfcFlowControllerType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSwitchingDeviceTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcSystem

::Ifc4x3_rc4::IfcRelServicesBuildings::list::ptr Ifc4x3_rc4::IfcSystem::ServicesBuildings() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[949], 4)->as<IfcRelServicesBuildings>(); }
::Ifc4x3_rc4::IfcRelReferencedInSpatialStructure::list::ptr Ifc4x3_rc4::IfcSystem::ServicesFacilities() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[947], 4)->as<IfcRelReferencedInSpatialStructure>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcSystem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1154]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSystem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1154]); }
Ifc4x3_rc4::IfcSystem::IfcSystem(IfcEntityInstanceData&& e) : IfcGroup(std::move(e)) { }
Ifc4x3_rc4::IfcSystem::IfcSystem(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType) : IfcGroup(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }; populate_derived(); }

// Function implementations for IfcSystemFurnitureElement
boost::optional< ::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Value > Ifc4x3_rc4::IfcSystemFurnitureElement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcSystemFurnitureElement::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSystemFurnitureElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1155]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSystemFurnitureElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1155]); }
Ifc4x3_rc4::IfcSystemFurnitureElement::IfcSystemFurnitureElement(IfcEntityInstanceData&& e) : IfcFurnishingElement(std::move(e)) { }
Ifc4x3_rc4::IfcSystemFurnitureElement::IfcSystemFurnitureElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Value > v9_PredefinedType) : IfcFurnishingElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcSystemFurnitureElementType
boost::optional< ::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Value > Ifc4x3_rc4::IfcSystemFurnitureElementType::PredefinedType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcSystemFurnitureElementType::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcSystemFurnitureElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1156]); }
const IfcParse::entity& Ifc4x3_rc4::IfcSystemFurnitureElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1156]); }
Ifc4x3_rc4::IfcSystemFurnitureElementType::IfcSystemFurnitureElementType(IfcEntityInstanceData&& e) : IfcFurnishingElementType(std::move(e)) { }
Ifc4x3_rc4::IfcSystemFurnitureElementType::IfcSystemFurnitureElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, boost::optional< ::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Value > v10_PredefinedType) : IfcFurnishingElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); } if (v10_PredefinedType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcSystemFurnitureElementTypeEnum::Class(),(size_t)*v10_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcTShapeProfileDef
double Ifc4x3_rc4::IfcTShapeProfileDef::Depth() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcTShapeProfileDef::setDepth(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcTShapeProfileDef::FlangeWidth() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcTShapeProfileDef::setFlangeWidth(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
double Ifc4x3_rc4::IfcTShapeProfileDef::WebThickness() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcTShapeProfileDef::setWebThickness(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcTShapeProfileDef::FlangeThickness() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcTShapeProfileDef::setFlangeThickness(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< double > Ifc4x3_rc4::IfcTShapeProfileDef::FilletRadius() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcTShapeProfileDef::setFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< double > Ifc4x3_rc4::IfcTShapeProfileDef::FlangeEdgeRadius() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcTShapeProfileDef::setFlangeEdgeRadius(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< double > Ifc4x3_rc4::IfcTShapeProfileDef::WebEdgeRadius() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcTShapeProfileDef::setWebEdgeRadius(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< double > Ifc4x3_rc4::IfcTShapeProfileDef::WebSlope() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcTShapeProfileDef::setWebSlope(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcTShapeProfileDef::FlangeSlope() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcTShapeProfileDef::setFlangeSlope(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTShapeProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1240]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTShapeProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1240]); }
Ifc4x3_rc4::IfcTShapeProfileDef::IfcTShapeProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcTShapeProfileDef::IfcTShapeProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_Depth, double v5_FlangeWidth, double v6_WebThickness, double v7_FlangeThickness, boost::optional< double > v8_FilletRadius, boost::optional< double > v9_FlangeEdgeRadius, boost::optional< double > v10_WebEdgeRadius, boost::optional< double > v11_WebSlope, boost::optional< double > v12_FlangeSlope) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Depth));set_attribute_value(4, (v5_FlangeWidth));set_attribute_value(5, (v6_WebThickness));set_attribute_value(6, (v7_FlangeThickness)); if (v8_FilletRadius) {set_attribute_value(7, (*v8_FilletRadius)); } if (v9_FlangeEdgeRadius) {set_attribute_value(8, (*v9_FlangeEdgeRadius)); } if (v10_WebEdgeRadius) {set_attribute_value(9, (*v10_WebEdgeRadius)); } if (v11_WebSlope) {set_attribute_value(10, (*v11_WebSlope)); } if (v12_FlangeSlope) {set_attribute_value(11, (*v12_FlangeSlope)); }; populate_derived(); }

// Function implementations for IfcTable
boost::optional< std::string > Ifc4x3_rc4::IfcTable::Name() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcTable::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcTableRow >::ptr > Ifc4x3_rc4::IfcTable::Rows() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcTableRow >(); }
void Ifc4x3_rc4::IfcTable::setRows(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcTableRow >::ptr > v) { if (v) {set_attribute_value(1, (*v)->generalize());} else {unset_attribute_value(1);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcTableColumn >::ptr > Ifc4x3_rc4::IfcTable::Columns() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcTableColumn >(); }
void Ifc4x3_rc4::IfcTable::setColumns(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcTableColumn >::ptr > v) { if (v) {set_attribute_value(2, (*v)->generalize());} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTable::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1158]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTable::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1158]); }
Ifc4x3_rc4::IfcTable::IfcTable(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcTable::IfcTable(boost::optional< std::string > v1_Name, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcTableRow >::ptr > v2_Rows, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcTableColumn >::ptr > v3_Columns) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(3))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_Rows) {set_attribute_value(1, (*v2_Rows)->generalize()); } if (v3_Columns) {set_attribute_value(2, (*v3_Columns)->generalize()); }; populate_derived(); }

// Function implementations for IfcTableColumn
boost::optional< std::string > Ifc4x3_rc4::IfcTableColumn::Identifier() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcTableColumn::setIdentifier(boost::optional< std::string > v) { if (v) {set_attribute_value(0, *v);} else {unset_attribute_value(0);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTableColumn::Name() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcTableColumn::setName(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTableColumn::Description() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcTableColumn::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcTableColumn::Unit() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcTableColumn::setUnit(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcReference* Ifc4x3_rc4::IfcTableColumn::ReferencePath() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcReference>(true); }
void Ifc4x3_rc4::IfcTableColumn::setReferencePath(::Ifc4x3_rc4::IfcReference* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcTableColumn::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1159]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTableColumn::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1159]); }
Ifc4x3_rc4::IfcTableColumn::IfcTableColumn(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcTableColumn::IfcTableColumn(boost::optional< std::string > v1_Identifier, boost::optional< std::string > v2_Name, boost::optional< std::string > v3_Description, ::Ifc4x3_rc4::IfcUnit* v4_Unit, ::Ifc4x3_rc4::IfcReference* v5_ReferencePath) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(5))) {  if (v1_Identifier) {set_attribute_value(0, (*v1_Identifier)); } if (v2_Name) {set_attribute_value(1, (*v2_Name)); } if (v3_Description) {set_attribute_value(2, (*v3_Description)); }set_attribute_value(3, v4_Unit ? v4_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_ReferencePath ? v5_ReferencePath->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcTableRow
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > Ifc4x3_rc4::IfcTableRow::RowCells() const { if(data_.get_attribute_value(0).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcValue >(); }
void Ifc4x3_rc4::IfcTableRow::setRowCells(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > v) { if (v) {set_attribute_value(0, (*v)->generalize());} else {unset_attribute_value(0);} }
boost::optional< bool > Ifc4x3_rc4::IfcTableRow::IsHeading() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } bool v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcTableRow::setIsHeading(boost::optional< bool > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTableRow::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1160]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTableRow::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1160]); }
Ifc4x3_rc4::IfcTableRow::IfcTableRow(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcTableRow::IfcTableRow(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr > v1_RowCells, boost::optional< bool > v2_IsHeading) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) {  if (v1_RowCells) {set_attribute_value(0, (*v1_RowCells)->generalize()); } if (v2_IsHeading) {set_attribute_value(1, (*v2_IsHeading)); }; populate_derived(); }

// Function implementations for IfcTank
boost::optional< ::Ifc4x3_rc4::IfcTankTypeEnum::Value > Ifc4x3_rc4::IfcTank::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcTankTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcTank::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcTankTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcTankTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTank::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1161]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTank::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1161]); }
Ifc4x3_rc4::IfcTank::IfcTank(IfcEntityInstanceData&& e) : IfcFlowStorageDevice(std::move(e)) { }
Ifc4x3_rc4::IfcTank::IfcTank(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcTankTypeEnum::Value > v9_PredefinedType) : IfcFlowStorageDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcTankTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcTankType
::Ifc4x3_rc4::IfcTankTypeEnum::Value Ifc4x3_rc4::IfcTankType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcTankTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTankType::setPredefinedType(::Ifc4x3_rc4::IfcTankTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTankTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcTankType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1162]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTankType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1162]); }
Ifc4x3_rc4::IfcTankType::IfcTankType(IfcEntityInstanceData&& e) : IfcFlowStorageDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcTankType::IfcTankType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcTankTypeEnum::Value v10_PredefinedType) : IfcFlowStorageDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTankTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcTask
boost::optional< std::string > Ifc4x3_rc4::IfcTask::Status() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcTask::setStatus(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTask::WorkMethod() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcTask::setWorkMethod(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
bool Ifc4x3_rc4::IfcTask::IsMilestone() const {  bool v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcTask::setIsMilestone(bool v) { set_attribute_value(9, v);if constexpr (false)unset_attribute_value(9); }
boost::optional< int > Ifc4x3_rc4::IfcTask::Priority() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } int v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcTask::setPriority(boost::optional< int > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
::Ifc4x3_rc4::IfcTaskTime* Ifc4x3_rc4::IfcTask::TaskTime() const { if(data_.get_attribute_value(11).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(11)))->as<::Ifc4x3_rc4::IfcTaskTime>(true); }
void Ifc4x3_rc4::IfcTask::setTaskTime(::Ifc4x3_rc4::IfcTaskTime* v) { set_attribute_value(11, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(11); }
boost::optional< ::Ifc4x3_rc4::IfcTaskTypeEnum::Value > Ifc4x3_rc4::IfcTask::PredefinedType() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcTaskTypeEnum::FromString(data_.get_attribute_value(12)); }
void Ifc4x3_rc4::IfcTask::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcTaskTypeEnum::Value > v) { if (v) {set_attribute_value(12, EnumerationReference(&::Ifc4x3_rc4::IfcTaskTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(12);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTask::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1164]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTask::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1164]); }
Ifc4x3_rc4::IfcTask::IfcTask(IfcEntityInstanceData&& e) : IfcProcess(std::move(e)) { }
Ifc4x3_rc4::IfcTask::IfcTask(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< std::string > v7_LongDescription, boost::optional< std::string > v8_Status, boost::optional< std::string > v9_WorkMethod, bool v10_IsMilestone, boost::optional< int > v11_Priority, ::Ifc4x3_rc4::IfcTaskTime* v12_TaskTime, boost::optional< ::Ifc4x3_rc4::IfcTaskTypeEnum::Value > v13_PredefinedType) : IfcProcess(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_LongDescription) {set_attribute_value(6, (*v7_LongDescription)); } if (v8_Status) {set_attribute_value(7, (*v8_Status)); } if (v9_WorkMethod) {set_attribute_value(8, (*v9_WorkMethod)); }set_attribute_value(9, (v10_IsMilestone)); if (v11_Priority) {set_attribute_value(10, (*v11_Priority)); }set_attribute_value(11, v12_TaskTime ? v12_TaskTime->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v13_PredefinedType) {set_attribute_value(12, (EnumerationReference(&::Ifc4x3_rc4::IfcTaskTypeEnum::Class(),(size_t)*v13_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcTaskTime
boost::optional< ::Ifc4x3_rc4::IfcTaskDurationEnum::Value > Ifc4x3_rc4::IfcTaskTime::DurationType() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcTaskDurationEnum::FromString(data_.get_attribute_value(3)); }
void Ifc4x3_rc4::IfcTaskTime::setDurationType(boost::optional< ::Ifc4x3_rc4::IfcTaskDurationEnum::Value > v) { if (v) {set_attribute_value(3, EnumerationReference(&::Ifc4x3_rc4::IfcTaskDurationEnum::Class(), (size_t) *v));} else {unset_attribute_value(3);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::ScheduleDuration() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcTaskTime::setScheduleDuration(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::ScheduleStart() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcTaskTime::setScheduleStart(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::ScheduleFinish() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcTaskTime::setScheduleFinish(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::EarlyStart() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcTaskTime::setEarlyStart(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::EarlyFinish() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcTaskTime::setEarlyFinish(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::LateStart() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcTaskTime::setLateStart(boost::optional< std::string > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::LateFinish() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcTaskTime::setLateFinish(boost::optional< std::string > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::FreeFloat() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcTaskTime::setFreeFloat(boost::optional< std::string > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::TotalFloat() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcTaskTime::setTotalFloat(boost::optional< std::string > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
boost::optional< bool > Ifc4x3_rc4::IfcTaskTime::IsCritical() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } bool v = data_.get_attribute_value(13); return v; }
void Ifc4x3_rc4::IfcTaskTime::setIsCritical(boost::optional< bool > v) { if (v) {set_attribute_value(13, *v);} else {unset_attribute_value(13);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::StatusTime() const { if(data_.get_attribute_value(14).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(14); return v; }
void Ifc4x3_rc4::IfcTaskTime::setStatusTime(boost::optional< std::string > v) { if (v) {set_attribute_value(14, *v);} else {unset_attribute_value(14);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::ActualDuration() const { if(data_.get_attribute_value(15).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(15); return v; }
void Ifc4x3_rc4::IfcTaskTime::setActualDuration(boost::optional< std::string > v) { if (v) {set_attribute_value(15, *v);} else {unset_attribute_value(15);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::ActualStart() const { if(data_.get_attribute_value(16).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(16); return v; }
void Ifc4x3_rc4::IfcTaskTime::setActualStart(boost::optional< std::string > v) { if (v) {set_attribute_value(16, *v);} else {unset_attribute_value(16);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::ActualFinish() const { if(data_.get_attribute_value(17).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(17); return v; }
void Ifc4x3_rc4::IfcTaskTime::setActualFinish(boost::optional< std::string > v) { if (v) {set_attribute_value(17, *v);} else {unset_attribute_value(17);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskTime::RemainingTime() const { if(data_.get_attribute_value(18).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(18); return v; }
void Ifc4x3_rc4::IfcTaskTime::setRemainingTime(boost::optional< std::string > v) { if (v) {set_attribute_value(18, *v);} else {unset_attribute_value(18);} }
boost::optional< double > Ifc4x3_rc4::IfcTaskTime::Completion() const { if(data_.get_attribute_value(19).isNull()) { return boost::none; } double v = data_.get_attribute_value(19); return v; }
void Ifc4x3_rc4::IfcTaskTime::setCompletion(boost::optional< double > v) { if (v) {set_attribute_value(19, *v);} else {unset_attribute_value(19);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTaskTime::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1166]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTaskTime::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1166]); }
Ifc4x3_rc4::IfcTaskTime::IfcTaskTime(IfcEntityInstanceData&& e) : IfcSchedulingTime(std::move(e)) { }
Ifc4x3_rc4::IfcTaskTime::IfcTaskTime(boost::optional< std::string > v1_Name, boost::optional< ::Ifc4x3_rc4::IfcDataOriginEnum::Value > v2_DataOrigin, boost::optional< std::string > v3_UserDefinedDataOrigin, boost::optional< ::Ifc4x3_rc4::IfcTaskDurationEnum::Value > v4_DurationType, boost::optional< std::string > v5_ScheduleDuration, boost::optional< std::string > v6_ScheduleStart, boost::optional< std::string > v7_ScheduleFinish, boost::optional< std::string > v8_EarlyStart, boost::optional< std::string > v9_EarlyFinish, boost::optional< std::string > v10_LateStart, boost::optional< std::string > v11_LateFinish, boost::optional< std::string > v12_FreeFloat, boost::optional< std::string > v13_TotalFloat, boost::optional< bool > v14_IsCritical, boost::optional< std::string > v15_StatusTime, boost::optional< std::string > v16_ActualDuration, boost::optional< std::string > v17_ActualStart, boost::optional< std::string > v18_ActualFinish, boost::optional< std::string > v19_RemainingTime, boost::optional< double > v20_Completion) : IfcSchedulingTime(IfcEntityInstanceData(storage_t(20))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_DataOrigin) {set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(),(size_t)*v2_DataOrigin))); } if (v3_UserDefinedDataOrigin) {set_attribute_value(2, (*v3_UserDefinedDataOrigin)); } if (v4_DurationType) {set_attribute_value(3, (EnumerationReference(&::Ifc4x3_rc4::IfcTaskDurationEnum::Class(),(size_t)*v4_DurationType))); } if (v5_ScheduleDuration) {set_attribute_value(4, (*v5_ScheduleDuration)); } if (v6_ScheduleStart) {set_attribute_value(5, (*v6_ScheduleStart)); } if (v7_ScheduleFinish) {set_attribute_value(6, (*v7_ScheduleFinish)); } if (v8_EarlyStart) {set_attribute_value(7, (*v8_EarlyStart)); } if (v9_EarlyFinish) {set_attribute_value(8, (*v9_EarlyFinish)); } if (v10_LateStart) {set_attribute_value(9, (*v10_LateStart)); } if (v11_LateFinish) {set_attribute_value(10, (*v11_LateFinish)); } if (v12_FreeFloat) {set_attribute_value(11, (*v12_FreeFloat)); } if (v13_TotalFloat) {set_attribute_value(12, (*v13_TotalFloat)); } if (v14_IsCritical) {set_attribute_value(13, (*v14_IsCritical)); } if (v15_StatusTime) {set_attribute_value(14, (*v15_StatusTime)); } if (v16_ActualDuration) {set_attribute_value(15, (*v16_ActualDuration)); } if (v17_ActualStart) {set_attribute_value(16, (*v17_ActualStart)); } if (v18_ActualFinish) {set_attribute_value(17, (*v18_ActualFinish)); } if (v19_RemainingTime) {set_attribute_value(18, (*v19_RemainingTime)); } if (v20_Completion) {set_attribute_value(19, (*v20_Completion)); }; populate_derived(); }

// Function implementations for IfcTaskTimeRecurring
::Ifc4x3_rc4::IfcRecurrencePattern* Ifc4x3_rc4::IfcTaskTimeRecurring::Recurrence() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(20)))->as<::Ifc4x3_rc4::IfcRecurrencePattern>(true); }
void Ifc4x3_rc4::IfcTaskTimeRecurring::setRecurrence(::Ifc4x3_rc4::IfcRecurrencePattern* v) { set_attribute_value(20, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(20); }


const IfcParse::entity& Ifc4x3_rc4::IfcTaskTimeRecurring::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1167]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTaskTimeRecurring::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1167]); }
Ifc4x3_rc4::IfcTaskTimeRecurring::IfcTaskTimeRecurring(IfcEntityInstanceData&& e) : IfcTaskTime(std::move(e)) { }
Ifc4x3_rc4::IfcTaskTimeRecurring::IfcTaskTimeRecurring(boost::optional< std::string > v1_Name, boost::optional< ::Ifc4x3_rc4::IfcDataOriginEnum::Value > v2_DataOrigin, boost::optional< std::string > v3_UserDefinedDataOrigin, boost::optional< ::Ifc4x3_rc4::IfcTaskDurationEnum::Value > v4_DurationType, boost::optional< std::string > v5_ScheduleDuration, boost::optional< std::string > v6_ScheduleStart, boost::optional< std::string > v7_ScheduleFinish, boost::optional< std::string > v8_EarlyStart, boost::optional< std::string > v9_EarlyFinish, boost::optional< std::string > v10_LateStart, boost::optional< std::string > v11_LateFinish, boost::optional< std::string > v12_FreeFloat, boost::optional< std::string > v13_TotalFloat, boost::optional< bool > v14_IsCritical, boost::optional< std::string > v15_StatusTime, boost::optional< std::string > v16_ActualDuration, boost::optional< std::string > v17_ActualStart, boost::optional< std::string > v18_ActualFinish, boost::optional< std::string > v19_RemainingTime, boost::optional< double > v20_Completion, ::Ifc4x3_rc4::IfcRecurrencePattern* v21_Recurrence) : IfcTaskTime(IfcEntityInstanceData(storage_t(21))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_DataOrigin) {set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(),(size_t)*v2_DataOrigin))); } if (v3_UserDefinedDataOrigin) {set_attribute_value(2, (*v3_UserDefinedDataOrigin)); } if (v4_DurationType) {set_attribute_value(3, (EnumerationReference(&::Ifc4x3_rc4::IfcTaskDurationEnum::Class(),(size_t)*v4_DurationType))); } if (v5_ScheduleDuration) {set_attribute_value(4, (*v5_ScheduleDuration)); } if (v6_ScheduleStart) {set_attribute_value(5, (*v6_ScheduleStart)); } if (v7_ScheduleFinish) {set_attribute_value(6, (*v7_ScheduleFinish)); } if (v8_EarlyStart) {set_attribute_value(7, (*v8_EarlyStart)); } if (v9_EarlyFinish) {set_attribute_value(8, (*v9_EarlyFinish)); } if (v10_LateStart) {set_attribute_value(9, (*v10_LateStart)); } if (v11_LateFinish) {set_attribute_value(10, (*v11_LateFinish)); } if (v12_FreeFloat) {set_attribute_value(11, (*v12_FreeFloat)); } if (v13_TotalFloat) {set_attribute_value(12, (*v13_TotalFloat)); } if (v14_IsCritical) {set_attribute_value(13, (*v14_IsCritical)); } if (v15_StatusTime) {set_attribute_value(14, (*v15_StatusTime)); } if (v16_ActualDuration) {set_attribute_value(15, (*v16_ActualDuration)); } if (v17_ActualStart) {set_attribute_value(16, (*v17_ActualStart)); } if (v18_ActualFinish) {set_attribute_value(17, (*v18_ActualFinish)); } if (v19_RemainingTime) {set_attribute_value(18, (*v19_RemainingTime)); } if (v20_Completion) {set_attribute_value(19, (*v20_Completion)); }set_attribute_value(20, v21_Recurrence ? v21_Recurrence->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcTaskType
::Ifc4x3_rc4::IfcTaskTypeEnum::Value Ifc4x3_rc4::IfcTaskType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcTaskTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTaskType::setPredefinedType(::Ifc4x3_rc4::IfcTaskTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTaskTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
boost::optional< std::string > Ifc4x3_rc4::IfcTaskType::WorkMethod() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcTaskType::setWorkMethod(boost::optional< std::string > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTaskType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1168]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTaskType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1168]); }
Ifc4x3_rc4::IfcTaskType::IfcTaskType(IfcEntityInstanceData&& e) : IfcTypeProcess(std::move(e)) { }
Ifc4x3_rc4::IfcTaskType::IfcTaskType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ProcessType, ::Ifc4x3_rc4::IfcTaskTypeEnum::Value v10_PredefinedType, boost::optional< std::string > v11_WorkMethod) : IfcTypeProcess(IfcEntityInstanceData(storage_t(11))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ProcessType) {set_attribute_value(8, (*v9_ProcessType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTaskTypeEnum::Class(),(size_t)v10_PredefinedType))); if (v11_WorkMethod) {set_attribute_value(10, (*v11_WorkMethod)); }; populate_derived(); }

// Function implementations for IfcTelecomAddress
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcTelecomAddress::TelephoneNumbers() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcTelecomAddress::setTelephoneNumbers(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcTelecomAddress::FacsimileNumbers() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcTelecomAddress::setFacsimileNumbers(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTelecomAddress::PagerNumber() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcTelecomAddress::setPagerNumber(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcTelecomAddress::ElectronicMailAddresses() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcTelecomAddress::setElectronicMailAddresses(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTelecomAddress::WWWHomePageURL() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcTelecomAddress::setWWWHomePageURL(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::vector< std::string > /*[1:?]*/ > Ifc4x3_rc4::IfcTelecomAddress::MessagingIDs() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcTelecomAddress::setMessagingIDs(boost::optional< std::vector< std::string > /*[1:?]*/ > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTelecomAddress::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1170]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTelecomAddress::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1170]); }
Ifc4x3_rc4::IfcTelecomAddress::IfcTelecomAddress(IfcEntityInstanceData&& e) : IfcAddress(std::move(e)) { }
Ifc4x3_rc4::IfcTelecomAddress::IfcTelecomAddress(boost::optional< ::Ifc4x3_rc4::IfcAddressTypeEnum::Value > v1_Purpose, boost::optional< std::string > v2_Description, boost::optional< std::string > v3_UserDefinedPurpose, boost::optional< std::vector< std::string > /*[1:?]*/ > v4_TelephoneNumbers, boost::optional< std::vector< std::string > /*[1:?]*/ > v5_FacsimileNumbers, boost::optional< std::string > v6_PagerNumber, boost::optional< std::vector< std::string > /*[1:?]*/ > v7_ElectronicMailAddresses, boost::optional< std::string > v8_WWWHomePageURL, boost::optional< std::vector< std::string > /*[1:?]*/ > v9_MessagingIDs) : IfcAddress(IfcEntityInstanceData(storage_t(9))) {  if (v1_Purpose) {set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcAddressTypeEnum::Class(),(size_t)*v1_Purpose))); } if (v2_Description) {set_attribute_value(1, (*v2_Description)); } if (v3_UserDefinedPurpose) {set_attribute_value(2, (*v3_UserDefinedPurpose)); } if (v4_TelephoneNumbers) {set_attribute_value(3, (*v4_TelephoneNumbers)); } if (v5_FacsimileNumbers) {set_attribute_value(4, (*v5_FacsimileNumbers)); } if (v6_PagerNumber) {set_attribute_value(5, (*v6_PagerNumber)); } if (v7_ElectronicMailAddresses) {set_attribute_value(6, (*v7_ElectronicMailAddresses)); } if (v8_WWWHomePageURL) {set_attribute_value(7, (*v8_WWWHomePageURL)); } if (v9_MessagingIDs) {set_attribute_value(8, (*v9_MessagingIDs)); }; populate_derived(); }

// Function implementations for IfcTendon
boost::optional< ::Ifc4x3_rc4::IfcTendonTypeEnum::Value > Ifc4x3_rc4::IfcTendon::PredefinedType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcTendonTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTendon::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcTendonTypeEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTendonTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }
boost::optional< double > Ifc4x3_rc4::IfcTendon::NominalDiameter() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcTendon::setNominalDiameter(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcTendon::CrossSectionArea() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcTendon::setCrossSectionArea(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< double > Ifc4x3_rc4::IfcTendon::TensionForce() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } double v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcTendon::setTensionForce(boost::optional< double > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }
boost::optional< double > Ifc4x3_rc4::IfcTendon::PreStress() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } double v = data_.get_attribute_value(13); return v; }
void Ifc4x3_rc4::IfcTendon::setPreStress(boost::optional< double > v) { if (v) {set_attribute_value(13, *v);} else {unset_attribute_value(13);} }
boost::optional< double > Ifc4x3_rc4::IfcTendon::FrictionCoefficient() const { if(data_.get_attribute_value(14).isNull()) { return boost::none; } double v = data_.get_attribute_value(14); return v; }
void Ifc4x3_rc4::IfcTendon::setFrictionCoefficient(boost::optional< double > v) { if (v) {set_attribute_value(14, *v);} else {unset_attribute_value(14);} }
boost::optional< double > Ifc4x3_rc4::IfcTendon::AnchorageSlip() const { if(data_.get_attribute_value(15).isNull()) { return boost::none; } double v = data_.get_attribute_value(15); return v; }
void Ifc4x3_rc4::IfcTendon::setAnchorageSlip(boost::optional< double > v) { if (v) {set_attribute_value(15, *v);} else {unset_attribute_value(15);} }
boost::optional< double > Ifc4x3_rc4::IfcTendon::MinCurvatureRadius() const { if(data_.get_attribute_value(16).isNull()) { return boost::none; } double v = data_.get_attribute_value(16); return v; }
void Ifc4x3_rc4::IfcTendon::setMinCurvatureRadius(boost::optional< double > v) { if (v) {set_attribute_value(16, *v);} else {unset_attribute_value(16);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTendon::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1173]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTendon::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1173]); }
Ifc4x3_rc4::IfcTendon::IfcTendon(IfcEntityInstanceData&& e) : IfcReinforcingElement(std::move(e)) { }
Ifc4x3_rc4::IfcTendon::IfcTendon(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_SteelGrade, boost::optional< ::Ifc4x3_rc4::IfcTendonTypeEnum::Value > v10_PredefinedType, boost::optional< double > v11_NominalDiameter, boost::optional< double > v12_CrossSectionArea, boost::optional< double > v13_TensionForce, boost::optional< double > v14_PreStress, boost::optional< double > v15_FrictionCoefficient, boost::optional< double > v16_AnchorageSlip, boost::optional< double > v17_MinCurvatureRadius) : IfcReinforcingElement(IfcEntityInstanceData(storage_t(17))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_SteelGrade) {set_attribute_value(8, (*v9_SteelGrade)); } if (v10_PredefinedType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTendonTypeEnum::Class(),(size_t)*v10_PredefinedType))); } if (v11_NominalDiameter) {set_attribute_value(10, (*v11_NominalDiameter)); } if (v12_CrossSectionArea) {set_attribute_value(11, (*v12_CrossSectionArea)); } if (v13_TensionForce) {set_attribute_value(12, (*v13_TensionForce)); } if (v14_PreStress) {set_attribute_value(13, (*v14_PreStress)); } if (v15_FrictionCoefficient) {set_attribute_value(14, (*v15_FrictionCoefficient)); } if (v16_AnchorageSlip) {set_attribute_value(15, (*v16_AnchorageSlip)); } if (v17_MinCurvatureRadius) {set_attribute_value(16, (*v17_MinCurvatureRadius)); }; populate_derived(); }

// Function implementations for IfcTendonAnchor
boost::optional< ::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Value > Ifc4x3_rc4::IfcTendonAnchor::PredefinedType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTendonAnchor::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTendonAnchor::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1174]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTendonAnchor::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1174]); }
Ifc4x3_rc4::IfcTendonAnchor::IfcTendonAnchor(IfcEntityInstanceData&& e) : IfcReinforcingElement(std::move(e)) { }
Ifc4x3_rc4::IfcTendonAnchor::IfcTendonAnchor(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_SteelGrade, boost::optional< ::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Value > v10_PredefinedType) : IfcReinforcingElement(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_SteelGrade) {set_attribute_value(8, (*v9_SteelGrade)); } if (v10_PredefinedType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Class(),(size_t)*v10_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcTendonAnchorType
::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Value Ifc4x3_rc4::IfcTendonAnchorType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTendonAnchorType::setPredefinedType(::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcTendonAnchorType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1175]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTendonAnchorType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1175]); }
Ifc4x3_rc4::IfcTendonAnchorType::IfcTendonAnchorType(IfcEntityInstanceData&& e) : IfcReinforcingElementType(std::move(e)) { }
Ifc4x3_rc4::IfcTendonAnchorType::IfcTendonAnchorType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Value v10_PredefinedType) : IfcReinforcingElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTendonAnchorTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcTendonConduit
::Ifc4x3_rc4::IfcTendonConduitTypeEnum::Value Ifc4x3_rc4::IfcTendonConduit::PredefinedType() const {  return ::Ifc4x3_rc4::IfcTendonConduitTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTendonConduit::setPredefinedType(::Ifc4x3_rc4::IfcTendonConduitTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTendonConduitTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcTendonConduit::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1177]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTendonConduit::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1177]); }
Ifc4x3_rc4::IfcTendonConduit::IfcTendonConduit(IfcEntityInstanceData&& e) : IfcReinforcingElement(std::move(e)) { }
Ifc4x3_rc4::IfcTendonConduit::IfcTendonConduit(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_SteelGrade, ::Ifc4x3_rc4::IfcTendonConduitTypeEnum::Value v10_PredefinedType) : IfcReinforcingElement(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_SteelGrade) {set_attribute_value(8, (*v9_SteelGrade)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTendonConduitTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcTendonConduitType
::Ifc4x3_rc4::IfcTendonConduitTypeEnum::Value Ifc4x3_rc4::IfcTendonConduitType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcTendonConduitTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTendonConduitType::setPredefinedType(::Ifc4x3_rc4::IfcTendonConduitTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTendonConduitTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcTendonConduitType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1178]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTendonConduitType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1178]); }
Ifc4x3_rc4::IfcTendonConduitType::IfcTendonConduitType(IfcEntityInstanceData&& e) : IfcReinforcingElementType(std::move(e)) { }
Ifc4x3_rc4::IfcTendonConduitType::IfcTendonConduitType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcTendonConduitTypeEnum::Value v10_PredefinedType) : IfcReinforcingElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTendonConduitTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcTendonType
::Ifc4x3_rc4::IfcTendonTypeEnum::Value Ifc4x3_rc4::IfcTendonType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcTendonTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTendonType::setPredefinedType(::Ifc4x3_rc4::IfcTendonTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTendonTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
boost::optional< double > Ifc4x3_rc4::IfcTendonType::NominalDiameter() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcTendonType::setNominalDiameter(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcTendonType::CrossSectionArea() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcTendonType::setCrossSectionArea(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< double > Ifc4x3_rc4::IfcTendonType::SheathDiameter() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } double v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcTendonType::setSheathDiameter(boost::optional< double > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTendonType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1180]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTendonType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1180]); }
Ifc4x3_rc4::IfcTendonType::IfcTendonType(IfcEntityInstanceData&& e) : IfcReinforcingElementType(std::move(e)) { }
Ifc4x3_rc4::IfcTendonType::IfcTendonType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcTendonTypeEnum::Value v10_PredefinedType, boost::optional< double > v11_NominalDiameter, boost::optional< double > v12_CrossSectionArea, boost::optional< double > v13_SheathDiameter) : IfcReinforcingElementType(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTendonTypeEnum::Class(),(size_t)v10_PredefinedType))); if (v11_NominalDiameter) {set_attribute_value(10, (*v11_NominalDiameter)); } if (v12_CrossSectionArea) {set_attribute_value(11, (*v12_CrossSectionArea)); } if (v13_SheathDiameter) {set_attribute_value(12, (*v13_SheathDiameter)); }; populate_derived(); }

// Function implementations for IfcTessellatedFaceSet
::Ifc4x3_rc4::IfcCartesianPointList3D* Ifc4x3_rc4::IfcTessellatedFaceSet::Coordinates() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCartesianPointList3D>(true); }
void Ifc4x3_rc4::IfcTessellatedFaceSet::setCoordinates(::Ifc4x3_rc4::IfcCartesianPointList3D* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }

::Ifc4x3_rc4::IfcIndexedColourMap::list::ptr Ifc4x3_rc4::IfcTessellatedFaceSet::HasColours() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[547], 0)->as<IfcIndexedColourMap>(); }
::Ifc4x3_rc4::IfcIndexedTextureMap::list::ptr Ifc4x3_rc4::IfcTessellatedFaceSet::HasTextures() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[551], 1)->as<IfcIndexedTextureMap>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcTessellatedFaceSet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1182]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTessellatedFaceSet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1182]); }
Ifc4x3_rc4::IfcTessellatedFaceSet::IfcTessellatedFaceSet(IfcEntityInstanceData&& e) : IfcTessellatedItem(std::move(e)) { }
Ifc4x3_rc4::IfcTessellatedFaceSet::IfcTessellatedFaceSet(::Ifc4x3_rc4::IfcCartesianPointList3D* v1_Coordinates) : IfcTessellatedItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_Coordinates ? v1_Coordinates->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcTessellatedItem


const IfcParse::entity& Ifc4x3_rc4::IfcTessellatedItem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1183]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTessellatedItem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1183]); }
Ifc4x3_rc4::IfcTessellatedItem::IfcTessellatedItem(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcTessellatedItem::IfcTessellatedItem() : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcTextLiteral
std::string Ifc4x3_rc4::IfcTextLiteral::Literal() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcTextLiteral::setLiteral(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcAxis2Placement* Ifc4x3_rc4::IfcTextLiteral::Placement() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcAxis2Placement>(true); }
void Ifc4x3_rc4::IfcTextLiteral::setPlacement(::Ifc4x3_rc4::IfcAxis2Placement* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcTextPath::Value Ifc4x3_rc4::IfcTextLiteral::Path() const {  return ::Ifc4x3_rc4::IfcTextPath::FromString(data_.get_attribute_value(2)); }
void Ifc4x3_rc4::IfcTextLiteral::setPath(::Ifc4x3_rc4::IfcTextPath::Value v) { set_attribute_value(2, EnumerationReference(&::Ifc4x3_rc4::IfcTextPath::Class(), (size_t) v));if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcTextLiteral::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1189]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextLiteral::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1189]); }
Ifc4x3_rc4::IfcTextLiteral::IfcTextLiteral(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcTextLiteral::IfcTextLiteral(std::string v1_Literal, ::Ifc4x3_rc4::IfcAxis2Placement* v2_Placement, ::Ifc4x3_rc4::IfcTextPath::Value v3_Path) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_Literal));set_attribute_value(1, v2_Placement ? v2_Placement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcTextPath::Class(),(size_t)v3_Path)));; populate_derived(); }

// Function implementations for IfcTextLiteralWithExtent
::Ifc4x3_rc4::IfcPlanarExtent* Ifc4x3_rc4::IfcTextLiteralWithExtent::Extent() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcPlanarExtent>(true); }
void Ifc4x3_rc4::IfcTextLiteralWithExtent::setExtent(::Ifc4x3_rc4::IfcPlanarExtent* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
std::string Ifc4x3_rc4::IfcTextLiteralWithExtent::BoxAlignment() const {  std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcTextLiteralWithExtent::setBoxAlignment(std::string v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcTextLiteralWithExtent::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1190]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextLiteralWithExtent::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1190]); }
Ifc4x3_rc4::IfcTextLiteralWithExtent::IfcTextLiteralWithExtent(IfcEntityInstanceData&& e) : IfcTextLiteral(std::move(e)) { }
Ifc4x3_rc4::IfcTextLiteralWithExtent::IfcTextLiteralWithExtent(std::string v1_Literal, ::Ifc4x3_rc4::IfcAxis2Placement* v2_Placement, ::Ifc4x3_rc4::IfcTextPath::Value v3_Path, ::Ifc4x3_rc4::IfcPlanarExtent* v4_Extent, std::string v5_BoxAlignment) : IfcTextLiteral(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, (v1_Literal));set_attribute_value(1, v2_Placement ? v2_Placement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, (EnumerationReference(&::Ifc4x3_rc4::IfcTextPath::Class(),(size_t)v3_Path)));set_attribute_value(3, v4_Extent ? v4_Extent->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, (v5_BoxAlignment));; populate_derived(); }

// Function implementations for IfcTextStyle
::Ifc4x3_rc4::IfcTextStyleForDefinedFont* Ifc4x3_rc4::IfcTextStyle::TextCharacterAppearance() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcTextStyleForDefinedFont>(true); }
void Ifc4x3_rc4::IfcTextStyle::setTextCharacterAppearance(::Ifc4x3_rc4::IfcTextStyleForDefinedFont* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcTextStyleTextModel* Ifc4x3_rc4::IfcTextStyle::TextStyle() const { if(data_.get_attribute_value(2).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcTextStyleTextModel>(true); }
void Ifc4x3_rc4::IfcTextStyle::setTextStyle(::Ifc4x3_rc4::IfcTextStyleTextModel* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }
::Ifc4x3_rc4::IfcTextFontSelect* Ifc4x3_rc4::IfcTextStyle::TextFontStyle() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcTextFontSelect>(true); }
void Ifc4x3_rc4::IfcTextStyle::setTextFontStyle(::Ifc4x3_rc4::IfcTextFontSelect* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
boost::optional< bool > Ifc4x3_rc4::IfcTextStyle::ModelOrDraughting() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } bool v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcTextStyle::setModelOrDraughting(boost::optional< bool > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTextStyle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1192]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextStyle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1192]); }
Ifc4x3_rc4::IfcTextStyle::IfcTextStyle(IfcEntityInstanceData&& e) : IfcPresentationStyle(std::move(e)) { }
Ifc4x3_rc4::IfcTextStyle::IfcTextStyle(boost::optional< std::string > v1_Name, ::Ifc4x3_rc4::IfcTextStyleForDefinedFont* v2_TextCharacterAppearance, ::Ifc4x3_rc4::IfcTextStyleTextModel* v3_TextStyle, ::Ifc4x3_rc4::IfcTextFontSelect* v4_TextFontStyle, boost::optional< bool > v5_ModelOrDraughting) : IfcPresentationStyle(IfcEntityInstanceData(storage_t(5))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); }set_attribute_value(1, v2_TextCharacterAppearance ? v2_TextCharacterAppearance->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(2, v3_TextStyle ? v3_TextStyle->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, v4_TextFontStyle ? v4_TextFontStyle->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_ModelOrDraughting) {set_attribute_value(4, (*v5_ModelOrDraughting)); }; populate_derived(); }

// Function implementations for IfcTextStyleFontModel
std::vector< std::string > /*[1:?]*/ Ifc4x3_rc4::IfcTextStyleFontModel::FontFamily() const {  std::vector< std::string > /*[1:?]*/ v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcTextStyleFontModel::setFontFamily(std::vector< std::string > /*[1:?]*/ v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< std::string > Ifc4x3_rc4::IfcTextStyleFontModel::FontStyle() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcTextStyleFontModel::setFontStyle(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTextStyleFontModel::FontVariant() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcTextStyleFontModel::setFontVariant(boost::optional< std::string > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTextStyleFontModel::FontWeight() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcTextStyleFontModel::setFontWeight(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
::Ifc4x3_rc4::IfcSizeSelect* Ifc4x3_rc4::IfcTextStyleFontModel::FontSize() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(5)))->as<::Ifc4x3_rc4::IfcSizeSelect>(true); }
void Ifc4x3_rc4::IfcTextStyleFontModel::setFontSize(::Ifc4x3_rc4::IfcSizeSelect* v) { set_attribute_value(5, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcTextStyleFontModel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1193]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextStyleFontModel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1193]); }
Ifc4x3_rc4::IfcTextStyleFontModel::IfcTextStyleFontModel(IfcEntityInstanceData&& e) : IfcPreDefinedTextFont(std::move(e)) { }
Ifc4x3_rc4::IfcTextStyleFontModel::IfcTextStyleFontModel(std::string v1_Name, std::vector< std::string > /*[1:?]*/ v2_FontFamily, boost::optional< std::string > v3_FontStyle, boost::optional< std::string > v4_FontVariant, boost::optional< std::string > v5_FontWeight, ::Ifc4x3_rc4::IfcSizeSelect* v6_FontSize) : IfcPreDefinedTextFont(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_Name));set_attribute_value(1, (v2_FontFamily)); if (v3_FontStyle) {set_attribute_value(2, (*v3_FontStyle)); } if (v4_FontVariant) {set_attribute_value(3, (*v4_FontVariant)); } if (v5_FontWeight) {set_attribute_value(4, (*v5_FontWeight)); }set_attribute_value(5, v6_FontSize ? v6_FontSize->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcTextStyleForDefinedFont
::Ifc4x3_rc4::IfcColour* Ifc4x3_rc4::IfcTextStyleForDefinedFont::Colour() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcColour>(true); }
void Ifc4x3_rc4::IfcTextStyleForDefinedFont::setColour(::Ifc4x3_rc4::IfcColour* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
::Ifc4x3_rc4::IfcColour* Ifc4x3_rc4::IfcTextStyleForDefinedFont::BackgroundColour() const { if(data_.get_attribute_value(1).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(1)))->as<::Ifc4x3_rc4::IfcColour>(true); }
void Ifc4x3_rc4::IfcTextStyleForDefinedFont::setBackgroundColour(::Ifc4x3_rc4::IfcColour* v) { set_attribute_value(1, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcTextStyleForDefinedFont::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1194]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextStyleForDefinedFont::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1194]); }
Ifc4x3_rc4::IfcTextStyleForDefinedFont::IfcTextStyleForDefinedFont(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcTextStyleForDefinedFont::IfcTextStyleForDefinedFont(::Ifc4x3_rc4::IfcColour* v1_Colour, ::Ifc4x3_rc4::IfcColour* v2_BackgroundColour) : IfcPresentationItem(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Colour ? v1_Colour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, v2_BackgroundColour ? v2_BackgroundColour->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcTextStyleTextModel
::Ifc4x3_rc4::IfcSizeSelect* Ifc4x3_rc4::IfcTextStyleTextModel::TextIndent() const { if(data_.get_attribute_value(0).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcSizeSelect>(true); }
void Ifc4x3_rc4::IfcTextStyleTextModel::setTextIndent(::Ifc4x3_rc4::IfcSizeSelect* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcTextStyleTextModel::TextAlign() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcTextStyleTextModel::setTextAlign(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTextStyleTextModel::TextDecoration() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcTextStyleTextModel::setTextDecoration(boost::optional< std::string > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
::Ifc4x3_rc4::IfcSizeSelect* Ifc4x3_rc4::IfcTextStyleTextModel::LetterSpacing() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcSizeSelect>(true); }
void Ifc4x3_rc4::IfcTextStyleTextModel::setLetterSpacing(::Ifc4x3_rc4::IfcSizeSelect* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcSizeSelect* Ifc4x3_rc4::IfcTextStyleTextModel::WordSpacing() const { if(data_.get_attribute_value(4).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(4)))->as<::Ifc4x3_rc4::IfcSizeSelect>(true); }
void Ifc4x3_rc4::IfcTextStyleTextModel::setWordSpacing(::Ifc4x3_rc4::IfcSizeSelect* v) { set_attribute_value(4, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(4); }
boost::optional< std::string > Ifc4x3_rc4::IfcTextStyleTextModel::TextTransform() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcTextStyleTextModel::setTextTransform(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
::Ifc4x3_rc4::IfcSizeSelect* Ifc4x3_rc4::IfcTextStyleTextModel::LineHeight() const { if(data_.get_attribute_value(6).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(6)))->as<::Ifc4x3_rc4::IfcSizeSelect>(true); }
void Ifc4x3_rc4::IfcTextStyleTextModel::setLineHeight(::Ifc4x3_rc4::IfcSizeSelect* v) { set_attribute_value(6, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcTextStyleTextModel::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1195]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextStyleTextModel::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1195]); }
Ifc4x3_rc4::IfcTextStyleTextModel::IfcTextStyleTextModel(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcTextStyleTextModel::IfcTextStyleTextModel(::Ifc4x3_rc4::IfcSizeSelect* v1_TextIndent, boost::optional< std::string > v2_TextAlign, boost::optional< std::string > v3_TextDecoration, ::Ifc4x3_rc4::IfcSizeSelect* v4_LetterSpacing, ::Ifc4x3_rc4::IfcSizeSelect* v5_WordSpacing, boost::optional< std::string > v6_TextTransform, ::Ifc4x3_rc4::IfcSizeSelect* v7_LineHeight) : IfcPresentationItem(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, v1_TextIndent ? v1_TextIndent->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_TextAlign) {set_attribute_value(1, (*v2_TextAlign)); } if (v3_TextDecoration) {set_attribute_value(2, (*v3_TextDecoration)); }set_attribute_value(3, v4_LetterSpacing ? v4_LetterSpacing->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(4, v5_WordSpacing ? v5_WordSpacing->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v6_TextTransform) {set_attribute_value(5, (*v6_TextTransform)); }set_attribute_value(6, v7_LineHeight ? v7_LineHeight->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcTextureCoordinate
aggregate_of< ::Ifc4x3_rc4::IfcSurfaceTexture >::ptr Ifc4x3_rc4::IfcTextureCoordinate::Maps() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcSurfaceTexture >(); }
void Ifc4x3_rc4::IfcTextureCoordinate::setMaps(aggregate_of< ::Ifc4x3_rc4::IfcSurfaceTexture >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcTextureCoordinate::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1197]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextureCoordinate::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1197]); }
Ifc4x3_rc4::IfcTextureCoordinate::IfcTextureCoordinate(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcTextureCoordinate::IfcTextureCoordinate(aggregate_of< ::Ifc4x3_rc4::IfcSurfaceTexture >::ptr v1_Maps) : IfcPresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Maps)->generalize());; populate_derived(); }

// Function implementations for IfcTextureCoordinateGenerator
std::string Ifc4x3_rc4::IfcTextureCoordinateGenerator::Mode() const {  std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcTextureCoordinateGenerator::setMode(std::string v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< std::vector< double > /*[1:?]*/ > Ifc4x3_rc4::IfcTextureCoordinateGenerator::Parameter() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } std::vector< double > /*[1:?]*/ v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcTextureCoordinateGenerator::setParameter(boost::optional< std::vector< double > /*[1:?]*/ > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTextureCoordinateGenerator::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1198]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextureCoordinateGenerator::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1198]); }
Ifc4x3_rc4::IfcTextureCoordinateGenerator::IfcTextureCoordinateGenerator(IfcEntityInstanceData&& e) : IfcTextureCoordinate(std::move(e)) { }
Ifc4x3_rc4::IfcTextureCoordinateGenerator::IfcTextureCoordinateGenerator(aggregate_of< ::Ifc4x3_rc4::IfcSurfaceTexture >::ptr v1_Maps, std::string v2_Mode, boost::optional< std::vector< double > /*[1:?]*/ > v3_Parameter) : IfcTextureCoordinate(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_Maps)->generalize());set_attribute_value(1, (v2_Mode)); if (v3_Parameter) {set_attribute_value(2, (*v3_Parameter)); }; populate_derived(); }

// Function implementations for IfcTextureMap
aggregate_of< ::Ifc4x3_rc4::IfcTextureVertex >::ptr Ifc4x3_rc4::IfcTextureMap::Vertices() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcTextureVertex >(); }
void Ifc4x3_rc4::IfcTextureMap::setVertices(aggregate_of< ::Ifc4x3_rc4::IfcTextureVertex >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
::Ifc4x3_rc4::IfcFace* Ifc4x3_rc4::IfcTextureMap::MappedTo() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(2)))->as<::Ifc4x3_rc4::IfcFace>(true); }
void Ifc4x3_rc4::IfcTextureMap::setMappedTo(::Ifc4x3_rc4::IfcFace* v) { set_attribute_value(2, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcTextureMap::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1199]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextureMap::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1199]); }
Ifc4x3_rc4::IfcTextureMap::IfcTextureMap(IfcEntityInstanceData&& e) : IfcTextureCoordinate(std::move(e)) { }
Ifc4x3_rc4::IfcTextureMap::IfcTextureMap(aggregate_of< ::Ifc4x3_rc4::IfcSurfaceTexture >::ptr v1_Maps, aggregate_of< ::Ifc4x3_rc4::IfcTextureVertex >::ptr v2_Vertices, ::Ifc4x3_rc4::IfcFace* v3_MappedTo) : IfcTextureCoordinate(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, (v1_Maps)->generalize());set_attribute_value(1, (v2_Vertices)->generalize());set_attribute_value(2, v3_MappedTo ? v3_MappedTo->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcTextureVertex
std::vector< double > /*[2:2]*/ Ifc4x3_rc4::IfcTextureVertex::Coordinates() const {  std::vector< double > /*[2:2]*/ v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcTextureVertex::setCoordinates(std::vector< double > /*[2:2]*/ v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcTextureVertex::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1200]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextureVertex::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1200]); }
Ifc4x3_rc4::IfcTextureVertex::IfcTextureVertex(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcTextureVertex::IfcTextureVertex(std::vector< double > /*[2:2]*/ v1_Coordinates) : IfcPresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Coordinates));; populate_derived(); }

// Function implementations for IfcTextureVertexList
std::vector< std::vector< double > > Ifc4x3_rc4::IfcTextureVertexList::TexCoordsList() const {  std::vector< std::vector< double > > v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcTextureVertexList::setTexCoordsList(std::vector< std::vector< double > > v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcTextureVertexList::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1201]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTextureVertexList::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1201]); }
Ifc4x3_rc4::IfcTextureVertexList::IfcTextureVertexList(IfcEntityInstanceData&& e) : IfcPresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcTextureVertexList::IfcTextureVertexList(std::vector< std::vector< double > > v1_TexCoordsList) : IfcPresentationItem(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_TexCoordsList));; populate_derived(); }

// Function implementations for IfcThirdOrderPolynomialSpiral
double Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::CubicTerm() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::setCubicTerm(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
boost::optional< double > Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::QuadraticTerm() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::setQuadraticTerm(boost::optional< double > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
boost::optional< double > Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::LinearTerm() const { if(data_.get_attribute_value(3).isNull()) { return boost::none; } double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::setLinearTerm(boost::optional< double > v) { if (v) {set_attribute_value(3, *v);} else {unset_attribute_value(3);} }
boost::optional< double > Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::ConstantTerm() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::setConstantTerm(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1208]); }
const IfcParse::entity& Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1208]); }
Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::IfcThirdOrderPolynomialSpiral(IfcEntityInstanceData&& e) : IfcSpiral(std::move(e)) { }
Ifc4x3_rc4::IfcThirdOrderPolynomialSpiral::IfcThirdOrderPolynomialSpiral(::Ifc4x3_rc4::IfcAxis2Placement* v1_Position, double v2_CubicTerm, boost::optional< double > v3_QuadraticTerm, boost::optional< double > v4_LinearTerm, boost::optional< double > v5_ConstantTerm) : IfcSpiral(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_CubicTerm)); if (v3_QuadraticTerm) {set_attribute_value(2, (*v3_QuadraticTerm)); } if (v4_LinearTerm) {set_attribute_value(3, (*v4_LinearTerm)); } if (v5_ConstantTerm) {set_attribute_value(4, (*v5_ConstantTerm)); }; populate_derived(); }

// Function implementations for IfcTimePeriod
std::string Ifc4x3_rc4::IfcTimePeriod::StartTime() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcTimePeriod::setStartTime(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
std::string Ifc4x3_rc4::IfcTimePeriod::EndTime() const {  std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcTimePeriod::setEndTime(std::string v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcTimePeriod::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1212]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTimePeriod::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1212]); }
Ifc4x3_rc4::IfcTimePeriod::IfcTimePeriod(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcTimePeriod::IfcTimePeriod(std::string v1_StartTime, std::string v2_EndTime) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_StartTime));set_attribute_value(1, (v2_EndTime));; populate_derived(); }

// Function implementations for IfcTimeSeries
std::string Ifc4x3_rc4::IfcTimeSeries::Name() const {  std::string v = data_.get_attribute_value(0); return v; }
void Ifc4x3_rc4::IfcTimeSeries::setName(std::string v) { set_attribute_value(0, v);if constexpr (false)unset_attribute_value(0); }
boost::optional< std::string > Ifc4x3_rc4::IfcTimeSeries::Description() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcTimeSeries::setDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
std::string Ifc4x3_rc4::IfcTimeSeries::StartTime() const {  std::string v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcTimeSeries::setStartTime(std::string v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }
std::string Ifc4x3_rc4::IfcTimeSeries::EndTime() const {  std::string v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcTimeSeries::setEndTime(std::string v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Value Ifc4x3_rc4::IfcTimeSeries::TimeSeriesDataType() const {  return ::Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::FromString(data_.get_attribute_value(4)); }
void Ifc4x3_rc4::IfcTimeSeries::setTimeSeriesDataType(::Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Value v) { set_attribute_value(4, EnumerationReference(&::Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcDataOriginEnum::Value Ifc4x3_rc4::IfcTimeSeries::DataOrigin() const {  return ::Ifc4x3_rc4::IfcDataOriginEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcTimeSeries::setDataOrigin(::Ifc4x3_rc4::IfcDataOriginEnum::Value v) { set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(5); }
boost::optional< std::string > Ifc4x3_rc4::IfcTimeSeries::UserDefinedDataOrigin() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcTimeSeries::setUserDefinedDataOrigin(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
::Ifc4x3_rc4::IfcUnit* Ifc4x3_rc4::IfcTimeSeries::Unit() const { if(data_.get_attribute_value(7).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(7)))->as<::Ifc4x3_rc4::IfcUnit>(true); }
void Ifc4x3_rc4::IfcTimeSeries::setUnit(::Ifc4x3_rc4::IfcUnit* v) { set_attribute_value(7, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(7); }

::Ifc4x3_rc4::IfcExternalReferenceRelationship::list::ptr Ifc4x3_rc4::IfcTimeSeries::HasExternalReference() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[433], 3)->as<IfcExternalReferenceRelationship>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcTimeSeries::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1213]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTimeSeries::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1213]); }
Ifc4x3_rc4::IfcTimeSeries::IfcTimeSeries(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcTimeSeries::IfcTimeSeries(std::string v1_Name, boost::optional< std::string > v2_Description, std::string v3_StartTime, std::string v4_EndTime, ::Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Value v5_TimeSeriesDataType, ::Ifc4x3_rc4::IfcDataOriginEnum::Value v6_DataOrigin, boost::optional< std::string > v7_UserDefinedDataOrigin, ::Ifc4x3_rc4::IfcUnit* v8_Unit) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_Name)); if (v2_Description) {set_attribute_value(1, (*v2_Description)); }set_attribute_value(2, (v3_StartTime));set_attribute_value(3, (v4_EndTime));set_attribute_value(4, (EnumerationReference(&::Ifc4x3_rc4::IfcTimeSeriesDataTypeEnum::Class(),(size_t)v5_TimeSeriesDataType)));set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(),(size_t)v6_DataOrigin))); if (v7_UserDefinedDataOrigin) {set_attribute_value(6, (*v7_UserDefinedDataOrigin)); }set_attribute_value(7, v8_Unit ? v8_Unit->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcTimeSeriesValue
aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr Ifc4x3_rc4::IfcTimeSeriesValue::ListValues() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcValue >(); }
void Ifc4x3_rc4::IfcTimeSeriesValue::setListValues(aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcTimeSeriesValue::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1215]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTimeSeriesValue::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1215]); }
Ifc4x3_rc4::IfcTimeSeriesValue::IfcTimeSeriesValue(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcTimeSeriesValue::IfcTimeSeriesValue(aggregate_of< ::Ifc4x3_rc4::IfcValue >::ptr v1_ListValues) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_ListValues)->generalize());; populate_derived(); }

// Function implementations for IfcTopologicalRepresentationItem


const IfcParse::entity& Ifc4x3_rc4::IfcTopologicalRepresentationItem::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1217]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTopologicalRepresentationItem::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1217]); }
Ifc4x3_rc4::IfcTopologicalRepresentationItem::IfcTopologicalRepresentationItem(IfcEntityInstanceData&& e) : IfcRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcTopologicalRepresentationItem::IfcTopologicalRepresentationItem() : IfcRepresentationItem(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcTopologyRepresentation


const IfcParse::entity& Ifc4x3_rc4::IfcTopologyRepresentation::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1218]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTopologyRepresentation::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1218]); }
Ifc4x3_rc4::IfcTopologyRepresentation::IfcTopologyRepresentation(IfcEntityInstanceData&& e) : IfcShapeModel(std::move(e)) { }
Ifc4x3_rc4::IfcTopologyRepresentation::IfcTopologyRepresentation(::Ifc4x3_rc4::IfcRepresentationContext* v1_ContextOfItems, boost::optional< std::string > v2_RepresentationIdentifier, boost::optional< std::string > v3_RepresentationType, aggregate_of< ::Ifc4x3_rc4::IfcRepresentationItem >::ptr v4_Items) : IfcShapeModel(IfcEntityInstanceData(storage_t(4))) { set_attribute_value(0, v1_ContextOfItems ? v1_ContextOfItems->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_RepresentationIdentifier) {set_attribute_value(1, (*v2_RepresentationIdentifier)); } if (v3_RepresentationType) {set_attribute_value(2, (*v3_RepresentationType)); }set_attribute_value(3, (v4_Items)->generalize());; populate_derived(); }

// Function implementations for IfcToroidalSurface
double Ifc4x3_rc4::IfcToroidalSurface::MajorRadius() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcToroidalSurface::setMajorRadius(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }
double Ifc4x3_rc4::IfcToroidalSurface::MinorRadius() const {  double v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcToroidalSurface::setMinorRadius(double v) { set_attribute_value(2, v);if constexpr (false)unset_attribute_value(2); }


const IfcParse::entity& Ifc4x3_rc4::IfcToroidalSurface::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1219]); }
const IfcParse::entity& Ifc4x3_rc4::IfcToroidalSurface::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1219]); }
Ifc4x3_rc4::IfcToroidalSurface::IfcToroidalSurface(IfcEntityInstanceData&& e) : IfcElementarySurface(std::move(e)) { }
Ifc4x3_rc4::IfcToroidalSurface::IfcToroidalSurface(::Ifc4x3_rc4::IfcAxis2Placement3D* v1_Position, double v2_MajorRadius, double v3_MinorRadius) : IfcElementarySurface(IfcEntityInstanceData(storage_t(3))) { set_attribute_value(0, v1_Position ? v1_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_MajorRadius));set_attribute_value(2, (v3_MinorRadius));; populate_derived(); }

// Function implementations for IfcTrackElement
boost::optional< ::Ifc4x3_rc4::IfcTrackElementTypeEnum::Value > Ifc4x3_rc4::IfcTrackElement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcTrackElementTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcTrackElement::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcTrackElementTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcTrackElementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTrackElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1221]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTrackElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1221]); }
Ifc4x3_rc4::IfcTrackElement::IfcTrackElement(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcTrackElement::IfcTrackElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcTrackElementTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcTrackElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcTrackElementType
::Ifc4x3_rc4::IfcTrackElementTypeEnum::Value Ifc4x3_rc4::IfcTrackElementType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcTrackElementTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTrackElementType::setPredefinedType(::Ifc4x3_rc4::IfcTrackElementTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTrackElementTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcTrackElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1222]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTrackElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1222]); }
Ifc4x3_rc4::IfcTrackElementType::IfcTrackElementType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcTrackElementType::IfcTrackElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcTrackElementTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTrackElementTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcTransformer
boost::optional< ::Ifc4x3_rc4::IfcTransformerTypeEnum::Value > Ifc4x3_rc4::IfcTransformer::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcTransformerTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcTransformer::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcTransformerTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcTransformerTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTransformer::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1224]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTransformer::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1224]); }
Ifc4x3_rc4::IfcTransformer::IfcTransformer(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcTransformer::IfcTransformer(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcTransformerTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcTransformerTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcTransformerType
::Ifc4x3_rc4::IfcTransformerTypeEnum::Value Ifc4x3_rc4::IfcTransformerType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcTransformerTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTransformerType::setPredefinedType(::Ifc4x3_rc4::IfcTransformerTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTransformerTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcTransformerType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1225]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTransformerType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1225]); }
Ifc4x3_rc4::IfcTransformerType::IfcTransformerType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcTransformerType::IfcTransformerType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcTransformerTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTransformerTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcTransportElement
::Ifc4x3_rc4::IfcTransportElementTypeSelect* Ifc4x3_rc4::IfcTransportElement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcTransportElementTypeSelect>(true); }
void Ifc4x3_rc4::IfcTransportElement::setPredefinedType(::Ifc4x3_rc4::IfcTransportElementTypeSelect* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcTransportElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1229]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTransportElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1229]); }
Ifc4x3_rc4::IfcTransportElement::IfcTransportElement(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcTransportElement::IfcTransportElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, ::Ifc4x3_rc4::IfcTransportElementTypeSelect* v9_PredefinedType) : IfcElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }set_attribute_value(8, v9_PredefinedType ? v9_PredefinedType->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcTransportElementType
::Ifc4x3_rc4::IfcTransportElementTypeSelect* Ifc4x3_rc4::IfcTransportElementType::PredefinedType() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(9)))->as<::Ifc4x3_rc4::IfcTransportElementTypeSelect>(true); }
void Ifc4x3_rc4::IfcTransportElementType::setPredefinedType(::Ifc4x3_rc4::IfcTransportElementTypeSelect* v) { set_attribute_value(9, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcTransportElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1232]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTransportElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1232]); }
Ifc4x3_rc4::IfcTransportElementType::IfcTransportElementType(IfcEntityInstanceData&& e) : IfcElementType(std::move(e)) { }
Ifc4x3_rc4::IfcTransportElementType::IfcTransportElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcTransportElementTypeSelect* v10_PredefinedType) : IfcElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, v10_PredefinedType ? v10_PredefinedType->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcTrapeziumProfileDef
double Ifc4x3_rc4::IfcTrapeziumProfileDef::BottomXDim() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcTrapeziumProfileDef::setBottomXDim(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcTrapeziumProfileDef::TopXDim() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcTrapeziumProfileDef::setTopXDim(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
double Ifc4x3_rc4::IfcTrapeziumProfileDef::YDim() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcTrapeziumProfileDef::setYDim(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcTrapeziumProfileDef::TopXOffset() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcTrapeziumProfileDef::setTopXOffset(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }


const IfcParse::entity& Ifc4x3_rc4::IfcTrapeziumProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1234]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTrapeziumProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1234]); }
Ifc4x3_rc4::IfcTrapeziumProfileDef::IfcTrapeziumProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcTrapeziumProfileDef::IfcTrapeziumProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_BottomXDim, double v5_TopXDim, double v6_YDim, double v7_TopXOffset) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(7))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_BottomXDim));set_attribute_value(4, (v5_TopXDim));set_attribute_value(5, (v6_YDim));set_attribute_value(6, (v7_TopXOffset));; populate_derived(); }

// Function implementations for IfcTriangulatedFaceSet
boost::optional< std::vector< std::vector< double > > > Ifc4x3_rc4::IfcTriangulatedFaceSet::Normals() const { if(data_.get_attribute_value(1).isNull()) { return boost::none; } std::vector< std::vector< double > > v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcTriangulatedFaceSet::setNormals(boost::optional< std::vector< std::vector< double > > > v) { if (v) {set_attribute_value(1, *v);} else {unset_attribute_value(1);} }
boost::optional< bool > Ifc4x3_rc4::IfcTriangulatedFaceSet::Closed() const { if(data_.get_attribute_value(2).isNull()) { return boost::none; } bool v = data_.get_attribute_value(2); return v; }
void Ifc4x3_rc4::IfcTriangulatedFaceSet::setClosed(boost::optional< bool > v) { if (v) {set_attribute_value(2, *v);} else {unset_attribute_value(2);} }
std::vector< std::vector< int > > Ifc4x3_rc4::IfcTriangulatedFaceSet::CoordIndex() const {  std::vector< std::vector< int > > v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcTriangulatedFaceSet::setCoordIndex(std::vector< std::vector< int > > v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
boost::optional< std::vector< int > /*[1:?]*/ > Ifc4x3_rc4::IfcTriangulatedFaceSet::PnIndex() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::vector< int > /*[1:?]*/ v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcTriangulatedFaceSet::setPnIndex(boost::optional< std::vector< int > /*[1:?]*/ > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTriangulatedFaceSet::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1235]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTriangulatedFaceSet::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1235]); }
Ifc4x3_rc4::IfcTriangulatedFaceSet::IfcTriangulatedFaceSet(IfcEntityInstanceData&& e) : IfcTessellatedFaceSet(std::move(e)) { }
Ifc4x3_rc4::IfcTriangulatedFaceSet::IfcTriangulatedFaceSet(::Ifc4x3_rc4::IfcCartesianPointList3D* v1_Coordinates, boost::optional< std::vector< std::vector< double > > > v2_Normals, boost::optional< bool > v3_Closed, std::vector< std::vector< int > > v4_CoordIndex, boost::optional< std::vector< int > /*[1:?]*/ > v5_PnIndex) : IfcTessellatedFaceSet(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_Coordinates ? v1_Coordinates->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_Normals) {set_attribute_value(1, (*v2_Normals)); } if (v3_Closed) {set_attribute_value(2, (*v3_Closed)); }set_attribute_value(3, (v4_CoordIndex)); if (v5_PnIndex) {set_attribute_value(4, (*v5_PnIndex)); }; populate_derived(); }

// Function implementations for IfcTriangulatedIrregularNetwork
std::vector< int > /*[1:?]*/ Ifc4x3_rc4::IfcTriangulatedIrregularNetwork::Flags() const {  std::vector< int > /*[1:?]*/ v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcTriangulatedIrregularNetwork::setFlags(std::vector< int > /*[1:?]*/ v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }


const IfcParse::entity& Ifc4x3_rc4::IfcTriangulatedIrregularNetwork::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1236]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTriangulatedIrregularNetwork::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1236]); }
Ifc4x3_rc4::IfcTriangulatedIrregularNetwork::IfcTriangulatedIrregularNetwork(IfcEntityInstanceData&& e) : IfcTriangulatedFaceSet(std::move(e)) { }
Ifc4x3_rc4::IfcTriangulatedIrregularNetwork::IfcTriangulatedIrregularNetwork(::Ifc4x3_rc4::IfcCartesianPointList3D* v1_Coordinates, boost::optional< std::vector< std::vector< double > > > v2_Normals, boost::optional< bool > v3_Closed, std::vector< std::vector< int > > v4_CoordIndex, boost::optional< std::vector< int > /*[1:?]*/ > v5_PnIndex, std::vector< int > /*[1:?]*/ v6_Flags) : IfcTriangulatedFaceSet(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, v1_Coordinates ? v1_Coordinates->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v2_Normals) {set_attribute_value(1, (*v2_Normals)); } if (v3_Closed) {set_attribute_value(2, (*v3_Closed)); }set_attribute_value(3, (v4_CoordIndex)); if (v5_PnIndex) {set_attribute_value(4, (*v5_PnIndex)); }set_attribute_value(5, (v6_Flags));; populate_derived(); }

// Function implementations for IfcTrimmedCurve
::Ifc4x3_rc4::IfcCurve* Ifc4x3_rc4::IfcTrimmedCurve::BasisCurve() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcCurve>(true); }
void Ifc4x3_rc4::IfcTrimmedCurve::setBasisCurve(::Ifc4x3_rc4::IfcCurve* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
aggregate_of< ::Ifc4x3_rc4::IfcTrimmingSelect >::ptr Ifc4x3_rc4::IfcTrimmedCurve::Trim1() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(1); return es->as< ::Ifc4x3_rc4::IfcTrimmingSelect >(); }
void Ifc4x3_rc4::IfcTrimmedCurve::setTrim1(aggregate_of< ::Ifc4x3_rc4::IfcTrimmingSelect >::ptr v) { set_attribute_value(1, (v)->generalize());if constexpr (false)unset_attribute_value(1); }
aggregate_of< ::Ifc4x3_rc4::IfcTrimmingSelect >::ptr Ifc4x3_rc4::IfcTrimmedCurve::Trim2() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(2); return es->as< ::Ifc4x3_rc4::IfcTrimmingSelect >(); }
void Ifc4x3_rc4::IfcTrimmedCurve::setTrim2(aggregate_of< ::Ifc4x3_rc4::IfcTrimmingSelect >::ptr v) { set_attribute_value(2, (v)->generalize());if constexpr (false)unset_attribute_value(2); }
bool Ifc4x3_rc4::IfcTrimmedCurve::SenseAgreement() const {  bool v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcTrimmedCurve::setSenseAgreement(bool v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
::Ifc4x3_rc4::IfcTrimmingPreference::Value Ifc4x3_rc4::IfcTrimmedCurve::MasterRepresentation() const {  return ::Ifc4x3_rc4::IfcTrimmingPreference::FromString(data_.get_attribute_value(4)); }
void Ifc4x3_rc4::IfcTrimmedCurve::setMasterRepresentation(::Ifc4x3_rc4::IfcTrimmingPreference::Value v) { set_attribute_value(4, EnumerationReference(&::Ifc4x3_rc4::IfcTrimmingPreference::Class(), (size_t) v));if constexpr (false)unset_attribute_value(4); }


const IfcParse::entity& Ifc4x3_rc4::IfcTrimmedCurve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1237]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTrimmedCurve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1237]); }
Ifc4x3_rc4::IfcTrimmedCurve::IfcTrimmedCurve(IfcEntityInstanceData&& e) : IfcBoundedCurve(std::move(e)) { }
Ifc4x3_rc4::IfcTrimmedCurve::IfcTrimmedCurve(::Ifc4x3_rc4::IfcCurve* v1_BasisCurve, aggregate_of< ::Ifc4x3_rc4::IfcTrimmingSelect >::ptr v2_Trim1, aggregate_of< ::Ifc4x3_rc4::IfcTrimmingSelect >::ptr v3_Trim2, bool v4_SenseAgreement, ::Ifc4x3_rc4::IfcTrimmingPreference::Value v5_MasterRepresentation) : IfcBoundedCurve(IfcEntityInstanceData(storage_t(5))) { set_attribute_value(0, v1_BasisCurve ? v1_BasisCurve->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Trim1)->generalize());set_attribute_value(2, (v3_Trim2)->generalize());set_attribute_value(3, (v4_SenseAgreement));set_attribute_value(4, (EnumerationReference(&::Ifc4x3_rc4::IfcTrimmingPreference::Class(),(size_t)v5_MasterRepresentation)));; populate_derived(); }

// Function implementations for IfcTubeBundle
boost::optional< ::Ifc4x3_rc4::IfcTubeBundleTypeEnum::Value > Ifc4x3_rc4::IfcTubeBundle::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcTubeBundleTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcTubeBundle::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcTubeBundleTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcTubeBundleTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcTubeBundle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1241]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTubeBundle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1241]); }
Ifc4x3_rc4::IfcTubeBundle::IfcTubeBundle(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcTubeBundle::IfcTubeBundle(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcTubeBundleTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcTubeBundleTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcTubeBundleType
::Ifc4x3_rc4::IfcTubeBundleTypeEnum::Value Ifc4x3_rc4::IfcTubeBundleType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcTubeBundleTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcTubeBundleType::setPredefinedType(::Ifc4x3_rc4::IfcTubeBundleTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcTubeBundleTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcTubeBundleType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1242]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTubeBundleType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1242]); }
Ifc4x3_rc4::IfcTubeBundleType::IfcTubeBundleType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcTubeBundleType::IfcTubeBundleType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcTubeBundleTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcTubeBundleTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcTypeObject
boost::optional< std::string > Ifc4x3_rc4::IfcTypeObject::ApplicableOccurrence() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcTypeObject::setApplicableOccurrence(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > Ifc4x3_rc4::IfcTypeObject::HasPropertySets() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(5); return es->as< ::Ifc4x3_rc4::IfcPropertySetDefinition >(); }
void Ifc4x3_rc4::IfcTypeObject::setHasPropertySets(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v) { if (v) {set_attribute_value(5, (*v)->generalize());} else {unset_attribute_value(5);} }

::Ifc4x3_rc4::IfcRelDefinesByType::list::ptr Ifc4x3_rc4::IfcTypeObject::Types() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[940], 5)->as<IfcRelDefinesByType>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcTypeObject::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1244]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTypeObject::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1244]); }
Ifc4x3_rc4::IfcTypeObject::IfcTypeObject(IfcEntityInstanceData&& e) : IfcObjectDefinition(std::move(e)) { }
Ifc4x3_rc4::IfcTypeObject::IfcTypeObject(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets) : IfcObjectDefinition(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); }; populate_derived(); }

// Function implementations for IfcTypeProcess
boost::optional< std::string > Ifc4x3_rc4::IfcTypeProcess::Identification() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcTypeProcess::setIdentification(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTypeProcess::LongDescription() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcTypeProcess::setLongDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTypeProcess::ProcessType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcTypeProcess::setProcessType(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }

::Ifc4x3_rc4::IfcRelAssignsToProcess::list::ptr Ifc4x3_rc4::IfcTypeProcess::OperatesOn() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[910], 6)->as<IfcRelAssignsToProcess>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcTypeProcess::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1245]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTypeProcess::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1245]); }
Ifc4x3_rc4::IfcTypeProcess::IfcTypeProcess(IfcEntityInstanceData&& e) : IfcTypeObject(std::move(e)) { }
Ifc4x3_rc4::IfcTypeProcess::IfcTypeProcess(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ProcessType) : IfcTypeObject(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ProcessType) {set_attribute_value(8, (*v9_ProcessType)); }; populate_derived(); }

// Function implementations for IfcTypeProduct
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > Ifc4x3_rc4::IfcTypeProduct::RepresentationMaps() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(6); return es->as< ::Ifc4x3_rc4::IfcRepresentationMap >(); }
void Ifc4x3_rc4::IfcTypeProduct::setRepresentationMaps(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v) { if (v) {set_attribute_value(6, (*v)->generalize());} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTypeProduct::Tag() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcTypeProduct::setTag(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }

::Ifc4x3_rc4::IfcRelAssignsToProduct::list::ptr Ifc4x3_rc4::IfcTypeProduct::ReferencedBy() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[911], 6)->as<IfcRelAssignsToProduct>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcTypeProduct::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1246]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTypeProduct::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1246]); }
Ifc4x3_rc4::IfcTypeProduct::IfcTypeProduct(IfcEntityInstanceData&& e) : IfcTypeObject(std::move(e)) { }
Ifc4x3_rc4::IfcTypeProduct::IfcTypeProduct(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag) : IfcTypeObject(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcTypeResource
boost::optional< std::string > Ifc4x3_rc4::IfcTypeResource::Identification() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcTypeResource::setIdentification(boost::optional< std::string > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTypeResource::LongDescription() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcTypeResource::setLongDescription(boost::optional< std::string > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcTypeResource::ResourceType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcTypeResource::setResourceType(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }

::Ifc4x3_rc4::IfcRelAssignsToResource::list::ptr Ifc4x3_rc4::IfcTypeResource::ResourceOf() const { if (!file_) { return nullptr; } return file_->getInverse(id_, IFC4X3_RC4_types[912], 6)->as<IfcRelAssignsToResource>(); }

const IfcParse::entity& Ifc4x3_rc4::IfcTypeResource::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1247]); }
const IfcParse::entity& Ifc4x3_rc4::IfcTypeResource::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1247]); }
Ifc4x3_rc4::IfcTypeResource::IfcTypeResource(IfcEntityInstanceData&& e) : IfcTypeObject(std::move(e)) { }
Ifc4x3_rc4::IfcTypeResource::IfcTypeResource(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< std::string > v7_Identification, boost::optional< std::string > v8_LongDescription, boost::optional< std::string > v9_ResourceType) : IfcTypeObject(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_Identification) {set_attribute_value(6, (*v7_Identification)); } if (v8_LongDescription) {set_attribute_value(7, (*v8_LongDescription)); } if (v9_ResourceType) {set_attribute_value(8, (*v9_ResourceType)); }; populate_derived(); }

// Function implementations for IfcUShapeProfileDef
double Ifc4x3_rc4::IfcUShapeProfileDef::Depth() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcUShapeProfileDef::setDepth(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcUShapeProfileDef::FlangeWidth() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcUShapeProfileDef::setFlangeWidth(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
double Ifc4x3_rc4::IfcUShapeProfileDef::WebThickness() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcUShapeProfileDef::setWebThickness(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcUShapeProfileDef::FlangeThickness() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcUShapeProfileDef::setFlangeThickness(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< double > Ifc4x3_rc4::IfcUShapeProfileDef::FilletRadius() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcUShapeProfileDef::setFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< double > Ifc4x3_rc4::IfcUShapeProfileDef::EdgeRadius() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcUShapeProfileDef::setEdgeRadius(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< double > Ifc4x3_rc4::IfcUShapeProfileDef::FlangeSlope() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcUShapeProfileDef::setFlangeSlope(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcUShapeProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1258]); }
const IfcParse::entity& Ifc4x3_rc4::IfcUShapeProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1258]); }
Ifc4x3_rc4::IfcUShapeProfileDef::IfcUShapeProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcUShapeProfileDef::IfcUShapeProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_Depth, double v5_FlangeWidth, double v6_WebThickness, double v7_FlangeThickness, boost::optional< double > v8_FilletRadius, boost::optional< double > v9_EdgeRadius, boost::optional< double > v10_FlangeSlope) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Depth));set_attribute_value(4, (v5_FlangeWidth));set_attribute_value(5, (v6_WebThickness));set_attribute_value(6, (v7_FlangeThickness)); if (v8_FilletRadius) {set_attribute_value(7, (*v8_FilletRadius)); } if (v9_EdgeRadius) {set_attribute_value(8, (*v9_EdgeRadius)); } if (v10_FlangeSlope) {set_attribute_value(9, (*v10_FlangeSlope)); }; populate_derived(); }

// Function implementations for IfcUnitAssignment
aggregate_of< ::Ifc4x3_rc4::IfcUnit >::ptr Ifc4x3_rc4::IfcUnitAssignment::Units() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcUnit >(); }
void Ifc4x3_rc4::IfcUnitAssignment::setUnits(aggregate_of< ::Ifc4x3_rc4::IfcUnit >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcUnitAssignment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1255]); }
const IfcParse::entity& Ifc4x3_rc4::IfcUnitAssignment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1255]); }
Ifc4x3_rc4::IfcUnitAssignment::IfcUnitAssignment(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcUnitAssignment::IfcUnitAssignment(aggregate_of< ::Ifc4x3_rc4::IfcUnit >::ptr v1_Units) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, (v1_Units)->generalize());; populate_derived(); }

// Function implementations for IfcUnitaryControlElement
boost::optional< ::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Value > Ifc4x3_rc4::IfcUnitaryControlElement::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcUnitaryControlElement::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcUnitaryControlElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1249]); }
const IfcParse::entity& Ifc4x3_rc4::IfcUnitaryControlElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1249]); }
Ifc4x3_rc4::IfcUnitaryControlElement::IfcUnitaryControlElement(IfcEntityInstanceData&& e) : IfcDistributionControlElement(std::move(e)) { }
Ifc4x3_rc4::IfcUnitaryControlElement::IfcUnitaryControlElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Value > v9_PredefinedType) : IfcDistributionControlElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcUnitaryControlElementType
::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Value Ifc4x3_rc4::IfcUnitaryControlElementType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcUnitaryControlElementType::setPredefinedType(::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcUnitaryControlElementType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1250]); }
const IfcParse::entity& Ifc4x3_rc4::IfcUnitaryControlElementType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1250]); }
Ifc4x3_rc4::IfcUnitaryControlElementType::IfcUnitaryControlElementType(IfcEntityInstanceData&& e) : IfcDistributionControlElementType(std::move(e)) { }
Ifc4x3_rc4::IfcUnitaryControlElementType::IfcUnitaryControlElementType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Value v10_PredefinedType) : IfcDistributionControlElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcUnitaryControlElementTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcUnitaryEquipment
boost::optional< ::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Value > Ifc4x3_rc4::IfcUnitaryEquipment::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcUnitaryEquipment::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcUnitaryEquipment::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1252]); }
const IfcParse::entity& Ifc4x3_rc4::IfcUnitaryEquipment::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1252]); }
Ifc4x3_rc4::IfcUnitaryEquipment::IfcUnitaryEquipment(IfcEntityInstanceData&& e) : IfcEnergyConversionDevice(std::move(e)) { }
Ifc4x3_rc4::IfcUnitaryEquipment::IfcUnitaryEquipment(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Value > v9_PredefinedType) : IfcEnergyConversionDevice(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcUnitaryEquipmentType
::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Value Ifc4x3_rc4::IfcUnitaryEquipmentType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcUnitaryEquipmentType::setPredefinedType(::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcUnitaryEquipmentType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1253]); }
const IfcParse::entity& Ifc4x3_rc4::IfcUnitaryEquipmentType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1253]); }
Ifc4x3_rc4::IfcUnitaryEquipmentType::IfcUnitaryEquipmentType(IfcEntityInstanceData&& e) : IfcEnergyConversionDeviceType(std::move(e)) { }
Ifc4x3_rc4::IfcUnitaryEquipmentType::IfcUnitaryEquipmentType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Value v10_PredefinedType) : IfcEnergyConversionDeviceType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcUnitaryEquipmentTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcValve
boost::optional< ::Ifc4x3_rc4::IfcValveTypeEnum::Value > Ifc4x3_rc4::IfcValve::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcValveTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcValve::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcValveTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcValveTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcValve::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1260]); }
const IfcParse::entity& Ifc4x3_rc4::IfcValve::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1260]); }
Ifc4x3_rc4::IfcValve::IfcValve(IfcEntityInstanceData&& e) : IfcFlowController(std::move(e)) { }
Ifc4x3_rc4::IfcValve::IfcValve(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcValveTypeEnum::Value > v9_PredefinedType) : IfcFlowController(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcValveTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcValveType
::Ifc4x3_rc4::IfcValveTypeEnum::Value Ifc4x3_rc4::IfcValveType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcValveTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcValveType::setPredefinedType(::Ifc4x3_rc4::IfcValveTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcValveTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcValveType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1261]); }
const IfcParse::entity& Ifc4x3_rc4::IfcValveType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1261]); }
Ifc4x3_rc4::IfcValveType::IfcValveType(IfcEntityInstanceData&& e) : IfcFlowControllerType(std::move(e)) { }
Ifc4x3_rc4::IfcValveType::IfcValveType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcValveTypeEnum::Value v10_PredefinedType) : IfcFlowControllerType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcValveTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcVector
::Ifc4x3_rc4::IfcDirection* Ifc4x3_rc4::IfcVector::Orientation() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcDirection>(true); }
void Ifc4x3_rc4::IfcVector::setOrientation(::Ifc4x3_rc4::IfcDirection* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }
double Ifc4x3_rc4::IfcVector::Magnitude() const {  double v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcVector::setMagnitude(double v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcVector::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1264]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVector::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1264]); }
Ifc4x3_rc4::IfcVector::IfcVector(IfcEntityInstanceData&& e) : IfcGeometricRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcVector::IfcVector(::Ifc4x3_rc4::IfcDirection* v1_Orientation, double v2_Magnitude) : IfcGeometricRepresentationItem(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, v1_Orientation ? v1_Orientation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(1, (v2_Magnitude));; populate_derived(); }

// Function implementations for IfcVertex


const IfcParse::entity& Ifc4x3_rc4::IfcVertex::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1266]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVertex::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1266]); }
Ifc4x3_rc4::IfcVertex::IfcVertex(IfcEntityInstanceData&& e) : IfcTopologicalRepresentationItem(std::move(e)) { }
Ifc4x3_rc4::IfcVertex::IfcVertex() : IfcTopologicalRepresentationItem(IfcEntityInstanceData(storage_t(0))) { ; populate_derived(); }

// Function implementations for IfcVertexLoop
::Ifc4x3_rc4::IfcVertex* Ifc4x3_rc4::IfcVertexLoop::LoopVertex() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcVertex>(true); }
void Ifc4x3_rc4::IfcVertexLoop::setLoopVertex(::Ifc4x3_rc4::IfcVertex* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcVertexLoop::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1267]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVertexLoop::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1267]); }
Ifc4x3_rc4::IfcVertexLoop::IfcVertexLoop(IfcEntityInstanceData&& e) : IfcLoop(std::move(e)) { }
Ifc4x3_rc4::IfcVertexLoop::IfcVertexLoop(::Ifc4x3_rc4::IfcVertex* v1_LoopVertex) : IfcLoop(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_LoopVertex ? v1_LoopVertex->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcVertexPoint
::Ifc4x3_rc4::IfcPoint* Ifc4x3_rc4::IfcVertexPoint::VertexGeometry() const {  return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(0)))->as<::Ifc4x3_rc4::IfcPoint>(true); }
void Ifc4x3_rc4::IfcVertexPoint::setVertexGeometry(::Ifc4x3_rc4::IfcPoint* v) { set_attribute_value(0, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(0); }


const IfcParse::entity& Ifc4x3_rc4::IfcVertexPoint::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1268]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVertexPoint::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1268]); }
Ifc4x3_rc4::IfcVertexPoint::IfcVertexPoint(IfcEntityInstanceData&& e) : IfcVertex(std::move(e)) { }
Ifc4x3_rc4::IfcVertexPoint::IfcVertexPoint(::Ifc4x3_rc4::IfcPoint* v1_VertexGeometry) : IfcVertex(IfcEntityInstanceData(storage_t(1))) { set_attribute_value(0, v1_VertexGeometry ? v1_VertexGeometry->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcVibrationDamper
boost::optional< ::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Value > Ifc4x3_rc4::IfcVibrationDamper::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcVibrationDamper::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcVibrationDamper::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1269]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVibrationDamper::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1269]); }
Ifc4x3_rc4::IfcVibrationDamper::IfcVibrationDamper(IfcEntityInstanceData&& e) : IfcElementComponent(std::move(e)) { }
Ifc4x3_rc4::IfcVibrationDamper::IfcVibrationDamper(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Value > v9_PredefinedType) : IfcElementComponent(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcVibrationDamperType
boost::optional< ::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Value > Ifc4x3_rc4::IfcVibrationDamperType::PredefinedType() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcVibrationDamperType::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Value > v) { if (v) {set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(9);} }


const IfcParse::entity& Ifc4x3_rc4::IfcVibrationDamperType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1270]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVibrationDamperType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1270]); }
Ifc4x3_rc4::IfcVibrationDamperType::IfcVibrationDamperType(IfcEntityInstanceData&& e) : IfcElementComponentType(std::move(e)) { }
Ifc4x3_rc4::IfcVibrationDamperType::IfcVibrationDamperType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, boost::optional< ::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Value > v10_PredefinedType) : IfcElementComponentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); } if (v10_PredefinedType) {set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcVibrationDamperTypeEnum::Class(),(size_t)*v10_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcVibrationIsolator
boost::optional< ::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Value > Ifc4x3_rc4::IfcVibrationIsolator::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcVibrationIsolator::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcVibrationIsolator::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1272]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVibrationIsolator::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1272]); }
Ifc4x3_rc4::IfcVibrationIsolator::IfcVibrationIsolator(IfcEntityInstanceData&& e) : IfcElementComponent(std::move(e)) { }
Ifc4x3_rc4::IfcVibrationIsolator::IfcVibrationIsolator(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Value > v9_PredefinedType) : IfcElementComponent(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcVibrationIsolatorType
::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Value Ifc4x3_rc4::IfcVibrationIsolatorType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcVibrationIsolatorType::setPredefinedType(::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcVibrationIsolatorType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1273]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVibrationIsolatorType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1273]); }
Ifc4x3_rc4::IfcVibrationIsolatorType::IfcVibrationIsolatorType(IfcEntityInstanceData&& e) : IfcElementComponentType(std::move(e)) { }
Ifc4x3_rc4::IfcVibrationIsolatorType::IfcVibrationIsolatorType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Value v10_PredefinedType) : IfcElementComponentType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcVibrationIsolatorTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcVirtualElement


const IfcParse::entity& Ifc4x3_rc4::IfcVirtualElement::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1275]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVirtualElement::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1275]); }
Ifc4x3_rc4::IfcVirtualElement::IfcVirtualElement(IfcEntityInstanceData&& e) : IfcElement(std::move(e)) { }
Ifc4x3_rc4::IfcVirtualElement::IfcVirtualElement(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcElement(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcVirtualGridIntersection
aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr Ifc4x3_rc4::IfcVirtualGridIntersection::IntersectingAxes() const {  aggregate_of_instance::ptr es = data_.get_attribute_value(0); return es->as< ::Ifc4x3_rc4::IfcGridAxis >(); }
void Ifc4x3_rc4::IfcVirtualGridIntersection::setIntersectingAxes(aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr v) { set_attribute_value(0, (v)->generalize());if constexpr (false)unset_attribute_value(0); }
std::vector< double > /*[2:3]*/ Ifc4x3_rc4::IfcVirtualGridIntersection::OffsetDistances() const {  std::vector< double > /*[2:3]*/ v = data_.get_attribute_value(1); return v; }
void Ifc4x3_rc4::IfcVirtualGridIntersection::setOffsetDistances(std::vector< double > /*[2:3]*/ v) { set_attribute_value(1, v);if constexpr (false)unset_attribute_value(1); }


const IfcParse::entity& Ifc4x3_rc4::IfcVirtualGridIntersection::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1276]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVirtualGridIntersection::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1276]); }
Ifc4x3_rc4::IfcVirtualGridIntersection::IfcVirtualGridIntersection(IfcEntityInstanceData&& e) : IfcUtil::IfcBaseEntity(std::move(e)) { }
Ifc4x3_rc4::IfcVirtualGridIntersection::IfcVirtualGridIntersection(aggregate_of< ::Ifc4x3_rc4::IfcGridAxis >::ptr v1_IntersectingAxes, std::vector< double > /*[2:3]*/ v2_OffsetDistances) : IfcUtil::IfcBaseEntity(IfcEntityInstanceData(storage_t(2))) { set_attribute_value(0, (v1_IntersectingAxes)->generalize());set_attribute_value(1, (v2_OffsetDistances));; populate_derived(); }

// Function implementations for IfcVoidStratum


const IfcParse::entity& Ifc4x3_rc4::IfcVoidStratum::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1279]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVoidStratum::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1279]); }
Ifc4x3_rc4::IfcVoidStratum::IfcVoidStratum(IfcEntityInstanceData&& e) : IfcGeotechnicalStratum(std::move(e)) { }
Ifc4x3_rc4::IfcVoidStratum::IfcVoidStratum(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcGeotechnicalStratum(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcVoidingFeature
boost::optional< ::Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::Value > Ifc4x3_rc4::IfcVoidingFeature::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcVoidingFeature::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcVoidingFeature::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1277]); }
const IfcParse::entity& Ifc4x3_rc4::IfcVoidingFeature::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1277]); }
Ifc4x3_rc4::IfcVoidingFeature::IfcVoidingFeature(IfcEntityInstanceData&& e) : IfcFeatureElementSubtraction(std::move(e)) { }
Ifc4x3_rc4::IfcVoidingFeature::IfcVoidingFeature(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::Value > v9_PredefinedType) : IfcFeatureElementSubtraction(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcVoidingFeatureTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcWall
boost::optional< ::Ifc4x3_rc4::IfcWallTypeEnum::Value > Ifc4x3_rc4::IfcWall::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcWallTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcWall::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcWallTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcWallTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcWall::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1282]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWall::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1282]); }
Ifc4x3_rc4::IfcWall::IfcWall(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcWall::IfcWall(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcWallTypeEnum::Value > v9_PredefinedType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcWallTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcWallElementedCase


const IfcParse::entity& Ifc4x3_rc4::IfcWallElementedCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1283]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWallElementedCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1283]); }
Ifc4x3_rc4::IfcWallElementedCase::IfcWallElementedCase(IfcEntityInstanceData&& e) : IfcWall(std::move(e)) { }
Ifc4x3_rc4::IfcWallElementedCase::IfcWallElementedCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcWallTypeEnum::Value > v9_PredefinedType) : IfcWall(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcWallTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcWallStandardCase


const IfcParse::entity& Ifc4x3_rc4::IfcWallStandardCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1284]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWallStandardCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1284]); }
Ifc4x3_rc4::IfcWallStandardCase::IfcWallStandardCase(IfcEntityInstanceData&& e) : IfcWall(std::move(e)) { }
Ifc4x3_rc4::IfcWallStandardCase::IfcWallStandardCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcWallTypeEnum::Value > v9_PredefinedType) : IfcWall(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcWallTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcWallType
::Ifc4x3_rc4::IfcWallTypeEnum::Value Ifc4x3_rc4::IfcWallType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcWallTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcWallType::setPredefinedType(::Ifc4x3_rc4::IfcWallTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcWallTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcWallType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1285]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWallType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1285]); }
Ifc4x3_rc4::IfcWallType::IfcWallType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcWallType::IfcWallType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcWallTypeEnum::Value v10_PredefinedType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcWallTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcWasteTerminal
boost::optional< ::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Value > Ifc4x3_rc4::IfcWasteTerminal::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcWasteTerminal::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcWasteTerminal::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1290]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWasteTerminal::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1290]); }
Ifc4x3_rc4::IfcWasteTerminal::IfcWasteTerminal(IfcEntityInstanceData&& e) : IfcFlowTerminal(std::move(e)) { }
Ifc4x3_rc4::IfcWasteTerminal::IfcWasteTerminal(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< ::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Value > v9_PredefinedType) : IfcFlowTerminal(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcWasteTerminalType
::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Value Ifc4x3_rc4::IfcWasteTerminalType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcWasteTerminalType::setPredefinedType(::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }


const IfcParse::entity& Ifc4x3_rc4::IfcWasteTerminalType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1291]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWasteTerminalType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1291]); }
Ifc4x3_rc4::IfcWasteTerminalType::IfcWasteTerminalType(IfcEntityInstanceData&& e) : IfcFlowTerminalType(std::move(e)) { }
Ifc4x3_rc4::IfcWasteTerminalType::IfcWasteTerminalType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Value v10_PredefinedType) : IfcFlowTerminalType(IfcEntityInstanceData(storage_t(10))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcWasteTerminalTypeEnum::Class(),(size_t)v10_PredefinedType)));; populate_derived(); }

// Function implementations for IfcWaterStratum


const IfcParse::entity& Ifc4x3_rc4::IfcWaterStratum::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1293]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWaterStratum::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1293]); }
Ifc4x3_rc4::IfcWaterStratum::IfcWaterStratum(IfcEntityInstanceData&& e) : IfcGeotechnicalStratum(std::move(e)) { }
Ifc4x3_rc4::IfcWaterStratum::IfcWaterStratum(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag) : IfcGeotechnicalStratum(IfcEntityInstanceData(storage_t(8))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }; populate_derived(); }

// Function implementations for IfcWindow
boost::optional< double > Ifc4x3_rc4::IfcWindow::OverallHeight() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcWindow::setOverallHeight(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< double > Ifc4x3_rc4::IfcWindow::OverallWidth() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcWindow::setOverallWidth(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< ::Ifc4x3_rc4::IfcWindowTypeEnum::Value > Ifc4x3_rc4::IfcWindow::PredefinedType() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcWindowTypeEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcWindow::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcWindowTypeEnum::Value > v) { if (v) {set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcWindowTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(10);} }
boost::optional< ::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value > Ifc4x3_rc4::IfcWindow::PartitioningType() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::FromString(data_.get_attribute_value(11)); }
void Ifc4x3_rc4::IfcWindow::setPartitioningType(boost::optional< ::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value > v) { if (v) {set_attribute_value(11, EnumerationReference(&::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Class(), (size_t) *v));} else {unset_attribute_value(11);} }
boost::optional< std::string > Ifc4x3_rc4::IfcWindow::UserDefinedPartitioningType() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcWindow::setUserDefinedPartitioningType(boost::optional< std::string > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }


const IfcParse::entity& Ifc4x3_rc4::IfcWindow::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1294]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWindow::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1294]); }
Ifc4x3_rc4::IfcWindow::IfcWindow(IfcEntityInstanceData&& e) : IfcBuiltElement(std::move(e)) { }
Ifc4x3_rc4::IfcWindow::IfcWindow(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< double > v9_OverallHeight, boost::optional< double > v10_OverallWidth, boost::optional< ::Ifc4x3_rc4::IfcWindowTypeEnum::Value > v11_PredefinedType, boost::optional< ::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value > v12_PartitioningType, boost::optional< std::string > v13_UserDefinedPartitioningType) : IfcBuiltElement(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_OverallHeight) {set_attribute_value(8, (*v9_OverallHeight)); } if (v10_OverallWidth) {set_attribute_value(9, (*v10_OverallWidth)); } if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowTypeEnum::Class(),(size_t)*v11_PredefinedType))); } if (v12_PartitioningType) {set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Class(),(size_t)*v12_PartitioningType))); } if (v13_UserDefinedPartitioningType) {set_attribute_value(12, (*v13_UserDefinedPartitioningType)); }; populate_derived(); }

// Function implementations for IfcWindowLiningProperties
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::LiningDepth() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setLiningDepth(boost::optional< double > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::LiningThickness() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setLiningThickness(boost::optional< double > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::TransomThickness() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setTransomThickness(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::MullionThickness() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setMullionThickness(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::FirstTransomOffset() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setFirstTransomOffset(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::SecondTransomOffset() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } double v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setSecondTransomOffset(boost::optional< double > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::FirstMullionOffset() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } double v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setFirstMullionOffset(boost::optional< double > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::SecondMullionOffset() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } double v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setSecondMullionOffset(boost::optional< double > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
::Ifc4x3_rc4::IfcShapeAspect* Ifc4x3_rc4::IfcWindowLiningProperties::ShapeAspectStyle() const { if(data_.get_attribute_value(12).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(12)))->as<::Ifc4x3_rc4::IfcShapeAspect>(true); }
void Ifc4x3_rc4::IfcWindowLiningProperties::setShapeAspectStyle(::Ifc4x3_rc4::IfcShapeAspect* v) { set_attribute_value(12, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(12); }
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::LiningOffset() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } double v = data_.get_attribute_value(13); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setLiningOffset(boost::optional< double > v) { if (v) {set_attribute_value(13, *v);} else {unset_attribute_value(13);} }
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::LiningToPanelOffsetX() const { if(data_.get_attribute_value(14).isNull()) { return boost::none; } double v = data_.get_attribute_value(14); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setLiningToPanelOffsetX(boost::optional< double > v) { if (v) {set_attribute_value(14, *v);} else {unset_attribute_value(14);} }
boost::optional< double > Ifc4x3_rc4::IfcWindowLiningProperties::LiningToPanelOffsetY() const { if(data_.get_attribute_value(15).isNull()) { return boost::none; } double v = data_.get_attribute_value(15); return v; }
void Ifc4x3_rc4::IfcWindowLiningProperties::setLiningToPanelOffsetY(boost::optional< double > v) { if (v) {set_attribute_value(15, *v);} else {unset_attribute_value(15);} }


const IfcParse::entity& Ifc4x3_rc4::IfcWindowLiningProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1295]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWindowLiningProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1295]); }
Ifc4x3_rc4::IfcWindowLiningProperties::IfcWindowLiningProperties(IfcEntityInstanceData&& e) : IfcPreDefinedPropertySet(std::move(e)) { }
Ifc4x3_rc4::IfcWindowLiningProperties::IfcWindowLiningProperties(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< double > v5_LiningDepth, boost::optional< double > v6_LiningThickness, boost::optional< double > v7_TransomThickness, boost::optional< double > v8_MullionThickness, boost::optional< double > v9_FirstTransomOffset, boost::optional< double > v10_SecondTransomOffset, boost::optional< double > v11_FirstMullionOffset, boost::optional< double > v12_SecondMullionOffset, ::Ifc4x3_rc4::IfcShapeAspect* v13_ShapeAspectStyle, boost::optional< double > v14_LiningOffset, boost::optional< double > v15_LiningToPanelOffsetX, boost::optional< double > v16_LiningToPanelOffsetY) : IfcPreDefinedPropertySet(IfcEntityInstanceData(storage_t(16))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_LiningDepth) {set_attribute_value(4, (*v5_LiningDepth)); } if (v6_LiningThickness) {set_attribute_value(5, (*v6_LiningThickness)); } if (v7_TransomThickness) {set_attribute_value(6, (*v7_TransomThickness)); } if (v8_MullionThickness) {set_attribute_value(7, (*v8_MullionThickness)); } if (v9_FirstTransomOffset) {set_attribute_value(8, (*v9_FirstTransomOffset)); } if (v10_SecondTransomOffset) {set_attribute_value(9, (*v10_SecondTransomOffset)); } if (v11_FirstMullionOffset) {set_attribute_value(10, (*v11_FirstMullionOffset)); } if (v12_SecondMullionOffset) {set_attribute_value(11, (*v12_SecondMullionOffset)); }set_attribute_value(12, v13_ShapeAspectStyle ? v13_ShapeAspectStyle->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v14_LiningOffset) {set_attribute_value(13, (*v14_LiningOffset)); } if (v15_LiningToPanelOffsetX) {set_attribute_value(14, (*v15_LiningToPanelOffsetX)); } if (v16_LiningToPanelOffsetY) {set_attribute_value(15, (*v16_LiningToPanelOffsetY)); }; populate_derived(); }

// Function implementations for IfcWindowPanelProperties
::Ifc4x3_rc4::IfcWindowPanelOperationEnum::Value Ifc4x3_rc4::IfcWindowPanelProperties::OperationType() const {  return ::Ifc4x3_rc4::IfcWindowPanelOperationEnum::FromString(data_.get_attribute_value(4)); }
void Ifc4x3_rc4::IfcWindowPanelProperties::setOperationType(::Ifc4x3_rc4::IfcWindowPanelOperationEnum::Value v) { set_attribute_value(4, EnumerationReference(&::Ifc4x3_rc4::IfcWindowPanelOperationEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(4); }
::Ifc4x3_rc4::IfcWindowPanelPositionEnum::Value Ifc4x3_rc4::IfcWindowPanelProperties::PanelPosition() const {  return ::Ifc4x3_rc4::IfcWindowPanelPositionEnum::FromString(data_.get_attribute_value(5)); }
void Ifc4x3_rc4::IfcWindowPanelProperties::setPanelPosition(::Ifc4x3_rc4::IfcWindowPanelPositionEnum::Value v) { set_attribute_value(5, EnumerationReference(&::Ifc4x3_rc4::IfcWindowPanelPositionEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(5); }
boost::optional< double > Ifc4x3_rc4::IfcWindowPanelProperties::FrameDepth() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcWindowPanelProperties::setFrameDepth(boost::optional< double > v) { if (v) {set_attribute_value(6, *v);} else {unset_attribute_value(6);} }
boost::optional< double > Ifc4x3_rc4::IfcWindowPanelProperties::FrameThickness() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcWindowPanelProperties::setFrameThickness(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
::Ifc4x3_rc4::IfcShapeAspect* Ifc4x3_rc4::IfcWindowPanelProperties::ShapeAspectStyle() const { if(data_.get_attribute_value(8).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(8)))->as<::Ifc4x3_rc4::IfcShapeAspect>(true); }
void Ifc4x3_rc4::IfcWindowPanelProperties::setShapeAspectStyle(::Ifc4x3_rc4::IfcShapeAspect* v) { set_attribute_value(8, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(8); }


const IfcParse::entity& Ifc4x3_rc4::IfcWindowPanelProperties::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1298]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWindowPanelProperties::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1298]); }
Ifc4x3_rc4::IfcWindowPanelProperties::IfcWindowPanelProperties(IfcEntityInstanceData&& e) : IfcPreDefinedPropertySet(std::move(e)) { }
Ifc4x3_rc4::IfcWindowPanelProperties::IfcWindowPanelProperties(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, ::Ifc4x3_rc4::IfcWindowPanelOperationEnum::Value v5_OperationType, ::Ifc4x3_rc4::IfcWindowPanelPositionEnum::Value v6_PanelPosition, boost::optional< double > v7_FrameDepth, boost::optional< double > v8_FrameThickness, ::Ifc4x3_rc4::IfcShapeAspect* v9_ShapeAspectStyle) : IfcPreDefinedPropertySet(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); }set_attribute_value(4, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowPanelOperationEnum::Class(),(size_t)v5_OperationType)));set_attribute_value(5, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowPanelPositionEnum::Class(),(size_t)v6_PanelPosition))); if (v7_FrameDepth) {set_attribute_value(6, (*v7_FrameDepth)); } if (v8_FrameThickness) {set_attribute_value(7, (*v8_FrameThickness)); }set_attribute_value(8, v9_ShapeAspectStyle ? v9_ShapeAspectStyle->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);; populate_derived(); }

// Function implementations for IfcWindowStandardCase


const IfcParse::entity& Ifc4x3_rc4::IfcWindowStandardCase::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1299]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWindowStandardCase::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1299]); }
Ifc4x3_rc4::IfcWindowStandardCase::IfcWindowStandardCase(IfcEntityInstanceData&& e) : IfcWindow(std::move(e)) { }
Ifc4x3_rc4::IfcWindowStandardCase::IfcWindowStandardCase(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, ::Ifc4x3_rc4::IfcObjectPlacement* v6_ObjectPlacement, ::Ifc4x3_rc4::IfcProductRepresentation* v7_Representation, boost::optional< std::string > v8_Tag, boost::optional< double > v9_OverallHeight, boost::optional< double > v10_OverallWidth, boost::optional< ::Ifc4x3_rc4::IfcWindowTypeEnum::Value > v11_PredefinedType, boost::optional< ::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value > v12_PartitioningType, boost::optional< std::string > v13_UserDefinedPartitioningType) : IfcWindow(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); }set_attribute_value(5, v6_ObjectPlacement ? v6_ObjectPlacement->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(6, v7_Representation ? v7_Representation->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_OverallHeight) {set_attribute_value(8, (*v9_OverallHeight)); } if (v10_OverallWidth) {set_attribute_value(9, (*v10_OverallWidth)); } if (v11_PredefinedType) {set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowTypeEnum::Class(),(size_t)*v11_PredefinedType))); } if (v12_PartitioningType) {set_attribute_value(11, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Class(),(size_t)*v12_PartitioningType))); } if (v13_UserDefinedPartitioningType) {set_attribute_value(12, (*v13_UserDefinedPartitioningType)); }; populate_derived(); }

// Function implementations for IfcWindowStyle
::Ifc4x3_rc4::IfcWindowStyleConstructionEnum::Value Ifc4x3_rc4::IfcWindowStyle::ConstructionType() const {  return ::Ifc4x3_rc4::IfcWindowStyleConstructionEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcWindowStyle::setConstructionType(::Ifc4x3_rc4::IfcWindowStyleConstructionEnum::Value v) { set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcWindowStyleConstructionEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(8); }
::Ifc4x3_rc4::IfcWindowStyleOperationEnum::Value Ifc4x3_rc4::IfcWindowStyle::OperationType() const {  return ::Ifc4x3_rc4::IfcWindowStyleOperationEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcWindowStyle::setOperationType(::Ifc4x3_rc4::IfcWindowStyleOperationEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcWindowStyleOperationEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
bool Ifc4x3_rc4::IfcWindowStyle::ParameterTakesPrecedence() const {  bool v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcWindowStyle::setParameterTakesPrecedence(bool v) { set_attribute_value(10, v);if constexpr (false)unset_attribute_value(10); }
bool Ifc4x3_rc4::IfcWindowStyle::Sizeable() const {  bool v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcWindowStyle::setSizeable(bool v) { set_attribute_value(11, v);if constexpr (false)unset_attribute_value(11); }


const IfcParse::entity& Ifc4x3_rc4::IfcWindowStyle::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1300]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWindowStyle::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1300]); }
Ifc4x3_rc4::IfcWindowStyle::IfcWindowStyle(IfcEntityInstanceData&& e) : IfcTypeProduct(std::move(e)) { }
Ifc4x3_rc4::IfcWindowStyle::IfcWindowStyle(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, ::Ifc4x3_rc4::IfcWindowStyleConstructionEnum::Value v9_ConstructionType, ::Ifc4x3_rc4::IfcWindowStyleOperationEnum::Value v10_OperationType, bool v11_ParameterTakesPrecedence, bool v12_Sizeable) : IfcTypeProduct(IfcEntityInstanceData(storage_t(12))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); }set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowStyleConstructionEnum::Class(),(size_t)v9_ConstructionType)));set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowStyleOperationEnum::Class(),(size_t)v10_OperationType)));set_attribute_value(10, (v11_ParameterTakesPrecedence));set_attribute_value(11, (v12_Sizeable));; populate_derived(); }

// Function implementations for IfcWindowType
::Ifc4x3_rc4::IfcWindowTypeEnum::Value Ifc4x3_rc4::IfcWindowType::PredefinedType() const {  return ::Ifc4x3_rc4::IfcWindowTypeEnum::FromString(data_.get_attribute_value(9)); }
void Ifc4x3_rc4::IfcWindowType::setPredefinedType(::Ifc4x3_rc4::IfcWindowTypeEnum::Value v) { set_attribute_value(9, EnumerationReference(&::Ifc4x3_rc4::IfcWindowTypeEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(9); }
::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value Ifc4x3_rc4::IfcWindowType::PartitioningType() const {  return ::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::FromString(data_.get_attribute_value(10)); }
void Ifc4x3_rc4::IfcWindowType::setPartitioningType(::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value v) { set_attribute_value(10, EnumerationReference(&::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Class(), (size_t) v));if constexpr (false)unset_attribute_value(10); }
boost::optional< bool > Ifc4x3_rc4::IfcWindowType::ParameterTakesPrecedence() const { if(data_.get_attribute_value(11).isNull()) { return boost::none; } bool v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcWindowType::setParameterTakesPrecedence(boost::optional< bool > v) { if (v) {set_attribute_value(11, *v);} else {unset_attribute_value(11);} }
boost::optional< std::string > Ifc4x3_rc4::IfcWindowType::UserDefinedPartitioningType() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcWindowType::setUserDefinedPartitioningType(boost::optional< std::string > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }


const IfcParse::entity& Ifc4x3_rc4::IfcWindowType::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1303]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWindowType::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1303]); }
Ifc4x3_rc4::IfcWindowType::IfcWindowType(IfcEntityInstanceData&& e) : IfcBuiltElementType(std::move(e)) { }
Ifc4x3_rc4::IfcWindowType::IfcWindowType(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ApplicableOccurrence, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPropertySetDefinition >::ptr > v6_HasPropertySets, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcRepresentationMap >::ptr > v7_RepresentationMaps, boost::optional< std::string > v8_Tag, boost::optional< std::string > v9_ElementType, ::Ifc4x3_rc4::IfcWindowTypeEnum::Value v10_PredefinedType, ::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Value v11_PartitioningType, boost::optional< bool > v12_ParameterTakesPrecedence, boost::optional< std::string > v13_UserDefinedPartitioningType) : IfcBuiltElementType(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ApplicableOccurrence) {set_attribute_value(4, (*v5_ApplicableOccurrence)); } if (v6_HasPropertySets) {set_attribute_value(5, (*v6_HasPropertySets)->generalize()); } if (v7_RepresentationMaps) {set_attribute_value(6, (*v7_RepresentationMaps)->generalize()); } if (v8_Tag) {set_attribute_value(7, (*v8_Tag)); } if (v9_ElementType) {set_attribute_value(8, (*v9_ElementType)); }set_attribute_value(9, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowTypeEnum::Class(),(size_t)v10_PredefinedType)));set_attribute_value(10, (EnumerationReference(&::Ifc4x3_rc4::IfcWindowTypePartitioningEnum::Class(),(size_t)v11_PartitioningType))); if (v12_ParameterTakesPrecedence) {set_attribute_value(11, (*v12_ParameterTakesPrecedence)); } if (v13_UserDefinedPartitioningType) {set_attribute_value(12, (*v13_UserDefinedPartitioningType)); }; populate_derived(); }

// Function implementations for IfcWorkCalendar
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcWorkTime >::ptr > Ifc4x3_rc4::IfcWorkCalendar::WorkingTimes() const { if(data_.get_attribute_value(6).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(6); return es->as< ::Ifc4x3_rc4::IfcWorkTime >(); }
void Ifc4x3_rc4::IfcWorkCalendar::setWorkingTimes(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcWorkTime >::ptr > v) { if (v) {set_attribute_value(6, (*v)->generalize());} else {unset_attribute_value(6);} }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcWorkTime >::ptr > Ifc4x3_rc4::IfcWorkCalendar::ExceptionTimes() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcWorkTime >(); }
void Ifc4x3_rc4::IfcWorkCalendar::setExceptionTimes(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcWorkTime >::ptr > v) { if (v) {set_attribute_value(7, (*v)->generalize());} else {unset_attribute_value(7);} }
boost::optional< ::Ifc4x3_rc4::IfcWorkCalendarTypeEnum::Value > Ifc4x3_rc4::IfcWorkCalendar::PredefinedType() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcWorkCalendarTypeEnum::FromString(data_.get_attribute_value(8)); }
void Ifc4x3_rc4::IfcWorkCalendar::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcWorkCalendarTypeEnum::Value > v) { if (v) {set_attribute_value(8, EnumerationReference(&::Ifc4x3_rc4::IfcWorkCalendarTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcWorkCalendar::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1306]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWorkCalendar::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1306]); }
Ifc4x3_rc4::IfcWorkCalendar::IfcWorkCalendar(IfcEntityInstanceData&& e) : IfcControl(std::move(e)) { }
Ifc4x3_rc4::IfcWorkCalendar::IfcWorkCalendar(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcWorkTime >::ptr > v7_WorkingTimes, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcWorkTime >::ptr > v8_ExceptionTimes, boost::optional< ::Ifc4x3_rc4::IfcWorkCalendarTypeEnum::Value > v9_PredefinedType) : IfcControl(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); } if (v7_WorkingTimes) {set_attribute_value(6, (*v7_WorkingTimes)->generalize()); } if (v8_ExceptionTimes) {set_attribute_value(7, (*v8_ExceptionTimes)->generalize()); } if (v9_PredefinedType) {set_attribute_value(8, (EnumerationReference(&::Ifc4x3_rc4::IfcWorkCalendarTypeEnum::Class(),(size_t)*v9_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcWorkControl
std::string Ifc4x3_rc4::IfcWorkControl::CreationDate() const {  std::string v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcWorkControl::setCreationDate(std::string v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPerson >::ptr > Ifc4x3_rc4::IfcWorkControl::Creators() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } aggregate_of_instance::ptr es = data_.get_attribute_value(7); return es->as< ::Ifc4x3_rc4::IfcPerson >(); }
void Ifc4x3_rc4::IfcWorkControl::setCreators(boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPerson >::ptr > v) { if (v) {set_attribute_value(7, (*v)->generalize());} else {unset_attribute_value(7);} }
boost::optional< std::string > Ifc4x3_rc4::IfcWorkControl::Purpose() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcWorkControl::setPurpose(boost::optional< std::string > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }
boost::optional< std::string > Ifc4x3_rc4::IfcWorkControl::Duration() const { if(data_.get_attribute_value(9).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(9); return v; }
void Ifc4x3_rc4::IfcWorkControl::setDuration(boost::optional< std::string > v) { if (v) {set_attribute_value(9, *v);} else {unset_attribute_value(9);} }
boost::optional< std::string > Ifc4x3_rc4::IfcWorkControl::TotalFloat() const { if(data_.get_attribute_value(10).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(10); return v; }
void Ifc4x3_rc4::IfcWorkControl::setTotalFloat(boost::optional< std::string > v) { if (v) {set_attribute_value(10, *v);} else {unset_attribute_value(10);} }
std::string Ifc4x3_rc4::IfcWorkControl::StartTime() const {  std::string v = data_.get_attribute_value(11); return v; }
void Ifc4x3_rc4::IfcWorkControl::setStartTime(std::string v) { set_attribute_value(11, v);if constexpr (false)unset_attribute_value(11); }
boost::optional< std::string > Ifc4x3_rc4::IfcWorkControl::FinishTime() const { if(data_.get_attribute_value(12).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(12); return v; }
void Ifc4x3_rc4::IfcWorkControl::setFinishTime(boost::optional< std::string > v) { if (v) {set_attribute_value(12, *v);} else {unset_attribute_value(12);} }


const IfcParse::entity& Ifc4x3_rc4::IfcWorkControl::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1308]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWorkControl::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1308]); }
Ifc4x3_rc4::IfcWorkControl::IfcWorkControl(IfcEntityInstanceData&& e) : IfcControl(std::move(e)) { }
Ifc4x3_rc4::IfcWorkControl::IfcWorkControl(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, std::string v7_CreationDate, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPerson >::ptr > v8_Creators, boost::optional< std::string > v9_Purpose, boost::optional< std::string > v10_Duration, boost::optional< std::string > v11_TotalFloat, std::string v12_StartTime, boost::optional< std::string > v13_FinishTime) : IfcControl(IfcEntityInstanceData(storage_t(13))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); }set_attribute_value(6, (v7_CreationDate)); if (v8_Creators) {set_attribute_value(7, (*v8_Creators)->generalize()); } if (v9_Purpose) {set_attribute_value(8, (*v9_Purpose)); } if (v10_Duration) {set_attribute_value(9, (*v10_Duration)); } if (v11_TotalFloat) {set_attribute_value(10, (*v11_TotalFloat)); }set_attribute_value(11, (v12_StartTime)); if (v13_FinishTime) {set_attribute_value(12, (*v13_FinishTime)); }; populate_derived(); }

// Function implementations for IfcWorkPlan
boost::optional< ::Ifc4x3_rc4::IfcWorkPlanTypeEnum::Value > Ifc4x3_rc4::IfcWorkPlan::PredefinedType() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcWorkPlanTypeEnum::FromString(data_.get_attribute_value(13)); }
void Ifc4x3_rc4::IfcWorkPlan::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcWorkPlanTypeEnum::Value > v) { if (v) {set_attribute_value(13, EnumerationReference(&::Ifc4x3_rc4::IfcWorkPlanTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(13);} }


const IfcParse::entity& Ifc4x3_rc4::IfcWorkPlan::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1309]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWorkPlan::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1309]); }
Ifc4x3_rc4::IfcWorkPlan::IfcWorkPlan(IfcEntityInstanceData&& e) : IfcWorkControl(std::move(e)) { }
Ifc4x3_rc4::IfcWorkPlan::IfcWorkPlan(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, std::string v7_CreationDate, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPerson >::ptr > v8_Creators, boost::optional< std::string > v9_Purpose, boost::optional< std::string > v10_Duration, boost::optional< std::string > v11_TotalFloat, std::string v12_StartTime, boost::optional< std::string > v13_FinishTime, boost::optional< ::Ifc4x3_rc4::IfcWorkPlanTypeEnum::Value > v14_PredefinedType) : IfcWorkControl(IfcEntityInstanceData(storage_t(14))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); }set_attribute_value(6, (v7_CreationDate)); if (v8_Creators) {set_attribute_value(7, (*v8_Creators)->generalize()); } if (v9_Purpose) {set_attribute_value(8, (*v9_Purpose)); } if (v10_Duration) {set_attribute_value(9, (*v10_Duration)); } if (v11_TotalFloat) {set_attribute_value(10, (*v11_TotalFloat)); }set_attribute_value(11, (v12_StartTime)); if (v13_FinishTime) {set_attribute_value(12, (*v13_FinishTime)); } if (v14_PredefinedType) {set_attribute_value(13, (EnumerationReference(&::Ifc4x3_rc4::IfcWorkPlanTypeEnum::Class(),(size_t)*v14_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcWorkSchedule
boost::optional< ::Ifc4x3_rc4::IfcWorkScheduleTypeEnum::Value > Ifc4x3_rc4::IfcWorkSchedule::PredefinedType() const { if(data_.get_attribute_value(13).isNull()) { return boost::none; } return ::Ifc4x3_rc4::IfcWorkScheduleTypeEnum::FromString(data_.get_attribute_value(13)); }
void Ifc4x3_rc4::IfcWorkSchedule::setPredefinedType(boost::optional< ::Ifc4x3_rc4::IfcWorkScheduleTypeEnum::Value > v) { if (v) {set_attribute_value(13, EnumerationReference(&::Ifc4x3_rc4::IfcWorkScheduleTypeEnum::Class(), (size_t) *v));} else {unset_attribute_value(13);} }


const IfcParse::entity& Ifc4x3_rc4::IfcWorkSchedule::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1311]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWorkSchedule::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1311]); }
Ifc4x3_rc4::IfcWorkSchedule::IfcWorkSchedule(IfcEntityInstanceData&& e) : IfcWorkControl(std::move(e)) { }
Ifc4x3_rc4::IfcWorkSchedule::IfcWorkSchedule(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_Identification, std::string v7_CreationDate, boost::optional< aggregate_of< ::Ifc4x3_rc4::IfcPerson >::ptr > v8_Creators, boost::optional< std::string > v9_Purpose, boost::optional< std::string > v10_Duration, boost::optional< std::string > v11_TotalFloat, std::string v12_StartTime, boost::optional< std::string > v13_FinishTime, boost::optional< ::Ifc4x3_rc4::IfcWorkScheduleTypeEnum::Value > v14_PredefinedType) : IfcWorkControl(IfcEntityInstanceData(storage_t(14))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_Identification) {set_attribute_value(5, (*v6_Identification)); }set_attribute_value(6, (v7_CreationDate)); if (v8_Creators) {set_attribute_value(7, (*v8_Creators)->generalize()); } if (v9_Purpose) {set_attribute_value(8, (*v9_Purpose)); } if (v10_Duration) {set_attribute_value(9, (*v10_Duration)); } if (v11_TotalFloat) {set_attribute_value(10, (*v11_TotalFloat)); }set_attribute_value(11, (v12_StartTime)); if (v13_FinishTime) {set_attribute_value(12, (*v13_FinishTime)); } if (v14_PredefinedType) {set_attribute_value(13, (EnumerationReference(&::Ifc4x3_rc4::IfcWorkScheduleTypeEnum::Class(),(size_t)*v14_PredefinedType))); }; populate_derived(); }

// Function implementations for IfcWorkTime
::Ifc4x3_rc4::IfcRecurrencePattern* Ifc4x3_rc4::IfcWorkTime::RecurrencePattern() const { if(data_.get_attribute_value(3).isNull()) { return nullptr; } return ((IfcUtil::IfcBaseClass*)(data_.get_attribute_value(3)))->as<::Ifc4x3_rc4::IfcRecurrencePattern>(true); }
void Ifc4x3_rc4::IfcWorkTime::setRecurrencePattern(::Ifc4x3_rc4::IfcRecurrencePattern* v) { set_attribute_value(3, v->as<IfcUtil::IfcBaseClass>());if constexpr (false)unset_attribute_value(3); }
boost::optional< std::string > Ifc4x3_rc4::IfcWorkTime::Start() const { if(data_.get_attribute_value(4).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcWorkTime::setStart(boost::optional< std::string > v) { if (v) {set_attribute_value(4, *v);} else {unset_attribute_value(4);} }
boost::optional< std::string > Ifc4x3_rc4::IfcWorkTime::Finish() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcWorkTime::setFinish(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }


const IfcParse::entity& Ifc4x3_rc4::IfcWorkTime::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1313]); }
const IfcParse::entity& Ifc4x3_rc4::IfcWorkTime::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1313]); }
Ifc4x3_rc4::IfcWorkTime::IfcWorkTime(IfcEntityInstanceData&& e) : IfcSchedulingTime(std::move(e)) { }
Ifc4x3_rc4::IfcWorkTime::IfcWorkTime(boost::optional< std::string > v1_Name, boost::optional< ::Ifc4x3_rc4::IfcDataOriginEnum::Value > v2_DataOrigin, boost::optional< std::string > v3_UserDefinedDataOrigin, ::Ifc4x3_rc4::IfcRecurrencePattern* v4_RecurrencePattern, boost::optional< std::string > v5_Start, boost::optional< std::string > v6_Finish) : IfcSchedulingTime(IfcEntityInstanceData(storage_t(6))) {  if (v1_Name) {set_attribute_value(0, (*v1_Name)); } if (v2_DataOrigin) {set_attribute_value(1, (EnumerationReference(&::Ifc4x3_rc4::IfcDataOriginEnum::Class(),(size_t)*v2_DataOrigin))); } if (v3_UserDefinedDataOrigin) {set_attribute_value(2, (*v3_UserDefinedDataOrigin)); }set_attribute_value(3, v4_RecurrencePattern ? v4_RecurrencePattern->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v5_Start) {set_attribute_value(4, (*v5_Start)); } if (v6_Finish) {set_attribute_value(5, (*v6_Finish)); }; populate_derived(); }

// Function implementations for IfcZShapeProfileDef
double Ifc4x3_rc4::IfcZShapeProfileDef::Depth() const {  double v = data_.get_attribute_value(3); return v; }
void Ifc4x3_rc4::IfcZShapeProfileDef::setDepth(double v) { set_attribute_value(3, v);if constexpr (false)unset_attribute_value(3); }
double Ifc4x3_rc4::IfcZShapeProfileDef::FlangeWidth() const {  double v = data_.get_attribute_value(4); return v; }
void Ifc4x3_rc4::IfcZShapeProfileDef::setFlangeWidth(double v) { set_attribute_value(4, v);if constexpr (false)unset_attribute_value(4); }
double Ifc4x3_rc4::IfcZShapeProfileDef::WebThickness() const {  double v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcZShapeProfileDef::setWebThickness(double v) { set_attribute_value(5, v);if constexpr (false)unset_attribute_value(5); }
double Ifc4x3_rc4::IfcZShapeProfileDef::FlangeThickness() const {  double v = data_.get_attribute_value(6); return v; }
void Ifc4x3_rc4::IfcZShapeProfileDef::setFlangeThickness(double v) { set_attribute_value(6, v);if constexpr (false)unset_attribute_value(6); }
boost::optional< double > Ifc4x3_rc4::IfcZShapeProfileDef::FilletRadius() const { if(data_.get_attribute_value(7).isNull()) { return boost::none; } double v = data_.get_attribute_value(7); return v; }
void Ifc4x3_rc4::IfcZShapeProfileDef::setFilletRadius(boost::optional< double > v) { if (v) {set_attribute_value(7, *v);} else {unset_attribute_value(7);} }
boost::optional< double > Ifc4x3_rc4::IfcZShapeProfileDef::EdgeRadius() const { if(data_.get_attribute_value(8).isNull()) { return boost::none; } double v = data_.get_attribute_value(8); return v; }
void Ifc4x3_rc4::IfcZShapeProfileDef::setEdgeRadius(boost::optional< double > v) { if (v) {set_attribute_value(8, *v);} else {unset_attribute_value(8);} }


const IfcParse::entity& Ifc4x3_rc4::IfcZShapeProfileDef::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1315]); }
const IfcParse::entity& Ifc4x3_rc4::IfcZShapeProfileDef::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1315]); }
Ifc4x3_rc4::IfcZShapeProfileDef::IfcZShapeProfileDef(IfcEntityInstanceData&& e) : IfcParameterizedProfileDef(std::move(e)) { }
Ifc4x3_rc4::IfcZShapeProfileDef::IfcZShapeProfileDef(::Ifc4x3_rc4::IfcProfileTypeEnum::Value v1_ProfileType, boost::optional< std::string > v2_ProfileName, ::Ifc4x3_rc4::IfcAxis2Placement2D* v3_Position, double v4_Depth, double v5_FlangeWidth, double v6_WebThickness, double v7_FlangeThickness, boost::optional< double > v8_FilletRadius, boost::optional< double > v9_EdgeRadius) : IfcParameterizedProfileDef(IfcEntityInstanceData(storage_t(9))) { set_attribute_value(0, (EnumerationReference(&::Ifc4x3_rc4::IfcProfileTypeEnum::Class(),(size_t)v1_ProfileType))); if (v2_ProfileName) {set_attribute_value(1, (*v2_ProfileName)); }set_attribute_value(2, v3_Position ? v3_Position->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr);set_attribute_value(3, (v4_Depth));set_attribute_value(4, (v5_FlangeWidth));set_attribute_value(5, (v6_WebThickness));set_attribute_value(6, (v7_FlangeThickness)); if (v8_FilletRadius) {set_attribute_value(7, (*v8_FilletRadius)); } if (v9_EdgeRadius) {set_attribute_value(8, (*v9_EdgeRadius)); }; populate_derived(); }

// Function implementations for IfcZone
boost::optional< std::string > Ifc4x3_rc4::IfcZone::LongName() const { if(data_.get_attribute_value(5).isNull()) { return boost::none; } std::string v = data_.get_attribute_value(5); return v; }
void Ifc4x3_rc4::IfcZone::setLongName(boost::optional< std::string > v) { if (v) {set_attribute_value(5, *v);} else {unset_attribute_value(5);} }


const IfcParse::entity& Ifc4x3_rc4::IfcZone::declaration() const { return *((IfcParse::entity*)IFC4X3_RC4_types[1314]); }
const IfcParse::entity& Ifc4x3_rc4::IfcZone::Class() { return *((IfcParse::entity*)IFC4X3_RC4_types[1314]); }
Ifc4x3_rc4::IfcZone::IfcZone(IfcEntityInstanceData&& e) : IfcSystem(std::move(e)) { }
Ifc4x3_rc4::IfcZone::IfcZone(std::string v1_GlobalId, ::Ifc4x3_rc4::IfcOwnerHistory* v2_OwnerHistory, boost::optional< std::string > v3_Name, boost::optional< std::string > v4_Description, boost::optional< std::string > v5_ObjectType, boost::optional< std::string > v6_LongName) : IfcSystem(IfcEntityInstanceData(storage_t(6))) { set_attribute_value(0, (v1_GlobalId));set_attribute_value(1, v2_OwnerHistory ? v2_OwnerHistory->as<IfcUtil::IfcBaseClass>() : (IfcUtil::IfcBaseClass*) nullptr); if (v3_Name) {set_attribute_value(2, (*v3_Name)); } if (v4_Description) {set_attribute_value(3, (*v4_Description)); } if (v5_ObjectType) {set_attribute_value(4, (*v5_ObjectType)); } if (v6_LongName) {set_attribute_value(5, (*v6_LongName)); }; populate_derived(); }

