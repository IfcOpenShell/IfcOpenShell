diff --git a/src/Message/Message_PrinterSystemLog.cxx b/src/Message/Message_PrinterSystemLog.cxx
index 0c82c2167..a2e9e6d68 100644
--- a/src/Message/Message_PrinterSystemLog.cxx
+++ b/src/Message/Message_PrinterSystemLog.cxx
@@ -55,27 +55,6 @@
     return ANDROID_LOG_DEBUG;
   }
 #elif defined(__EMSCRIPTEN__)
-  #include <emscripten/emscripten.h>
-
-  //! Print message to console.debug().
-  EM_JS(void, occJSConsoleDebug, (const char* theStr), {
-    console.debug(UTF8ToString(theStr));
-  });
-
-  //! Print message to console.info().
-  EM_JS(void, occJSConsoleInfo, (const char* theStr), {
-    console.info(UTF8ToString(theStr));
-  });
-
-  //! Print message to console.warn().
-  EM_JS(void, occJSConsoleWarn, (const char* theStr), {
-    console.warn(UTF8ToString(theStr));
-  });
-
-  //! Print message to console.error().
-  EM_JS(void, occJSConsoleError, (const char* theStr), {
-    console.error(UTF8ToString(theStr));
-  });
 #else
   #include <syslog.h>
 
@@ -169,16 +148,6 @@ void Message_PrinterSystemLog::send (const TCollection_AsciiString& theString,
 #elif defined(__ANDROID__)
   __android_log_write (getAndroidLogPriority (theGravity), myEventSourceName.ToCString(), theString.ToCString());
 #elif defined(__EMSCRIPTEN__)
-  // don't use bogus emscripten_log() corrupting UNICODE strings
-  switch (theGravity)
-  {
-    case Message_Trace:   occJSConsoleDebug(theString.ToCString()); return;
-    case Message_Info:    occJSConsoleInfo (theString.ToCString()); return;
-    case Message_Warning: occJSConsoleWarn (theString.ToCString()); return;
-    case Message_Alarm:   occJSConsoleError(theString.ToCString()); return;
-    case Message_Fail:    occJSConsoleError(theString.ToCString()); return;
-  }
-  occJSConsoleWarn (theString.ToCString());
 #else
   syslog (getSysLogPriority (theGravity), "%s", theString.ToCString());
 #endif
diff --git a/src/OSD/OSD_MemInfo.cxx b/src/OSD/OSD_MemInfo.cxx
index 08a939beb..7c1fc79b3 100644
--- a/src/OSD/OSD_MemInfo.cxx
+++ b/src/OSD/OSD_MemInfo.cxx
@@ -37,15 +37,6 @@
 
 #include <OSD_MemInfo.hxx>
 
-#if defined(__EMSCRIPTEN__)
-  #include <emscripten.h>
-
-  //! Return WebAssembly heap size in bytes.
-  EM_JS(size_t, OSD_MemInfo_getModuleHeapLength, (), {
-    return Module.HEAP8.length;
-  });
-#endif
-
 // =======================================================================
 // function : OSD_MemInfo
 // purpose  :
@@ -156,29 +147,6 @@ void OSD_MemInfo::Update()
   }
 
 #elif defined(__EMSCRIPTEN__)
-  if (IsActive (MemHeapUsage)
-   || IsActive (MemWorkingSet)
-   || IsActive (MemWorkingSetPeak))
-  {
-    // /proc/%d/status is not emulated - get more info from mallinfo()
-    const struct mallinfo aMI = mallinfo();
-    if (IsActive (MemHeapUsage))
-    {
-      myCounters[MemHeapUsage] = aMI.uordblks;
-    }
-    if (IsActive (MemWorkingSet))
-    {
-      myCounters[MemWorkingSet] = aMI.uordblks;
-    }
-    if (IsActive (MemWorkingSetPeak))
-    {
-      myCounters[MemWorkingSetPeak] = aMI.usmblks;
-    }
-  }
-  if (IsActive (MemVirtual))
-  {
-    myCounters[MemVirtual] = OSD_MemInfo_getModuleHeapLength();
-  }
 #elif (defined(__linux__) || defined(__linux))
   if (IsActive (MemHeapUsage))
   {
