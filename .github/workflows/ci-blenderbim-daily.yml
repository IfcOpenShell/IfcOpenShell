name: ci-blenderbim-daily

on:
  push:
    paths:
      - '.github/workflows/ci-blenderbim-daily.yml'
      - 'src/blenderbim/**'
      - 'src/ifcopenshell-python/ifcopenshell/**'
      - 'src/bcf/bcf/**'
      - 'src/ifcclash/ifcclash/**'
      - 'src/ifccobie/**'
      - 'src/ifcdiff/**'
      - 'src/ifccsv/**'
      - 'src/ifcpatch/ifcpatch/**'
      - 'src/ifc4d/ifc4d/**'
      - 'src/ifc5d/ifc5d/**'
      - 'src/ifccityjson/**'
    branches:
      - v0.8.0
  workflow_dispatch:

jobs:
  activate:
    runs-on: ubuntu-latest
    if: |
      github.repository == 'IfcOpenShell/IfcOpenShell'
    steps:
    - name: Set env
      run: echo ok go

  build:
    needs: activate
    name: ${{ matrix.config.name }}-${{ matrix.pyver }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pyver: [py39, py310, py311, py312]
        config:
          - {
            name: "Windows Build",
            short_name: win,
          }
          - {
            name: "Linux Build",
            short_name: linux,
          }
          - {
            name: "MacOS Build",
            short_name: macos,
          }
          - {
            name: "MacOS ARM Build",
            short_name: macosm1,
          }
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2 # https://github.com/actions/setup-python
        with:
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          python-version: '3.11'
      - name: Get current version
        id: version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
      - name: Get current date
        id: date
        run: echo "date=$(date +'%y%m%d')" >> $GITHUB_OUTPUT
      - name: Compile
        run: |
          cd src/blenderbim && make dist PLATFORM=${{ matrix.config.short_name }} PYVERSION=${{ matrix.pyver }}
      - name: Find zip file name
        id: find_zip
        run: |
          filepath=$(ls src/blenderbim/dist/blenderbim_*.zip)
          echo "filepath=$filepath" >> $GITHUB_OUTPUT
          echo "filename=$(basename $filepath)" >> $GITHUB_OUTPUT
      - name: Upload zip file to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.find_zip.outputs.filepath }}
          asset_name: ${{ steps.find_zip.outputs.filename }}
          release_name: "blenderbim-${{steps.version.outputs.version}}-alpha${{steps.date.outputs.date}} (unstable)"
          tag: "blenderbim-${{steps.version.outputs.version}}-alpha${{steps.date.outputs.date}}"
          overwrite: true
